//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

using FM.TR_TRKPlanningUI.Reports;
namespace FM.TR_TRKPlanningUI.Reports
{
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DstDeliverySchedules")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DstDeliverySchedules : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DstDeliverySchedules() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DstDeliverySchedules(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DstDeliverySchedules cln = ((DstDeliverySchedules)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DstDeliverySchedules";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DstDeliverySchedules.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DstDeliverySchedules ds = new DstDeliverySchedules();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnSTOPS;
            
            private global::System.Data.DataColumn columnSCHEDULE_DATE;
            
            private global::System.Data.DataColumn columnDRIVER_CODE;
            
            private global::System.Data.DataColumn columnDriver_Name;
            
            private global::System.Data.DataColumn columnDEPT;
            
            private global::System.Data.DataColumn columnVEHICLE_NO;
            
            private global::System.Data.DataColumn columnESTIMATEDTIME;
            
            private global::System.Data.DataColumn columnPLANTRIP_SEQNO;
            
            private global::System.Data.DataColumn columnCUST_CODE;
            
            private global::System.Data.DataColumn columnJOB_ACTION;
            
            private global::System.Data.DataColumn columnJOB_NUMBER;
            
            private global::System.Data.DataColumn columnJOB_SEQ_NO;
            
            private global::System.Data.DataColumn columnBooked_CBM;
            
            private global::System.Data.DataColumn columnBooked_MT;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnSTOP_ADDRESS;
            
            private global::System.Data.DataColumn columnDefault_Vehicle;
            
            private global::System.Data.DataColumn columnTOTAL_VOLUME_LOAD;
            
            private global::System.Data.DataColumn columnTOTAL_WEIGHT_LOAD;
            
            private global::System.Data.DataColumn columncustVend_Name;
            
            private global::System.Data.DataColumn columnPLANTRIP_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOPSColumn {
                get {
                    return this.columnSTOPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRIVER_CODEColumn {
                get {
                    return this.columnDRIVER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Driver_NameColumn {
                get {
                    return this.columnDriver_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTColumn {
                get {
                    return this.columnDEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VEHICLE_NOColumn {
                get {
                    return this.columnVEHICLE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ESTIMATEDTIMEColumn {
                get {
                    return this.columnESTIMATEDTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANTRIP_SEQNOColumn {
                get {
                    return this.columnPLANTRIP_SEQNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUST_CODEColumn {
                get {
                    return this.columnCUST_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_ACTIONColumn {
                get {
                    return this.columnJOB_ACTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NUMBERColumn {
                get {
                    return this.columnJOB_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_SEQ_NOColumn {
                get {
                    return this.columnJOB_SEQ_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Booked_CBMColumn {
                get {
                    return this.columnBooked_CBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Booked_MTColumn {
                get {
                    return this.columnBooked_MT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOP_ADDRESSColumn {
                get {
                    return this.columnSTOP_ADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Default_VehicleColumn {
                get {
                    return this.columnDefault_Vehicle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_VOLUME_LOADColumn {
                get {
                    return this.columnTOTAL_VOLUME_LOAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_WEIGHT_LOADColumn {
                get {
                    return this.columnTOTAL_WEIGHT_LOAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn custVend_NameColumn {
                get {
                    return this.columncustVend_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANTRIP_NOColumn {
                get {
                    return this.columnPLANTRIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(
                        string STOPS, 
                        System.DateTime SCHEDULE_DATE, 
                        string DRIVER_CODE, 
                        string Driver_Name, 
                        string DEPT, 
                        string VEHICLE_NO, 
                        System.DateTime ESTIMATEDTIME, 
                        int PLANTRIP_SEQNO, 
                        string CUST_CODE, 
                        string JOB_ACTION, 
                        string JOB_NUMBER, 
                        int JOB_SEQ_NO, 
                        decimal Booked_CBM, 
                        decimal Booked_MT, 
                        string REMARKS, 
                        string STOP_ADDRESS, 
                        string Default_Vehicle, 
                        decimal TOTAL_VOLUME_LOAD, 
                        decimal TOTAL_WEIGHT_LOAD, 
                        string custVend_Name, 
                        string PLANTRIP_NO) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STOPS,
                        SCHEDULE_DATE,
                        DRIVER_CODE,
                        Driver_Name,
                        DEPT,
                        VEHICLE_NO,
                        ESTIMATEDTIME,
                        PLANTRIP_SEQNO,
                        CUST_CODE,
                        JOB_ACTION,
                        JOB_NUMBER,
                        JOB_SEQ_NO,
                        Booked_CBM,
                        Booked_MT,
                        REMARKS,
                        STOP_ADDRESS,
                        Default_Vehicle,
                        TOTAL_VOLUME_LOAD,
                        TOTAL_WEIGHT_LOAD,
                        custVend_Name,
                        PLANTRIP_NO};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSTOPS = base.Columns["STOPS"];
                this.columnSCHEDULE_DATE = base.Columns["SCHEDULE_DATE"];
                this.columnDRIVER_CODE = base.Columns["DRIVER_CODE"];
                this.columnDriver_Name = base.Columns["Driver_Name"];
                this.columnDEPT = base.Columns["DEPT"];
                this.columnVEHICLE_NO = base.Columns["VEHICLE_NO"];
                this.columnESTIMATEDTIME = base.Columns["ESTIMATEDTIME"];
                this.columnPLANTRIP_SEQNO = base.Columns["PLANTRIP_SEQNO"];
                this.columnCUST_CODE = base.Columns["CUST_CODE"];
                this.columnJOB_ACTION = base.Columns["JOB_ACTION"];
                this.columnJOB_NUMBER = base.Columns["JOB_NUMBER"];
                this.columnJOB_SEQ_NO = base.Columns["JOB_SEQ_NO"];
                this.columnBooked_CBM = base.Columns["Booked_CBM"];
                this.columnBooked_MT = base.Columns["Booked_MT"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnSTOP_ADDRESS = base.Columns["STOP_ADDRESS"];
                this.columnDefault_Vehicle = base.Columns["Default_Vehicle"];
                this.columnTOTAL_VOLUME_LOAD = base.Columns["TOTAL_VOLUME_LOAD"];
                this.columnTOTAL_WEIGHT_LOAD = base.Columns["TOTAL_WEIGHT_LOAD"];
                this.columncustVend_Name = base.Columns["custVend_Name"];
                this.columnPLANTRIP_NO = base.Columns["PLANTRIP_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSTOPS = new global::System.Data.DataColumn("STOPS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOPS);
                this.columnSCHEDULE_DATE = new global::System.Data.DataColumn("SCHEDULE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnDRIVER_CODE = new global::System.Data.DataColumn("DRIVER_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRIVER_CODE);
                this.columnDriver_Name = new global::System.Data.DataColumn("Driver_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriver_Name);
                this.columnDEPT = new global::System.Data.DataColumn("DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT);
                this.columnVEHICLE_NO = new global::System.Data.DataColumn("VEHICLE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVEHICLE_NO);
                this.columnESTIMATEDTIME = new global::System.Data.DataColumn("ESTIMATEDTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTIMATEDTIME);
                this.columnPLANTRIP_SEQNO = new global::System.Data.DataColumn("PLANTRIP_SEQNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANTRIP_SEQNO);
                this.columnCUST_CODE = new global::System.Data.DataColumn("CUST_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST_CODE);
                this.columnJOB_ACTION = new global::System.Data.DataColumn("JOB_ACTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_ACTION);
                this.columnJOB_NUMBER = new global::System.Data.DataColumn("JOB_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NUMBER);
                this.columnJOB_SEQ_NO = new global::System.Data.DataColumn("JOB_SEQ_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_SEQ_NO);
                this.columnBooked_CBM = new global::System.Data.DataColumn("Booked_CBM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBooked_CBM);
                this.columnBooked_MT = new global::System.Data.DataColumn("Booked_MT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBooked_MT);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnSTOP_ADDRESS = new global::System.Data.DataColumn("STOP_ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOP_ADDRESS);
                this.columnDefault_Vehicle = new global::System.Data.DataColumn("Default_Vehicle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefault_Vehicle);
                this.columnTOTAL_VOLUME_LOAD = new global::System.Data.DataColumn("TOTAL_VOLUME_LOAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_VOLUME_LOAD);
                this.columnTOTAL_WEIGHT_LOAD = new global::System.Data.DataColumn("TOTAL_WEIGHT_LOAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_WEIGHT_LOAD);
                this.columncustVend_Name = new global::System.Data.DataColumn("custVend_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustVend_Name);
                this.columnPLANTRIP_NO = new global::System.Data.DataColumn("PLANTRIP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANTRIP_NO);
                this.columnSTOPS.ReadOnly = true;
                this.columnSTOPS.MaxLength = 12;
                this.columnSCHEDULE_DATE.ReadOnly = true;
                this.columnDRIVER_CODE.ReadOnly = true;
                this.columnDRIVER_CODE.MaxLength = 10;
                this.columnDriver_Name.ReadOnly = true;
                this.columnDriver_Name.MaxLength = 50;
                this.columnDEPT.ReadOnly = true;
                this.columnDEPT.MaxLength = 12;
                this.columnVEHICLE_NO.ReadOnly = true;
                this.columnVEHICLE_NO.MaxLength = 12;
                this.columnESTIMATEDTIME.ReadOnly = true;
                this.columnPLANTRIP_SEQNO.ReadOnly = true;
                this.columnCUST_CODE.ReadOnly = true;
                this.columnCUST_CODE.MaxLength = 12;
                this.columnJOB_ACTION.ReadOnly = true;
                this.columnJOB_ACTION.MaxLength = 7;
                this.columnJOB_NUMBER.ReadOnly = true;
                this.columnJOB_NUMBER.MaxLength = 26;
                this.columnJOB_SEQ_NO.ReadOnly = true;
                this.columnBooked_CBM.ReadOnly = true;
                this.columnBooked_MT.ReadOnly = true;
                this.columnREMARKS.ReadOnly = true;
                this.columnREMARKS.MaxLength = 1073741823;
                this.columnSTOP_ADDRESS.ReadOnly = true;
                this.columnSTOP_ADDRESS.MaxLength = 206;
                this.columnDefault_Vehicle.ReadOnly = true;
                this.columnDefault_Vehicle.MaxLength = 12;
                this.columnTOTAL_VOLUME_LOAD.ReadOnly = true;
                this.columnTOTAL_WEIGHT_LOAD.ReadOnly = true;
                this.columncustVend_Name.ReadOnly = true;
                this.columncustVend_Name.MaxLength = 50;
                this.columnPLANTRIP_NO.ReadOnly = true;
                this.columnPLANTRIP_NO.MaxLength = 23;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DstDeliverySchedules ds = new DstDeliverySchedules();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STOPS {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.STOPSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOPS\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.STOPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SCHEDULE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.SCHEDULE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULE_DATE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.SCHEDULE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DRIVER_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.DRIVER_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRIVER_CODE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DRIVER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Driver_Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Driver_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Driver_Name\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Driver_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPT {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.DEPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPT\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VEHICLE_NO {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.VEHICLE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VEHICLE_NO\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.VEHICLE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ESTIMATEDTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.ESTIMATEDTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTIMATEDTIME\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ESTIMATEDTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLANTRIP_SEQNO {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.PLANTRIP_SEQNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLANTRIP_SEQNO\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PLANTRIP_SEQNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUST_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CUST_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUST_CODE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CUST_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_ACTION {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.JOB_ACTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOB_ACTION\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.JOB_ACTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.JOB_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOB_NUMBER\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.JOB_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JOB_SEQ_NO {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.JOB_SEQ_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOB_SEQ_NO\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.JOB_SEQ_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Booked_CBM {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.Booked_CBMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Booked_CBM\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Booked_CBMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Booked_MT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.Booked_MTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Booked_MT\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Booked_MTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STOP_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.STOP_ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOP_ADDRESS\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.STOP_ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Default_Vehicle {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Default_VehicleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Default_Vehicle\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Default_VehicleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_VOLUME_LOAD {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.TOTAL_VOLUME_LOADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_VOLUME_LOAD\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.TOTAL_VOLUME_LOADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_WEIGHT_LOAD {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.TOTAL_WEIGHT_LOADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_WEIGHT_LOAD\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.TOTAL_WEIGHT_LOADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string custVend_Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.custVend_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'custVend_Name\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.custVend_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PLANTRIP_NO {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PLANTRIP_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLANTRIP_NO\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PLANTRIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOPSNull() {
                return this.IsNull(this.tableDataTable1.STOPSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOPSNull() {
                this[this.tableDataTable1.STOPSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEDULE_DATENull() {
                return this.IsNull(this.tableDataTable1.SCHEDULE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEDULE_DATENull() {
                this[this.tableDataTable1.SCHEDULE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDRIVER_CODENull() {
                return this.IsNull(this.tableDataTable1.DRIVER_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDRIVER_CODENull() {
                this[this.tableDataTable1.DRIVER_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDriver_NameNull() {
                return this.IsNull(this.tableDataTable1.Driver_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDriver_NameNull() {
                this[this.tableDataTable1.Driver_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEPTNull() {
                return this.IsNull(this.tableDataTable1.DEPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEPTNull() {
                this[this.tableDataTable1.DEPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVEHICLE_NONull() {
                return this.IsNull(this.tableDataTable1.VEHICLE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVEHICLE_NONull() {
                this[this.tableDataTable1.VEHICLE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsESTIMATEDTIMENull() {
                return this.IsNull(this.tableDataTable1.ESTIMATEDTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetESTIMATEDTIMENull() {
                this[this.tableDataTable1.ESTIMATEDTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPLANTRIP_SEQNONull() {
                return this.IsNull(this.tableDataTable1.PLANTRIP_SEQNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPLANTRIP_SEQNONull() {
                this[this.tableDataTable1.PLANTRIP_SEQNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUST_CODENull() {
                return this.IsNull(this.tableDataTable1.CUST_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUST_CODENull() {
                this[this.tableDataTable1.CUST_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOB_ACTIONNull() {
                return this.IsNull(this.tableDataTable1.JOB_ACTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOB_ACTIONNull() {
                this[this.tableDataTable1.JOB_ACTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOB_NUMBERNull() {
                return this.IsNull(this.tableDataTable1.JOB_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOB_NUMBERNull() {
                this[this.tableDataTable1.JOB_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOB_SEQ_NONull() {
                return this.IsNull(this.tableDataTable1.JOB_SEQ_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOB_SEQ_NONull() {
                this[this.tableDataTable1.JOB_SEQ_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBooked_CBMNull() {
                return this.IsNull(this.tableDataTable1.Booked_CBMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBooked_CBMNull() {
                this[this.tableDataTable1.Booked_CBMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBooked_MTNull() {
                return this.IsNull(this.tableDataTable1.Booked_MTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBooked_MTNull() {
                this[this.tableDataTable1.Booked_MTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tableDataTable1.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKSNull() {
                this[this.tableDataTable1.REMARKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOP_ADDRESSNull() {
                return this.IsNull(this.tableDataTable1.STOP_ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOP_ADDRESSNull() {
                this[this.tableDataTable1.STOP_ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefault_VehicleNull() {
                return this.IsNull(this.tableDataTable1.Default_VehicleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefault_VehicleNull() {
                this[this.tableDataTable1.Default_VehicleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_VOLUME_LOADNull() {
                return this.IsNull(this.tableDataTable1.TOTAL_VOLUME_LOADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_VOLUME_LOADNull() {
                this[this.tableDataTable1.TOTAL_VOLUME_LOADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_WEIGHT_LOADNull() {
                return this.IsNull(this.tableDataTable1.TOTAL_WEIGHT_LOADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_WEIGHT_LOADNull() {
                this[this.tableDataTable1.TOTAL_WEIGHT_LOADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscustVend_NameNull() {
                return this.IsNull(this.tableDataTable1.custVend_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcustVend_NameNull() {
                this[this.tableDataTable1.custVend_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPLANTRIP_NONull() {
                return this.IsNull(this.tableDataTable1.PLANTRIP_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPLANTRIP_NONull() {
                this[this.tableDataTable1.PLANTRIP_NOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FM.TruckPlanning.Reports.DstDeliverySchedulesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable1";
            tableMapping.ColumnMappings.Add("STOPS", "STOPS");
            tableMapping.ColumnMappings.Add("SCHEDULE_DATE", "SCHEDULE_DATE");
            tableMapping.ColumnMappings.Add("DRIVER_CODE", "DRIVER_CODE");
            tableMapping.ColumnMappings.Add("Driver_Name", "Driver_Name");
            tableMapping.ColumnMappings.Add("DEPT", "DEPT");
            tableMapping.ColumnMappings.Add("VEHICLE_NO", "VEHICLE_NO");
            tableMapping.ColumnMappings.Add("ESTIMATEDTIME", "ESTIMATEDTIME");
            tableMapping.ColumnMappings.Add("PLANTRIP_SEQNO", "PLANTRIP_SEQNO");
            tableMapping.ColumnMappings.Add("CUST_CODE", "CUST_CODE");
            tableMapping.ColumnMappings.Add("JOB_ACTION", "JOB_ACTION");
            tableMapping.ColumnMappings.Add("JOB_NUMBER", "JOB_NUMBER");
            tableMapping.ColumnMappings.Add("JOB_SEQ_NO", "JOB_SEQ_NO");
            tableMapping.ColumnMappings.Add("Booked_CBM", "Booked_CBM");
            tableMapping.ColumnMappings.Add("Booked_MT", "Booked_MT");
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS");
            tableMapping.ColumnMappings.Add("STOP_ADDRESS", "STOP_ADDRESS");
            tableMapping.ColumnMappings.Add("Default_Vehicle", "Default_Vehicle");
            tableMapping.ColumnMappings.Add("TOTAL_VOLUME_LOAD", "TOTAL_VOLUME_LOAD");
            tableMapping.ColumnMappings.Add("TOTAL_WEIGHT_LOAD", "TOTAL_WEIGHT_LOAD");
            tableMapping.ColumnMappings.Add("custVend_Name", "custVend_Name");
            tableMapping.ColumnMappings.Add("PLANTRIP_NO", "PLANTRIP_NO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select  \r\n ptstj.PLANTRIP_NO,\r\nISNULL((select SUM(tpstj.VOLUME) from TRK_PLAN_SUB" +
                "_TRIP_JOB_TBL as tpstj\r\n\t\t\tinner join TRK_PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst." +
                "PLANTRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.START_STOP = ptst.START_STOP\r\n\t\t\t" +
                "),0) as TOTAL_VOLUME_LOAD, \r\nISNULL((select SUM(tpstj.WEIGHT) from TRK_PLAN_SUB_" +
                "TRIP_JOB_TBL as tpstj\r\n\t\t\tinner join TRK_PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst.P" +
                "LANTRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.START_STOP = ptst.START_STOP\r\n\t\t\t)" +
                ",0) as TOTAL_WEIGHT_LOAD, \t\t\t\r\nptst.START_STOP as STOPS,\r\n(select isnull(Op_Add1" +
                " + \', \', \'\')  + isnull(Op_Add2+ \', \',\'\')  + isnull(Op_Add3+ \', \',\'\')  + isnull(O" +
                "p_Add4,\'\') \r\n\t\tfrom CRT_Operation_Database_Tbl\r\n\t\twhere Operation_Code = ptst.ST" +
                "ART_STOP) as STOP_ADDRESS,\r\nptt.SCHEDULE_DATE,\r\n\t\tptt.DRIVER_NO as DRIVER_CODE,\r" +
                "\n\t\tdrv.Driver_Name,\r\n\t\tdrv.Default_Vehicle,\r\n\t\tptt.DEPT,\r\n\t\tptt.VEHICLE_NO,\r\n\t\tp" +
                "tst.START_TIME as ESTIMATEDTIME ,\r\n\t\tptst.SEQ_NO as PLANTRIP_SEQNO,\r\n\t\tjobMain.C" +
                "UST_CODE, custMaster.custVend_Name,\r\n\t\tcase ptst.START_STOP\r\n\t\t\twhen jt.TO_STOP " +
                "then \'Deliver\'\r\n\t\t\twhen jt.FROM_STOP then \'Pickup\'\r\n\t\t\telse \'Transit\'\t\t\t\r\n\t\tend " +
                "as JOB_ACTION,\r\n\t\tjobMain.JOB_NUMBER,\r\n\t\tptstj.JOB_SEQ_NO,\r\n\t\tptstj.VOLUME as Bo" +
                "oked_CBM,\r\n\t\tptstj.WEIGHT as Booked_MT,\r\n\t\tjt.REMARKS\r\n\t\t\t\t\r\nfrom TRK_PLAN_SUB_T" +
                "RIP_JOB_TBL as ptstj\r\ninner join TRK_PLAN_TRIP_TBL as ptt\r\nON ptt.PLANTRIP_NO = " +
                "ptstj.PLANTRIP_NO\r\n\r\ninner join TRK_PLAN_SUB_TRIP_TBL as ptst\r\nON ptstj.SEQ_NO =" +
                " ptst.SEQ_NO\r\nand ptstj.PLANTRIP_NO = ptst.PLANTRIP_NO\r\n\r\ninner join TRK_JOB_DET" +
                "AIL_TRIP_Tbl as jt\r\nON jt.JOB_ID = ptstj.JOB_ID\r\nand jt.JOBTRIP_SEQ_NO = ptstj.J" +
                "OB_SEQ_NO\r\n\r\ninner join TRK_JOB_MAIN_Tbl as jobMain\r\nON jobMain.JOB_ID = ptstj.J" +
                "OB_ID\r\ninner join ACT_CustVend_Master_Tbl as custMaster\r\nON custMaster.CustVend_" +
                "Code = jobMain.CUST_CODE\r\ninner join TPT_Driver_Tbl as drv\r\nON drv.Driver_Code =" +
                " ptt.DRIVER_NO\r\ninner join CRT_Operation_Database_Tbl as Optbl\r\non Optbl.Operati" +
                "on_Code = ptst.START_STOP\r\n\r\nWHERE ptst.START_STOP in  (select distinct plst.STA" +
                "RT_STOP from TRK_PLAN_SUB_TRIP_TBL as plst \r\n\t\t\t\t\t\t\twhere Convert(varchar(10), p" +
                "lst.START_TIME, 120) = @SCHEDULEDATE)\r\nand ptt.SCHEDULE_DATE = @SCHEDULEDATE\r\nan" +
                "d drv.Driver_Name >= @FROM_DRIVER\r\nand drv.Driver_Name <= @TO_DRIVER\r\n--and ptst" +
                ".END_STOP = jt.TO_STOP\r\n\r\nUNION ALL\r\n\r\nselect \r\n ptstj.PLANTRIP_NO,\r\nISNULL((sel" +
                "ect SUM(tpstj.VOLUME) from TRK_PLAN_SUB_TRIP_JOB_TBL as tpstj\r\n\t\t\tleft join TRK_" +
                "PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst.PLANTRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere " +
                "tpst.END_STOP = ptst.END_STOP),0) as TOTAL_VOLUME_LOAD,  \r\nISNULL((select SUM(tp" +
                "stj.WEIGHT) from TRK_PLAN_SUB_TRIP_JOB_TBL as tpstj\r\n\t\t\tleft join TRK_PLAN_SUB_T" +
                "RIP_TBL as tpst\r\n\t\t\ton tpst.PLANTRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.END_S" +
                "TOP = ptst.END_STOP),0) as TOTAL_WEIGHT_LOAD, \r\nptst.END_STOP as STOPS,\r\n(select" +
                " isnull(Op_Add1 + \', \', \'\')  + isnull(Op_Add2+ \', \',\'\')  + isnull(Op_Add3+ \', \'," +
                "\'\')  + isnull(Op_Add4,\'\') \r\n\t\tfrom CRT_Operation_Database_Tbl\r\n\t\twhere Operation" +
                "_Code = ptst.END_STOP) as STOP_ADDRESS,\r\nptt.SCHEDULE_DATE,\r\n\t\tptt.DRIVER_NO as " +
                "DRIVER_CODE,\r\n\t\tdrv.Driver_Name,\r\n\t\tdrv.Default_Vehicle,\r\n\t\tptt.DEPT,\r\n\t\tptt.VEH" +
                "ICLE_NO,\r\n\t\tptst.END_TIME as ESTIMATEDTIME ,\r\n\t\tptst.SEQ_NO as PLANTRIP_SEQNO,\r\n" +
                "\t\tjobMain.CUST_CODE, custMaster.CustVend_Name,\r\n\t\tcase ptst.END_STOP\r\n\t\t\twhen jt" +
                ".TO_STOP then \'Deliver\'\r\n\t\t\twhen jt.FROM_STOP then \'Pickup\'\r\n\t\t\telse \'Transit\'\t\t" +
                "\t\r\n\t\tend as JOB_ACTION,\r\n\t\tjobMain.JOB_NUMBER,\r\n\t\tptstj.JOB_SEQ_NO,\r\n\t\tptstj.VOL" +
                "UME as Booked_CBM,\r\n\t\tptstj.WEIGHT as Booked_MT,\r\n\t\tjt.REMARKS\r\n\t\t\t\t\r\nfrom TRK_P" +
                "LAN_SUB_TRIP_JOB_TBL as ptstj\r\ninner join TRK_PLAN_TRIP_TBL as ptt\r\nON ptt.PLANT" +
                "RIP_NO = ptstj.PLANTRIP_NO\r\n\r\ninner join TRK_PLAN_SUB_TRIP_TBL as ptst\r\nON ptstj" +
                ".SEQ_NO = ptst.SEQ_NO\r\nand ptstj.PLANTRIP_NO = ptst.PLANTRIP_NO\r\n\r\ninner join TR" +
                "K_JOB_DETAIL_TRIP_Tbl as jt\r\nON jt.JOB_ID = ptstj.JOB_ID\r\nand jt.JOBTRIP_SEQ_NO " +
                "= ptstj.JOB_SEQ_NO\r\n\r\ninner join TRK_JOB_MAIN_Tbl as jobMain\r\nON jobMain.JOB_ID " +
                "= ptstj.JOB_ID\r\ninner join ACT_CustVend_Master_Tbl as custMaster\r\nON custMaster." +
                "CustVend_Code = jobMain.CUST_CODE\r\ninner join TPT_Driver_Tbl as drv\r\nON drv.Driv" +
                "er_Code = ptt.DRIVER_NO\r\ninner join CRT_Operation_Database_Tbl as Optbl\r\non Optb" +
                "l.Operation_Code = ptst.END_STOP\r\n\r\n\r\nWHERE ptst.END_STOP in (select distinct pl" +
                "st.END_STOP from TRK_PLAN_SUB_TRIP_TBL as plst \r\n\twhere Convert(varchar(10), pls" +
                "t.END_TIME, 120) = @SCHEDULEDATE)\r\nand ptt.SCHEDULE_DATE = @SCHEDULEDATE\r\nand dr" +
                "v.Driver_Name >= @FROM_DRIVER\r\nand drv.Driver_Name <= @TO_DRIVER\r\n--and ptst.END" +
                "_STOP = jt.TO_STOP\r\n\r\nORDER BY ptst.START_TIME,ptstj.PLANTRIP_NO,ptst.SEQ_NO\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCHEDULEDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SCHEDULE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FROM_DRIVER", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Driver_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TO_DRIVER", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Driver_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "select  \r\n ptstj.PLANTRIP_NO,\r\nISNULL((select SUM(tpstj.VOLUME) from TRK_PLAN_SUB" +
                "_TRIP_JOB_TBL as tpstj\r\n\t\t\tinner join TRK_PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst." +
                "PLANTRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.START_STOP = ptst.START_STOP\r\n\t\t\t" +
                "),0) as TOTAL_VOLUME_LOAD, \r\nISNULL((select SUM(tpstj.WEIGHT) from TRK_PLAN_SUB_" +
                "TRIP_JOB_TBL as tpstj\r\n\t\t\tinner join TRK_PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst.P" +
                "LANTRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.START_STOP = ptst.START_STOP\r\n\t\t\t)" +
                ",0) as TOTAL_WEIGHT_LOAD, \t\t\t\r\nptst.START_STOP as STOPS,\r\n(select isnull(Op_Add1" +
                ", \'\') + \', \' + isnull(Op_Add2,\'\') + \', \' + isnull(Op_Add3,\'\') + \', \' + isnull(Op" +
                "_Add4,\'\') \r\n\t\tfrom CRT_Operation_Database_Tbl\r\n\t\twhere Operation_Code = ptst.STA" +
                "RT_STOP) as STOP_ADDRESS,\r\nptt.SCHEDULE_DATE,\r\n\t\tptt.DRIVER_NO as DRIVER_CODE,\r\n" +
                "\t\tdrv.Driver_Name,\r\n                                drv.Default_Vehicle,\r\n\t\tptt." +
                "DEPT,\r\n\t\tptt.VEHICLE_NO,\r\n\t\tptst.START_TIME as ESTIMATEDTIME ,\r\n\t\tptst.SEQ_NO as" +
                " PLANTRIP_SEQNO,\r\n\t\tjobMain.CUST_CODE, custMaster.CustVend_Name,\r\n\t\tcase ptst.ST" +
                "ART_STOP\r\n\t\t\twhen jt.TO_STOP then \'Deliver\'\r\n\t\t\twhen jt.FROM_STOP then \'Pickup\'\r" +
                "\n\t\t\telse \'Transit\'\t\t\t\r\n\t\tend as JOB_ACTION,\r\n\t\tjobMain.JOB_NUMBER,\r\n\t\tptstj.JOB_" +
                "SEQ_NO,\r\n\t\tptstj.VOLUME as Booked_CBM,\r\n\t\tptstj.WEIGHT as Booked_MT,\r\n\t\tjt.REMAR" +
                "KS\r\n\t\t\t\t\r\nfrom TRK_PLAN_SUB_TRIP_JOB_TBL as ptstj\r\ninner join TRK_PLAN_TRIP_TBL " +
                "as ptt\r\nON ptt.PLANTRIP_NO = ptstj.PLANTRIP_NO\r\n\r\ninner join TRK_PLAN_SUB_TRIP_T" +
                "BL as ptst\r\nON ptstj.SEQ_NO = ptst.SEQ_NO\r\nand ptstj.PLANTRIP_NO = ptst.PLANTRIP" +
                "_NO\r\n\r\ninner join TRK_JOB_DETAIL_TRIP_Tbl as jt\r\nON jt.JOB_ID = ptstj.JOB_ID\r\nan" +
                "d jt.JOBTRIP_SEQ_NO = ptstj.JOB_SEQ_NO\r\n\r\ninner join TRK_JOB_MAIN_Tbl as jobMain" +
                "\r\nON jobMain.JOB_ID = ptstj.JOB_ID\r\ninner join ACT_CustVend_Master_Tbl as custMa" +
                "ster\r\nON custMaster.CustVend_Code = jobMain.CUST_CODE\r\ninner join TPT_Driver_Tbl" +
                " as drv\r\nON drv.Driver_Code = ptt.DRIVER_NO\r\ninner join CRT_Operation_Database_T" +
                "bl as Optbl\r\non Optbl.Operation_Code = ptst.START_STOP\r\n\r\nWHERE ptst.START_STOP " +
                "in  (select distinct plst.START_STOP from TRK_PLAN_SUB_TRIP_TBL as plst \r\n\t\t\t\t\t\t" +
                "\twhere Convert(varchar(10), plst.START_TIME, 120) = @SCHEDULEDATE)\r\nand ptt.SCHE" +
                "DULE_DATE = @SCHEDULEDATE\r\n--and ptst.END_STOP = jt.TO_STOP\r\n\r\nUNION ALL\r\n\r\nsele" +
                "ct  \r\n ptstj.PLANTRIP_NO,\r\nISNULL((select SUM(tpstj.VOLUME) from TRK_PLAN_SUB_TR" +
                "IP_JOB_TBL as tpstj\r\n\t\t\tleft join TRK_PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst.PLAN" +
                "TRIP_NO = ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.END_STOP = ptst.END_STOP),0) as TOTAL" +
                "_VOLUME_LOAD,  \r\nISNULL((select SUM(tpstj.WEIGHT) from TRK_PLAN_SUB_TRIP_JOB_TBL" +
                " as tpstj\r\n\t\t\tleft join TRK_PLAN_SUB_TRIP_TBL as tpst\r\n\t\t\ton tpst.PLANTRIP_NO = " +
                "ptstj.PLANTRIP_NO\r\n\t\t\twhere tpst.END_STOP = ptst.END_STOP),0) as TOTAL_WEIGHT_LO" +
                "AD, \r\nptst.END_STOP as STOPS,\r\n(select isnull(Op_Add1, \'\') + \', \' + isnull(Op_Ad" +
                "d2,\'\') + \', \' + isnull(Op_Add3,\'\') + \', \' + isnull(Op_Add4,\'\') \r\n\t\tfrom CRT_Oper" +
                "ation_Database_Tbl\r\n\t\twhere Operation_Code = ptst.END_STOP) as STOP_ADDRESS,\r\npt" +
                "t.SCHEDULE_DATE,\r\n\t\tptt.DRIVER_NO as DRIVER_CODE,\r\n\t\tdrv.Driver_Name,\r\n         " +
                "                       drv.Default_Vehicle,\r\n\t\tptt.DEPT,\r\n\t\tptt.VEHICLE_NO,\r\n\t\tp" +
                "tst.END_TIME as ESTIMATEDTIME ,\r\n\t\tptst.SEQ_NO as PLANTRIP_SEQNO,\r\n\t\tjobMain.CUS" +
                "T_CODE, custMaster.CustVend_Name,\r\n\t\tcase ptst.END_STOP\r\n\t\t\twhen jt.TO_STOP then" +
                " \'Deliver\'\r\n\t\t\twhen jt.FROM_STOP then \'Pickup\'\r\n\t\t\telse \'Transit\'\t\t\t\r\n\t\tend as J" +
                "OB_ACTION,\r\n\t\tjobMain.JOB_NUMBER,\r\n\t\tptstj.JOB_SEQ_NO,\r\n\t\tptstj.VOLUME as Booked" +
                "_CBM,\r\n\t\tptstj.WEIGHT as Booked_MT,\r\n\t\tjt.REMARKS\r\n\t\t\t\t\r\nfrom TRK_PLAN_SUB_TRIP_" +
                "JOB_TBL as ptstj\r\ninner join TRK_PLAN_TRIP_TBL as ptt\r\nON ptt.PLANTRIP_NO = ptst" +
                "j.PLANTRIP_NO\r\n\r\ninner join TRK_PLAN_SUB_TRIP_TBL as ptst\r\nON ptstj.SEQ_NO = pts" +
                "t.SEQ_NO\r\nand ptstj.PLANTRIP_NO = ptst.PLANTRIP_NO\r\n\r\ninner join TRK_JOB_DETAIL_" +
                "TRIP_Tbl as jt\r\nON jt.JOB_ID = ptstj.JOB_ID\r\nand jt.JOBTRIP_SEQ_NO = ptstj.JOB_S" +
                "EQ_NO\r\n\r\ninner join TRK_JOB_MAIN_Tbl as jobMain\r\nON jobMain.JOB_ID = ptstj.JOB_I" +
                "D\r\ninner join ACT_CustVend_Master_Tbl as custMaster\r\nON custMaster.CustVend_Code" +
                " = jobMain.CUST_CODE\r\ninner join TPT_Driver_Tbl as drv\r\nON drv.Driver_Code = ptt" +
                ".DRIVER_NO\r\ninner join CRT_Operation_Database_Tbl as Optbl\r\non Optbl.Operation_C" +
                "ode = ptst.END_STOP\r\n\r\n\r\nWHERE ptst.END_STOP in (select distinct plst.END_STOP f" +
                "rom TRK_PLAN_SUB_TRIP_TBL as plst \r\n\twhere Convert(varchar(10), plst.END_TIME, 1" +
                "20) = @SCHEDULEDATE)\r\nand ptt.SCHEDULE_DATE = @SCHEDULEDATE\r\n--and ptst.END_STOP" +
                " = jt.TO_STOP\r\n\r\nORDER BY ptst.START_TIME,ptstj.PLANTRIP_NO,ptst.SEQ_NO";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCHEDULEDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SCHEDULE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByDriver(DstDeliverySchedules.DataTable1DataTable dataTable, System.DateTime SCHEDULEDATE, string FROM_DRIVER, string TO_DRIVER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SCHEDULEDATE));
            if ((FROM_DRIVER == null)) {
                throw new global::System.ArgumentNullException("FROM_DRIVER");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FROM_DRIVER));
            }
            if ((TO_DRIVER == null)) {
                throw new global::System.ArgumentNullException("TO_DRIVER");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(TO_DRIVER));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DstDeliverySchedules.DataTable1DataTable GetDataByDriver(System.DateTime SCHEDULEDATE, string FROM_DRIVER, string TO_DRIVER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SCHEDULEDATE));
            if ((FROM_DRIVER == null)) {
                throw new global::System.ArgumentNullException("FROM_DRIVER");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FROM_DRIVER));
            }
            if ((TO_DRIVER == null)) {
                throw new global::System.ArgumentNullException("TO_DRIVER");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(TO_DRIVER));
            }
            DstDeliverySchedules.DataTable1DataTable dataTable = new DstDeliverySchedules.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill(DstDeliverySchedules.DataTable1DataTable dataTable, System.DateTime SCHEDULEDATE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SCHEDULEDATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstDeliverySchedules.DataTable1DataTable GetData(System.DateTime SCHEDULEDATE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SCHEDULEDATE));
            DstDeliverySchedules.DataTable1DataTable dataTable = new DstDeliverySchedules.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DstDeliverySchedules dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DstDeliverySchedules dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DstDeliverySchedules dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DstDeliverySchedules dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591