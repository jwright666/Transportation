//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FM.TransportMarket.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DstQuotation")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DstQuotation : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DstQuotation() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DstQuotation(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DstQuotation cln = ((DstQuotation)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DstQuotation";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DstQuotation.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DstQuotation ds = new DstQuotation();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnCUST_CODE;
            
            private global::System.Data.DataColumn columnCUSTOMER_GROUP_NO;
            
            private global::System.Data.DataColumn columnSALESMAN_NO;
            
            private global::System.Data.DataColumn columnQUOTATION_DATE;
            
            private global::System.Data.DataColumn columnDATE_VALID_TO;
            
            private global::System.Data.DataColumn columnPAYMENT_TERMS;
            
            private global::System.Data.DataColumn columnCONDITIONS;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnSEQUENCE_NO;
            
            private global::System.Data.DataColumn columnCHARGE_CODE;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnCURRENCY_CODE;
            
            private global::System.Data.DataColumn columnIS_CONTAINER_MOVEMENT;
            
            private global::System.Data.DataColumn columnCONTAINER_CODE;
            
            private global::System.Data.DataColumn columnIS_OVERWEIGHT;
            
            private global::System.Data.DataColumn columnBREAK_CEILING;
            
            private global::System.Data.DataColumn columnUNIT_RATE;
            
            private global::System.Data.DataColumn columnQUOTATION_ID;
            
            private global::System.Data.DataColumn columnQUOTATION_NO;
            
            private global::System.Data.DataColumn columnDATE_VALID_FROM;
            
            private global::System.Data.DataColumn columnREMARKS2;
            
            private global::System.Data.DataColumn columnREMARKS3;
            
            private global::System.Data.DataColumn columnREMARKS4;
            
            private global::System.Data.DataColumn columnREMARKS5;
            
            private global::System.Data.DataColumn columnCustVend_Name;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnAddress3;
            
            private global::System.Data.DataColumn columnAddress4;
            
            private global::System.Data.DataColumn columnRATE_TYPE;
            
            private global::System.Data.DataColumn columnCUSTOMER_CREDIT_LIMIT;
            
            private global::System.Data.DataColumn columnCCUSTOMER_TERMS;
            
            private global::System.Data.DataColumn columnIS_LUMP_SUM;
            
            private global::System.Data.DataColumn columnLUMP_SUM_VALUE;
            
            private global::System.Data.DataColumn columnPriceBreakRemarks;
            
            private global::System.Data.DataColumn columnMINIMUM_VALUE;
            
            private global::System.Data.DataColumn columnPackageRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUST_CODEColumn {
                get {
                    return this.columnCUST_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_GROUP_NOColumn {
                get {
                    return this.columnCUSTOMER_GROUP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALESMAN_NOColumn {
                get {
                    return this.columnSALESMAN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUOTATION_DATEColumn {
                get {
                    return this.columnQUOTATION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_VALID_TOColumn {
                get {
                    return this.columnDATE_VALID_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYMENT_TERMSColumn {
                get {
                    return this.columnPAYMENT_TERMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONDITIONSColumn {
                get {
                    return this.columnCONDITIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQUENCE_NOColumn {
                get {
                    return this.columnSEQUENCE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARGE_CODEColumn {
                get {
                    return this.columnCHARGE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CURRENCY_CODEColumn {
                get {
                    return this.columnCURRENCY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_CONTAINER_MOVEMENTColumn {
                get {
                    return this.columnIS_CONTAINER_MOVEMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONTAINER_CODEColumn {
                get {
                    return this.columnCONTAINER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_OVERWEIGHTColumn {
                get {
                    return this.columnIS_OVERWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BREAK_CEILINGColumn {
                get {
                    return this.columnBREAK_CEILING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIT_RATEColumn {
                get {
                    return this.columnUNIT_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUOTATION_IDColumn {
                get {
                    return this.columnQUOTATION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUOTATION_NOColumn {
                get {
                    return this.columnQUOTATION_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_VALID_FROMColumn {
                get {
                    return this.columnDATE_VALID_FROM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKS2Column {
                get {
                    return this.columnREMARKS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKS3Column {
                get {
                    return this.columnREMARKS3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKS4Column {
                get {
                    return this.columnREMARKS4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKS5Column {
                get {
                    return this.columnREMARKS5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustVend_NameColumn {
                get {
                    return this.columnCustVend_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address3Column {
                get {
                    return this.columnAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address4Column {
                get {
                    return this.columnAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RATE_TYPEColumn {
                get {
                    return this.columnRATE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_CREDIT_LIMITColumn {
                get {
                    return this.columnCUSTOMER_CREDIT_LIMIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCUSTOMER_TERMSColumn {
                get {
                    return this.columnCCUSTOMER_TERMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_LUMP_SUMColumn {
                get {
                    return this.columnIS_LUMP_SUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LUMP_SUM_VALUEColumn {
                get {
                    return this.columnLUMP_SUM_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceBreakRemarksColumn {
                get {
                    return this.columnPriceBreakRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MINIMUM_VALUEColumn {
                get {
                    return this.columnMINIMUM_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackageRemarkColumn {
                get {
                    return this.columnPackageRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(
                        string CUST_CODE, 
                        string CUSTOMER_GROUP_NO, 
                        string SALESMAN_NO, 
                        System.DateTime QUOTATION_DATE, 
                        System.DateTime DATE_VALID_TO, 
                        string PAYMENT_TERMS, 
                        string CONDITIONS, 
                        string REMARKS, 
                        int SEQUENCE_NO, 
                        string CHARGE_CODE, 
                        string DESCRIPTION, 
                        string UOM, 
                        string CURRENCY_CODE, 
                        string IS_CONTAINER_MOVEMENT, 
                        string CONTAINER_CODE, 
                        string IS_OVERWEIGHT, 
                        decimal BREAK_CEILING, 
                        decimal UNIT_RATE, 
                        int QUOTATION_ID, 
                        string QUOTATION_NO, 
                        System.DateTime DATE_VALID_FROM, 
                        string REMARKS2, 
                        string REMARKS3, 
                        string REMARKS4, 
                        string REMARKS5, 
                        string CustVend_Name, 
                        string Address1, 
                        string Address2, 
                        string Address3, 
                        string Address4, 
                        string RATE_TYPE, 
                        decimal CUSTOMER_CREDIT_LIMIT, 
                        byte CCUSTOMER_TERMS, 
                        string IS_LUMP_SUM, 
                        decimal LUMP_SUM_VALUE, 
                        string PriceBreakRemarks, 
                        decimal MINIMUM_VALUE, 
                        string PackageRemark) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CUST_CODE,
                        CUSTOMER_GROUP_NO,
                        SALESMAN_NO,
                        QUOTATION_DATE,
                        DATE_VALID_TO,
                        PAYMENT_TERMS,
                        CONDITIONS,
                        REMARKS,
                        SEQUENCE_NO,
                        CHARGE_CODE,
                        DESCRIPTION,
                        UOM,
                        CURRENCY_CODE,
                        IS_CONTAINER_MOVEMENT,
                        CONTAINER_CODE,
                        IS_OVERWEIGHT,
                        BREAK_CEILING,
                        UNIT_RATE,
                        QUOTATION_ID,
                        QUOTATION_NO,
                        DATE_VALID_FROM,
                        REMARKS2,
                        REMARKS3,
                        REMARKS4,
                        REMARKS5,
                        CustVend_Name,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        RATE_TYPE,
                        CUSTOMER_CREDIT_LIMIT,
                        CCUSTOMER_TERMS,
                        IS_LUMP_SUM,
                        LUMP_SUM_VALUE,
                        PriceBreakRemarks,
                        MINIMUM_VALUE,
                        PackageRemark};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCUST_CODE = base.Columns["CUST_CODE"];
                this.columnCUSTOMER_GROUP_NO = base.Columns["CUSTOMER_GROUP_NO"];
                this.columnSALESMAN_NO = base.Columns["SALESMAN_NO"];
                this.columnQUOTATION_DATE = base.Columns["QUOTATION_DATE"];
                this.columnDATE_VALID_TO = base.Columns["DATE_VALID_TO"];
                this.columnPAYMENT_TERMS = base.Columns["PAYMENT_TERMS"];
                this.columnCONDITIONS = base.Columns["CONDITIONS"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnSEQUENCE_NO = base.Columns["SEQUENCE_NO"];
                this.columnCHARGE_CODE = base.Columns["CHARGE_CODE"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnUOM = base.Columns["UOM"];
                this.columnCURRENCY_CODE = base.Columns["CURRENCY_CODE"];
                this.columnIS_CONTAINER_MOVEMENT = base.Columns["IS_CONTAINER_MOVEMENT"];
                this.columnCONTAINER_CODE = base.Columns["CONTAINER_CODE"];
                this.columnIS_OVERWEIGHT = base.Columns["IS_OVERWEIGHT"];
                this.columnBREAK_CEILING = base.Columns["BREAK_CEILING"];
                this.columnUNIT_RATE = base.Columns["UNIT_RATE"];
                this.columnQUOTATION_ID = base.Columns["QUOTATION_ID"];
                this.columnQUOTATION_NO = base.Columns["QUOTATION_NO"];
                this.columnDATE_VALID_FROM = base.Columns["DATE_VALID_FROM"];
                this.columnREMARKS2 = base.Columns["REMARKS2"];
                this.columnREMARKS3 = base.Columns["REMARKS3"];
                this.columnREMARKS4 = base.Columns["REMARKS4"];
                this.columnREMARKS5 = base.Columns["REMARKS5"];
                this.columnCustVend_Name = base.Columns["CustVend_Name"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnAddress3 = base.Columns["Address3"];
                this.columnAddress4 = base.Columns["Address4"];
                this.columnRATE_TYPE = base.Columns["RATE_TYPE"];
                this.columnCUSTOMER_CREDIT_LIMIT = base.Columns["CUSTOMER_CREDIT_LIMIT"];
                this.columnCCUSTOMER_TERMS = base.Columns["CCUSTOMER_TERMS"];
                this.columnIS_LUMP_SUM = base.Columns["IS_LUMP_SUM"];
                this.columnLUMP_SUM_VALUE = base.Columns["LUMP_SUM_VALUE"];
                this.columnPriceBreakRemarks = base.Columns["PriceBreakRemarks"];
                this.columnMINIMUM_VALUE = base.Columns["MINIMUM_VALUE"];
                this.columnPackageRemark = base.Columns["PackageRemark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCUST_CODE = new global::System.Data.DataColumn("CUST_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST_CODE);
                this.columnCUSTOMER_GROUP_NO = new global::System.Data.DataColumn("CUSTOMER_GROUP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_GROUP_NO);
                this.columnSALESMAN_NO = new global::System.Data.DataColumn("SALESMAN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALESMAN_NO);
                this.columnQUOTATION_DATE = new global::System.Data.DataColumn("QUOTATION_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUOTATION_DATE);
                this.columnDATE_VALID_TO = new global::System.Data.DataColumn("DATE_VALID_TO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_VALID_TO);
                this.columnPAYMENT_TERMS = new global::System.Data.DataColumn("PAYMENT_TERMS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENT_TERMS);
                this.columnCONDITIONS = new global::System.Data.DataColumn("CONDITIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONDITIONS);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnSEQUENCE_NO = new global::System.Data.DataColumn("SEQUENCE_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQUENCE_NO);
                this.columnCHARGE_CODE = new global::System.Data.DataColumn("CHARGE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARGE_CODE);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnCURRENCY_CODE = new global::System.Data.DataColumn("CURRENCY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENCY_CODE);
                this.columnIS_CONTAINER_MOVEMENT = new global::System.Data.DataColumn("IS_CONTAINER_MOVEMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_CONTAINER_MOVEMENT);
                this.columnCONTAINER_CODE = new global::System.Data.DataColumn("CONTAINER_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_CODE);
                this.columnIS_OVERWEIGHT = new global::System.Data.DataColumn("IS_OVERWEIGHT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_OVERWEIGHT);
                this.columnBREAK_CEILING = new global::System.Data.DataColumn("BREAK_CEILING", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBREAK_CEILING);
                this.columnUNIT_RATE = new global::System.Data.DataColumn("UNIT_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_RATE);
                this.columnQUOTATION_ID = new global::System.Data.DataColumn("QUOTATION_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUOTATION_ID);
                this.columnQUOTATION_NO = new global::System.Data.DataColumn("QUOTATION_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUOTATION_NO);
                this.columnDATE_VALID_FROM = new global::System.Data.DataColumn("DATE_VALID_FROM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_VALID_FROM);
                this.columnREMARKS2 = new global::System.Data.DataColumn("REMARKS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS2);
                this.columnREMARKS3 = new global::System.Data.DataColumn("REMARKS3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS3);
                this.columnREMARKS4 = new global::System.Data.DataColumn("REMARKS4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS4);
                this.columnREMARKS5 = new global::System.Data.DataColumn("REMARKS5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS5);
                this.columnCustVend_Name = new global::System.Data.DataColumn("CustVend_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustVend_Name);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnAddress3 = new global::System.Data.DataColumn("Address3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress3);
                this.columnAddress4 = new global::System.Data.DataColumn("Address4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress4);
                this.columnRATE_TYPE = new global::System.Data.DataColumn("RATE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_TYPE);
                this.columnCUSTOMER_CREDIT_LIMIT = new global::System.Data.DataColumn("CUSTOMER_CREDIT_LIMIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_CREDIT_LIMIT);
                this.columnCCUSTOMER_TERMS = new global::System.Data.DataColumn("CCUSTOMER_TERMS", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCUSTOMER_TERMS);
                this.columnIS_LUMP_SUM = new global::System.Data.DataColumn("IS_LUMP_SUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_LUMP_SUM);
                this.columnLUMP_SUM_VALUE = new global::System.Data.DataColumn("LUMP_SUM_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUMP_SUM_VALUE);
                this.columnPriceBreakRemarks = new global::System.Data.DataColumn("PriceBreakRemarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceBreakRemarks);
                this.columnMINIMUM_VALUE = new global::System.Data.DataColumn("MINIMUM_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINIMUM_VALUE);
                this.columnPackageRemark = new global::System.Data.DataColumn("PackageRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageRemark);
                this.columnCUST_CODE.AllowDBNull = false;
                this.columnCUST_CODE.MaxLength = 12;
                this.columnCUSTOMER_GROUP_NO.AllowDBNull = false;
                this.columnCUSTOMER_GROUP_NO.MaxLength = 12;
                this.columnSALESMAN_NO.AllowDBNull = false;
                this.columnSALESMAN_NO.MaxLength = 12;
                this.columnQUOTATION_DATE.AllowDBNull = false;
                this.columnDATE_VALID_TO.AllowDBNull = false;
                this.columnPAYMENT_TERMS.AllowDBNull = false;
                this.columnPAYMENT_TERMS.MaxLength = 50;
                this.columnCONDITIONS.AllowDBNull = false;
                this.columnCONDITIONS.MaxLength = 50;
                this.columnREMARKS.AllowDBNull = false;
                this.columnREMARKS.MaxLength = 50;
                this.columnCHARGE_CODE.MaxLength = 16;
                this.columnDESCRIPTION.MaxLength = 50;
                this.columnUOM.MaxLength = 4;
                this.columnCURRENCY_CODE.MaxLength = 6;
                this.columnIS_CONTAINER_MOVEMENT.MaxLength = 1;
                this.columnCONTAINER_CODE.MaxLength = 6;
                this.columnIS_OVERWEIGHT.MaxLength = 1;
                this.columnQUOTATION_ID.AllowDBNull = false;
                this.columnQUOTATION_NO.AllowDBNull = false;
                this.columnQUOTATION_NO.MaxLength = 23;
                this.columnDATE_VALID_FROM.AllowDBNull = false;
                this.columnREMARKS2.MaxLength = 50;
                this.columnREMARKS3.MaxLength = 50;
                this.columnREMARKS4.MaxLength = 50;
                this.columnREMARKS5.MaxLength = 50;
                this.columnCustVend_Name.MaxLength = 50;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.MaxLength = 50;
                this.columnAddress3.MaxLength = 50;
                this.columnAddress4.MaxLength = 50;
                this.columnRATE_TYPE.MaxLength = 1;
                this.columnIS_LUMP_SUM.MaxLength = 12;
                this.columnPriceBreakRemarks.MaxLength = 50;
                this.columnPackageRemark.ReadOnly = true;
                this.columnPackageRemark.MaxLength = 133;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DstQuotation ds = new DstQuotation();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUST_CODE {
                get {
                    return ((string)(this[this.tableDataTable1.CUST_CODEColumn]));
                }
                set {
                    this[this.tableDataTable1.CUST_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUSTOMER_GROUP_NO {
                get {
                    return ((string)(this[this.tableDataTable1.CUSTOMER_GROUP_NOColumn]));
                }
                set {
                    this[this.tableDataTable1.CUSTOMER_GROUP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SALESMAN_NO {
                get {
                    return ((string)(this[this.tableDataTable1.SALESMAN_NOColumn]));
                }
                set {
                    this[this.tableDataTable1.SALESMAN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime QUOTATION_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDataTable1.QUOTATION_DATEColumn]));
                }
                set {
                    this[this.tableDataTable1.QUOTATION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_VALID_TO {
                get {
                    return ((global::System.DateTime)(this[this.tableDataTable1.DATE_VALID_TOColumn]));
                }
                set {
                    this[this.tableDataTable1.DATE_VALID_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAYMENT_TERMS {
                get {
                    return ((string)(this[this.tableDataTable1.PAYMENT_TERMSColumn]));
                }
                set {
                    this[this.tableDataTable1.PAYMENT_TERMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONDITIONS {
                get {
                    return ((string)(this[this.tableDataTable1.CONDITIONSColumn]));
                }
                set {
                    this[this.tableDataTable1.CONDITIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS {
                get {
                    return ((string)(this[this.tableDataTable1.REMARKSColumn]));
                }
                set {
                    this[this.tableDataTable1.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SEQUENCE_NO {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.SEQUENCE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEQUENCE_NO\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.SEQUENCE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARGE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CHARGE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARGE_CODE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CHARGE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CURRENCY_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CURRENCY_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CURRENCY_CODE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CURRENCY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_CONTAINER_MOVEMENT {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.IS_CONTAINER_MOVEMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_CONTAINER_MOVEMENT\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.IS_CONTAINER_MOVEMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONTAINER_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CONTAINER_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONTAINER_CODE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CONTAINER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_OVERWEIGHT {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.IS_OVERWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_OVERWEIGHT\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.IS_OVERWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BREAK_CEILING {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.BREAK_CEILINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BREAK_CEILING\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BREAK_CEILINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UNIT_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.UNIT_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_RATE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.UNIT_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QUOTATION_ID {
                get {
                    return ((int)(this[this.tableDataTable1.QUOTATION_IDColumn]));
                }
                set {
                    this[this.tableDataTable1.QUOTATION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QUOTATION_NO {
                get {
                    return ((string)(this[this.tableDataTable1.QUOTATION_NOColumn]));
                }
                set {
                    this[this.tableDataTable1.QUOTATION_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_VALID_FROM {
                get {
                    return ((global::System.DateTime)(this[this.tableDataTable1.DATE_VALID_FROMColumn]));
                }
                set {
                    this[this.tableDataTable1.DATE_VALID_FROMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS2 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REMARKS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS2\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REMARKS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS3 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REMARKS3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS3\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REMARKS3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS4 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REMARKS4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS4\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REMARKS4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS5 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REMARKS5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS5\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REMARKS5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustVend_Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CustVend_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustVend_Name\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CustVend_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address3 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Address3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address3\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Address3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address4 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.Address4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address4\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Address4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RATE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.RATE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE_TYPE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.RATE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CUSTOMER_CREDIT_LIMIT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.CUSTOMER_CREDIT_LIMITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_CREDIT_LIMIT\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CUSTOMER_CREDIT_LIMITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte CCUSTOMER_TERMS {
                get {
                    try {
                        return ((byte)(this[this.tableDataTable1.CCUSTOMER_TERMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCUSTOMER_TERMS\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CCUSTOMER_TERMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_LUMP_SUM {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.IS_LUMP_SUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_LUMP_SUM\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.IS_LUMP_SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LUMP_SUM_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.LUMP_SUM_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LUMP_SUM_VALUE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LUMP_SUM_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceBreakRemarks {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PriceBreakRemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceBreakRemarks\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PriceBreakRemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MINIMUM_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.MINIMUM_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINIMUM_VALUE\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.MINIMUM_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PackageRemark {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.PackageRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackageRemark\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PackageRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEQUENCE_NONull() {
                return this.IsNull(this.tableDataTable1.SEQUENCE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEQUENCE_NONull() {
                this[this.tableDataTable1.SEQUENCE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARGE_CODENull() {
                return this.IsNull(this.tableDataTable1.CHARGE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARGE_CODENull() {
                this[this.tableDataTable1.CHARGE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableDataTable1.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tableDataTable1.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUOMNull() {
                return this.IsNull(this.tableDataTable1.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUOMNull() {
                this[this.tableDataTable1.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCURRENCY_CODENull() {
                return this.IsNull(this.tableDataTable1.CURRENCY_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCURRENCY_CODENull() {
                this[this.tableDataTable1.CURRENCY_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_CONTAINER_MOVEMENTNull() {
                return this.IsNull(this.tableDataTable1.IS_CONTAINER_MOVEMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_CONTAINER_MOVEMENTNull() {
                this[this.tableDataTable1.IS_CONTAINER_MOVEMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONTAINER_CODENull() {
                return this.IsNull(this.tableDataTable1.CONTAINER_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONTAINER_CODENull() {
                this[this.tableDataTable1.CONTAINER_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_OVERWEIGHTNull() {
                return this.IsNull(this.tableDataTable1.IS_OVERWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_OVERWEIGHTNull() {
                this[this.tableDataTable1.IS_OVERWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBREAK_CEILINGNull() {
                return this.IsNull(this.tableDataTable1.BREAK_CEILINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBREAK_CEILINGNull() {
                this[this.tableDataTable1.BREAK_CEILINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIT_RATENull() {
                return this.IsNull(this.tableDataTable1.UNIT_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIT_RATENull() {
                this[this.tableDataTable1.UNIT_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKS2Null() {
                return this.IsNull(this.tableDataTable1.REMARKS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKS2Null() {
                this[this.tableDataTable1.REMARKS2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKS3Null() {
                return this.IsNull(this.tableDataTable1.REMARKS3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKS3Null() {
                this[this.tableDataTable1.REMARKS3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKS4Null() {
                return this.IsNull(this.tableDataTable1.REMARKS4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKS4Null() {
                this[this.tableDataTable1.REMARKS4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKS5Null() {
                return this.IsNull(this.tableDataTable1.REMARKS5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKS5Null() {
                this[this.tableDataTable1.REMARKS5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustVend_NameNull() {
                return this.IsNull(this.tableDataTable1.CustVend_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustVend_NameNull() {
                this[this.tableDataTable1.CustVend_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableDataTable1.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress1Null() {
                this[this.tableDataTable1.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableDataTable1.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress2Null() {
                this[this.tableDataTable1.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress3Null() {
                return this.IsNull(this.tableDataTable1.Address3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress3Null() {
                this[this.tableDataTable1.Address3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress4Null() {
                return this.IsNull(this.tableDataTable1.Address4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress4Null() {
                this[this.tableDataTable1.Address4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRATE_TYPENull() {
                return this.IsNull(this.tableDataTable1.RATE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRATE_TYPENull() {
                this[this.tableDataTable1.RATE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUSTOMER_CREDIT_LIMITNull() {
                return this.IsNull(this.tableDataTable1.CUSTOMER_CREDIT_LIMITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUSTOMER_CREDIT_LIMITNull() {
                this[this.tableDataTable1.CUSTOMER_CREDIT_LIMITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCCUSTOMER_TERMSNull() {
                return this.IsNull(this.tableDataTable1.CCUSTOMER_TERMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCCUSTOMER_TERMSNull() {
                this[this.tableDataTable1.CCUSTOMER_TERMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_LUMP_SUMNull() {
                return this.IsNull(this.tableDataTable1.IS_LUMP_SUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_LUMP_SUMNull() {
                this[this.tableDataTable1.IS_LUMP_SUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLUMP_SUM_VALUENull() {
                return this.IsNull(this.tableDataTable1.LUMP_SUM_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLUMP_SUM_VALUENull() {
                this[this.tableDataTable1.LUMP_SUM_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceBreakRemarksNull() {
                return this.IsNull(this.tableDataTable1.PriceBreakRemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceBreakRemarksNull() {
                this[this.tableDataTable1.PriceBreakRemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMINIMUM_VALUENull() {
                return this.IsNull(this.tableDataTable1.MINIMUM_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMINIMUM_VALUENull() {
                this[this.tableDataTable1.MINIMUM_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackageRemarkNull() {
                return this.IsNull(this.tableDataTable1.PackageRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackageRemarkNull() {
                this[this.tableDataTable1.PackageRemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FM.TransportMarket.Report.DstQuotationTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable1";
            tableMapping.ColumnMappings.Add("CUST_CODE", "CUST_CODE");
            tableMapping.ColumnMappings.Add("CUSTOMER_GROUP_NO", "CUSTOMER_GROUP_NO");
            tableMapping.ColumnMappings.Add("SALESMAN_NO", "SALESMAN_NO");
            tableMapping.ColumnMappings.Add("QUOTATION_DATE", "QUOTATION_DATE");
            tableMapping.ColumnMappings.Add("DATE_VALID_TO", "DATE_VALID_TO");
            tableMapping.ColumnMappings.Add("PAYMENT_TERMS", "PAYMENT_TERMS");
            tableMapping.ColumnMappings.Add("CONDITIONS", "CONDITIONS");
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS");
            tableMapping.ColumnMappings.Add("SEQUENCE_NO", "SEQUENCE_NO");
            tableMapping.ColumnMappings.Add("CHARGE_CODE", "CHARGE_CODE");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("CURRENCY_CODE", "CURRENCY_CODE");
            tableMapping.ColumnMappings.Add("IS_CONTAINER_MOVEMENT", "IS_CONTAINER_MOVEMENT");
            tableMapping.ColumnMappings.Add("CONTAINER_CODE", "CONTAINER_CODE");
            tableMapping.ColumnMappings.Add("IS_OVERWEIGHT", "IS_OVERWEIGHT");
            tableMapping.ColumnMappings.Add("BREAK_CEILING", "BREAK_CEILING");
            tableMapping.ColumnMappings.Add("UNIT_RATE", "UNIT_RATE");
            tableMapping.ColumnMappings.Add("QUOTATION_ID", "QUOTATION_ID");
            tableMapping.ColumnMappings.Add("QUOTATION_NO", "QUOTATION_NO");
            tableMapping.ColumnMappings.Add("DATE_VALID_FROM", "DATE_VALID_FROM");
            tableMapping.ColumnMappings.Add("REMARKS2", "REMARKS2");
            tableMapping.ColumnMappings.Add("REMARKS3", "REMARKS3");
            tableMapping.ColumnMappings.Add("REMARKS4", "REMARKS4");
            tableMapping.ColumnMappings.Add("REMARKS5", "REMARKS5");
            tableMapping.ColumnMappings.Add("CustVend_Name", "CustVend_Name");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("Address3", "Address3");
            tableMapping.ColumnMappings.Add("Address4", "Address4");
            tableMapping.ColumnMappings.Add("RATE_TYPE", "RATE_TYPE");
            tableMapping.ColumnMappings.Add("CUSTOMER_CREDIT_LIMIT", "CUSTOMER_CREDIT_LIMIT");
            tableMapping.ColumnMappings.Add("CCUSTOMER_TERMS", "CCUSTOMER_TERMS");
            tableMapping.ColumnMappings.Add("IS_LUMP_SUM", "IS_LUMP_SUM");
            tableMapping.ColumnMappings.Add("LUMP_SUM_VALUE", "LUMP_SUM_VALUE");
            tableMapping.ColumnMappings.Add("PriceBreakRemarks", "PriceBreakRemarks");
            tableMapping.ColumnMappings.Add("MINIMUM_VALUE", "MINIMUM_VALUE");
            tableMapping.ColumnMappings.Add("PackageRemark", "PackageRemark");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FM.TransportMarket.Properties.Settings.Default.FM80_VIETNAM_HAN_LIVEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     a.CUST_CODE, a.CUSTOMER_GROUP_NO, \r\n\ta.SALESMAN_NO, a.QUOTATION_DATE, " +
                "\r\n\ta.DATE_VALID_TO, a.PAYMENT_TERMS, \r\n\ta.CONDITIONS, a.REMARKS, \r\n\tTPT_MKT_QUOT" +
                "ATION_DETAIL_RATE_TBL.SEQUENCE_NO, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE" +
                ", \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.DESCRIPTION, TPT_MKT_QUOTATION_DETAIL_RAT" +
                "E_TBL.UOM, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CURRENCY_CODE, TPT_MKT_QUOTATION" +
                "_DETAIL_RATE_TBL.IS_CONTAINER_MOVEMENT, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CON" +
                "TAINER_CODE, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.IS_OVERWEIGHT, \r\n\tTPT_MKT_QUOTATI" +
                "ON_DETAIL_RATE_PRICE_BREAKS_TBL.BREAK_CEILING, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_" +
                "PRICE_BREAKS_TBL.IS_LUMP_SUM,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.U" +
                "NIT_RATE,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.LUMP_SUM_VALUE,\r\n\tTPT" +
                "_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.REMARKS AS PriceBreakRemarks, ACT_Cu" +
                "stVend_Master_Tbl.CustVend_Name, \r\n\tACT_CustVend_Master_Tbl.Address1, ACT_CustVe" +
                "nd_Master_Tbl.Address2, ACT_CustVend_Master_Tbl.Address3, \r\n\tACT_CustVend_Master" +
                "_Tbl.Address4, a.QUOTATION_ID, a.QUOTATION_NO, \r\n\ta.DATE_VALID_FROM, a.REMARKS2," +
                " \r\n\ta.REMARKS3, a.REMARKS4, \r\n\ta.REMARKS5, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.RAT" +
                "E_TYPE,\r\n\tACT_CustVend_Master_Tbl.Credit_Limit as CUSTOMER_CREDIT_LIMIT,\r\n\tACT_C" +
                "ustVend_Master_Tbl.Term_Code as CCUSTOMER_TERMS,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE" +
                "_TBL.MINIMUM_VALUE,\r\n\t--20131010 - gerry update show display for package\r\n\t(Sele" +
                "ct case ch.INVOICE_CHARGE_TYPE\r\n\t\t\twhen 4 then (Select convert(varchar,convert(d" +
                "ecimal,packUOM.LENGTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUO" +
                "M.WIDTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUOM.HEIGHT,2))+\'" +
                "(M) / \'\r\n\t\t\t\t\t\t\t\t+convert(varchar,convert(decimal,packUOM.UNIT_WEIGHT,2))+\'(KGM)" +
                "\'\t\t\t\t\t\r\n\t\t\t\t\t\tfrom TPT_PACK_UOM as packUOM where packUOM.PACK_TYPE = ch.PACK_TYP" +
                "E\r\n\t\t\t\t\t\t\t\tand packUOM.PACK_UOM = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.UOM) \r\n\t\t\tel" +
                "se \'\'\t\t\t\t\t\r\n\t\t\tend \r\n\tfrom TPT_CHARGE_TBL as ch \r\n\twhere ch.CHARGE_CODE =  TPT_M" +
                "KT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE) as PackageRemark\r\n\t--end 20131010\t\t\r\n\r" +
                "\nFROM         ACT_CustVend_Master_Tbl RIGHT OUTER JOIN\r\n                      TP" +
                "T_MKT_QUOTATION_HEADER_TBL AS a ON \r\n                      ACT_CustVend_Master_T" +
                "bl.CustVend_Code = a.CUST_CODE LEFT OUTER JOIN\r\n                      TPT_MKT_QU" +
                "OTATION_DETAIL_RATE_PRICE_BREAKS_TBL LEFT OUTER JOIN\r\n                      TPT_" +
                "MKT_QUOTATION_DETAIL_RATE_TBL ON \r\n                      TPT_MKT_QUOTATION_DETAI" +
                "L_RATE_PRICE_BREAKS_TBL.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATI" +
                "ON_ID AND \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL" +
                ".SEQUENCE_NO_RATE = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO ON \r\n         " +
                "             a.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATION_ID\r\n\r\n" +
                "\r\nWHERE    (a.CUST_CODE >= @START_CUST_CODE) AND \r\n                      (a.CUST" +
                "_CODE <= @END_CUST_CODE)\r\n                      AND a.QUOTATION_DATE >= @START_Q" +
                "UOTATION_DATE\r\n                      AND a.QUOTATION_DATE <= @END_QUOTATION_DATE" +
                "\r\n   \r\n                      \r\nORDER BY TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUEN" +
                "CE_NO, a.CUST_CODE, \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CH" +
                "ARGE_CODE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_CUST_CODE", global::System.Data.SqlDbType.VarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "CUST_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_CUST_CODE", global::System.Data.SqlDbType.VarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "CUST_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     a.CUST_CODE, a.CUSTOMER_GROUP_NO, \r\n\ta.SALESMAN_NO, a.QUOTATION_DATE, " +
                "\r\n\ta.DATE_VALID_TO, a.PAYMENT_TERMS, \r\n\ta.CONDITIONS, a.REMARKS, \r\n\tTPT_MKT_QUOT" +
                "ATION_DETAIL_RATE_TBL.SEQUENCE_NO, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE" +
                ", \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.DESCRIPTION, TPT_MKT_QUOTATION_DETAIL_RAT" +
                "E_TBL.UOM, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CURRENCY_CODE, TPT_MKT_QUOTATION" +
                "_DETAIL_RATE_TBL.IS_CONTAINER_MOVEMENT, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CON" +
                "TAINER_CODE, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.IS_OVERWEIGHT, \r\n\tTPT_MKT_QUOTATI" +
                "ON_DETAIL_RATE_PRICE_BREAKS_TBL.BREAK_CEILING, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_" +
                "PRICE_BREAKS_TBL.IS_LUMP_SUM,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.U" +
                "NIT_RATE,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.LUMP_SUM_VALUE,\r\n\tTPT" +
                "_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.REMARKS AS PriceBreakRemarks, ACT_Cu" +
                "stVend_Master_Tbl.CustVend_Name, \r\n\tACT_CustVend_Master_Tbl.Address1, ACT_CustVe" +
                "nd_Master_Tbl.Address2, ACT_CustVend_Master_Tbl.Address3, \r\n\tACT_CustVend_Master" +
                "_Tbl.Address4, a.QUOTATION_ID, a.QUOTATION_NO, \r\n\ta.DATE_VALID_FROM, a.REMARKS2," +
                " \r\n\ta.REMARKS3, a.REMARKS4, \r\n\ta.REMARKS5, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.RAT" +
                "E_TYPE,\r\n\tACT_CustVend_Master_Tbl.Credit_Limit as CUSTOMER_CREDIT_LIMIT,\r\n\tACT_C" +
                "ustVend_Master_Tbl.Term_Code as CCUSTOMER_TERMS,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE" +
                "_TBL.MINIMUM_VALUE,\r\n\t--20131010 - gerry update show display for package\r\n\t(Sele" +
                "ct case ch.INVOICE_CHARGE_TYPE\r\n\t\t\twhen 4 then (Select convert(varchar,convert(d" +
                "ecimal,packUOM.LENGTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUO" +
                "M.WIDTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUOM.HEIGHT,2))+\'" +
                "(M) / \'\r\n\t\t\t\t\t\t\t\t+convert(varchar,convert(decimal,packUOM.UNIT_WEIGHT,2))+\'(KGM)" +
                "\'\t\t\t\t\t\r\n\t\t\t\t\t\tfrom TPT_PACK_UOM as packUOM where packUOM.PACK_TYPE = ch.PACK_TYP" +
                "E\r\n\t\t\t\t\t\t\t\tand packUOM.PACK_UOM = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.UOM) \r\n\t\t\tel" +
                "se \'\'\t\t\t\t\t\r\n\t\t\tend \r\n\tfrom TPT_CHARGE_TBL as ch \r\n\twhere ch.CHARGE_CODE =  TPT_M" +
                "KT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE) as PackageRemark\r\n\t--end 20131010\t\t\r\n\r" +
                "\nFROM         ACT_CustVend_Master_Tbl RIGHT OUTER JOIN\r\n                      TP" +
                "T_MKT_QUOTATION_HEADER_TBL AS a ON \r\n                      ACT_CustVend_Master_T" +
                "bl.CustVend_Code = a.CUST_CODE LEFT OUTER JOIN\r\n                      TPT_MKT_QU" +
                "OTATION_DETAIL_RATE_PRICE_BREAKS_TBL LEFT OUTER JOIN\r\n                      TPT_" +
                "MKT_QUOTATION_DETAIL_RATE_TBL ON \r\n                      TPT_MKT_QUOTATION_DETAI" +
                "L_RATE_PRICE_BREAKS_TBL.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATI" +
                "ON_ID AND \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL" +
                ".SEQUENCE_NO_RATE = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO ON \r\n         " +
                "             a.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATION_ID\r\n\r\n" +
                "WHERE     (a.QUOTATION_NO = @QUOTATIONNO)\r\n                      \r\nORDER BY TPT_" +
                "MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO, a.CUST_CODE, \r\n                      " +
                "TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUOTATIONNO", global::System.Data.SqlDbType.VarChar, 23, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     a.CUST_CODE, a.CUSTOMER_GROUP_NO, \r\n\ta.SALESMAN_NO, a.QUOTATION_DATE, " +
                "\r\n\ta.DATE_VALID_TO, a.PAYMENT_TERMS, \r\n\ta.CONDITIONS, a.REMARKS, \r\n\tTPT_MKT_QUOT" +
                "ATION_DETAIL_RATE_TBL.SEQUENCE_NO, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE" +
                ", \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.DESCRIPTION, TPT_MKT_QUOTATION_DETAIL_RAT" +
                "E_TBL.UOM, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CURRENCY_CODE, TPT_MKT_QUOTATION" +
                "_DETAIL_RATE_TBL.IS_CONTAINER_MOVEMENT, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CON" +
                "TAINER_CODE, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.IS_OVERWEIGHT, \r\n\tTPT_MKT_QUOTATI" +
                "ON_DETAIL_RATE_PRICE_BREAKS_TBL.BREAK_CEILING, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_" +
                "PRICE_BREAKS_TBL.IS_LUMP_SUM,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.U" +
                "NIT_RATE,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.LUMP_SUM_VALUE,\r\n\tTPT" +
                "_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.REMARKS AS PriceBreakRemarks, ACT_Cu" +
                "stVend_Master_Tbl.CustVend_Name, \r\n\tACT_CustVend_Master_Tbl.Address1, ACT_CustVe" +
                "nd_Master_Tbl.Address2, ACT_CustVend_Master_Tbl.Address3, \r\n\tACT_CustVend_Master" +
                "_Tbl.Address4, a.QUOTATION_ID, a.QUOTATION_NO, \r\n\ta.DATE_VALID_FROM, a.REMARKS2," +
                " \r\n\ta.REMARKS3, a.REMARKS4, \r\n\ta.REMARKS5, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.RAT" +
                "E_TYPE,\r\n\tACT_CustVend_Master_Tbl.Credit_Limit as CUSTOMER_CREDIT_LIMIT,\r\n\tACT_C" +
                "ustVend_Master_Tbl.Term_Code as CCUSTOMER_TERMS,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE" +
                "_TBL.MINIMUM_VALUE,\r\n\t--20131010 - gerry update show display for package\r\n\t(Sele" +
                "ct case ch.INVOICE_CHARGE_TYPE\r\n\t\t\twhen 4 then (Select convert(varchar,convert(d" +
                "ecimal,packUOM.LENGTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUO" +
                "M.WIDTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUOM.HEIGHT,2))+\'" +
                "(M) / \'\r\n\t\t\t\t\t\t\t\t+convert(varchar,convert(decimal,packUOM.UNIT_WEIGHT,2))+\'(KGM)" +
                "\'\t\t\t\t\t\r\n\t\t\t\t\t\tfrom TPT_PACK_UOM as packUOM where packUOM.PACK_TYPE = ch.PACK_TYP" +
                "E\r\n\t\t\t\t\t\t\t\tand packUOM.PACK_UOM = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.UOM) \r\n\t\t\tel" +
                "se \'\'\t\t\t\t\t\r\n\t\t\tend \r\n\tfrom TPT_CHARGE_TBL as ch \r\n\twhere ch.CHARGE_CODE =  TPT_M" +
                "KT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE) as PackageRemark\r\n\t--end 20131010\t\t\r\n\r" +
                "\nFROM         ACT_CustVend_Master_Tbl RIGHT OUTER JOIN\r\n                      TP" +
                "T_MKT_QUOTATION_HEADER_TBL AS a ON \r\n                      ACT_CustVend_Master_T" +
                "bl.CustVend_Code = a.CUST_CODE LEFT OUTER JOIN\r\n                      TPT_MKT_QU" +
                "OTATION_DETAIL_RATE_PRICE_BREAKS_TBL LEFT OUTER JOIN\r\n                      TPT_" +
                "MKT_QUOTATION_DETAIL_RATE_TBL ON \r\n                      TPT_MKT_QUOTATION_DETAI" +
                "L_RATE_PRICE_BREAKS_TBL.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATI" +
                "ON_ID AND \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL" +
                ".SEQUENCE_NO_RATE = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO ON \r\n         " +
                "             a.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATION_ID\r\n\r\n" +
                "WHERE  a.QUOTATION_DATE >= @START_QUOTATION_DATE\r\n                      AND a.QU" +
                "OTATION_DATE <= @END_QUOTATION_DATE\r\nAND (select count(*) from TPT_MKT_QUOTATION" +
                "_HEADER_TBL\r\n                                   where CUST_CODE = a.CUST_CODE\r\n\t" +
                "                                 and DATE_VALID_FROM > a.DATE_VALID_FROM) < 1\r\n " +
                "  \r\n                      \r\nORDER BY TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_" +
                "NO, a.CUST_CODE, \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARG" +
                "E_CODE";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     a.CUST_CODE, a.CUSTOMER_GROUP_NO, \r\n\ta.SALESMAN_NO, a.QUOTATION_DATE, " +
                "\r\n\ta.DATE_VALID_TO, a.PAYMENT_TERMS, \r\n\ta.CONDITIONS, a.REMARKS, \r\n\tTPT_MKT_QUOT" +
                "ATION_DETAIL_RATE_TBL.SEQUENCE_NO, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE" +
                ", \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.DESCRIPTION, TPT_MKT_QUOTATION_DETAIL_RAT" +
                "E_TBL.UOM, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CURRENCY_CODE, TPT_MKT_QUOTATION" +
                "_DETAIL_RATE_TBL.IS_CONTAINER_MOVEMENT, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CON" +
                "TAINER_CODE, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.IS_OVERWEIGHT, \r\n\tTPT_MKT_QUOTATI" +
                "ON_DETAIL_RATE_PRICE_BREAKS_TBL.BREAK_CEILING, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_" +
                "PRICE_BREAKS_TBL.IS_LUMP_SUM,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.U" +
                "NIT_RATE,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.LUMP_SUM_VALUE,\r\n\tTPT" +
                "_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.REMARKS AS PriceBreakRemarks, ACT_Cu" +
                "stVend_Master_Tbl.CustVend_Name, \r\n\tACT_CustVend_Master_Tbl.Address1, ACT_CustVe" +
                "nd_Master_Tbl.Address2, ACT_CustVend_Master_Tbl.Address3, \r\n\tACT_CustVend_Master" +
                "_Tbl.Address4, a.QUOTATION_ID, a.QUOTATION_NO, \r\n\ta.DATE_VALID_FROM, a.REMARKS2," +
                " \r\n\ta.REMARKS3, a.REMARKS4, \r\n\ta.REMARKS5, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.RAT" +
                "E_TYPE,\r\n\tACT_CustVend_Master_Tbl.Credit_Limit as CUSTOMER_CREDIT_LIMIT,\r\n\tACT_C" +
                "ustVend_Master_Tbl.Term_Code as CCUSTOMER_TERMS,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE" +
                "_TBL.MINIMUM_VALUE,\r\n\t--20131010 - gerry update show display for package\r\n\t(Sele" +
                "ct case ch.INVOICE_CHARGE_TYPE\r\n\t\t\twhen 4 then (Select convert(varchar,convert(d" +
                "ecimal,packUOM.LENGTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUO" +
                "M.WIDTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUOM.HEIGHT,2))+\'" +
                "(M) / \'\r\n\t\t\t\t\t\t\t\t+convert(varchar,convert(decimal,packUOM.UNIT_WEIGHT,2))+\'(KGM)" +
                "\'\t\t\t\t\t\r\n\t\t\t\t\t\tfrom TPT_PACK_UOM as packUOM where packUOM.PACK_TYPE = ch.PACK_TYP" +
                "E\r\n\t\t\t\t\t\t\t\tand packUOM.PACK_UOM = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.UOM) \r\n\t\t\tel" +
                "se \'\'\t\t\t\t\t\r\n\t\t\tend \r\n\tfrom TPT_CHARGE_TBL as ch \r\n\twhere ch.CHARGE_CODE =  TPT_M" +
                "KT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE) as PackageRemark\r\n\t--end 20131010\t\t\r\n\r" +
                "\nFROM         ACT_CustVend_Master_Tbl RIGHT OUTER JOIN\r\n                      TP" +
                "T_MKT_QUOTATION_HEADER_TBL AS a ON \r\n                      ACT_CustVend_Master_T" +
                "bl.CustVend_Code = a.CUST_CODE LEFT OUTER JOIN\r\n                      TPT_MKT_QU" +
                "OTATION_DETAIL_RATE_PRICE_BREAKS_TBL LEFT OUTER JOIN\r\n                      TPT_" +
                "MKT_QUOTATION_DETAIL_RATE_TBL ON \r\n                      TPT_MKT_QUOTATION_DETAI" +
                "L_RATE_PRICE_BREAKS_TBL.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATI" +
                "ON_ID AND \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL" +
                ".SEQUENCE_NO_RATE = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO ON \r\n         " +
                "             a.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATION_ID\r\n\r\n" +
                "\r\nWHERE   a.QUOTATION_DATE >= @START_QUOTATION_DATE\r\n                      AND a" +
                ".QUOTATION_DATE <= @END_QUOTATION_DATE\r\n   \r\n                      \r\nORDER BY TP" +
                "T_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO, a.CUST_CODE, \r\n                    " +
                "  TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     a.CUST_CODE, a.CUSTOMER_GROUP_NO, \r\n\ta.SALESMAN_NO, a.QUOTATION_DATE, " +
                "\r\n\ta.DATE_VALID_TO, a.PAYMENT_TERMS, \r\n\ta.CONDITIONS, a.REMARKS, \r\n\tTPT_MKT_QUOT" +
                "ATION_DETAIL_RATE_TBL.SEQUENCE_NO, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE" +
                ", \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.DESCRIPTION, TPT_MKT_QUOTATION_DETAIL_RAT" +
                "E_TBL.UOM, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CURRENCY_CODE, TPT_MKT_QUOTATION" +
                "_DETAIL_RATE_TBL.IS_CONTAINER_MOVEMENT, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_TBL.CON" +
                "TAINER_CODE, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.IS_OVERWEIGHT, \r\n\tTPT_MKT_QUOTATI" +
                "ON_DETAIL_RATE_PRICE_BREAKS_TBL.BREAK_CEILING, \r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_" +
                "PRICE_BREAKS_TBL.IS_LUMP_SUM,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.U" +
                "NIT_RATE,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.LUMP_SUM_VALUE,\r\n\tTPT" +
                "_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL.REMARKS AS PriceBreakRemarks, ACT_Cu" +
                "stVend_Master_Tbl.CustVend_Name, \r\n\tACT_CustVend_Master_Tbl.Address1, ACT_CustVe" +
                "nd_Master_Tbl.Address2, ACT_CustVend_Master_Tbl.Address3, \r\n\tACT_CustVend_Master" +
                "_Tbl.Address4, a.QUOTATION_ID, a.QUOTATION_NO, \r\n\ta.DATE_VALID_FROM, a.REMARKS2," +
                " \r\n\ta.REMARKS3, a.REMARKS4, \r\n\ta.REMARKS5, TPT_MKT_QUOTATION_DETAIL_RATE_TBL.RAT" +
                "E_TYPE,\r\n\tACT_CustVend_Master_Tbl.Credit_Limit as CUSTOMER_CREDIT_LIMIT,\r\n\tACT_C" +
                "ustVend_Master_Tbl.Term_Code as CCUSTOMER_TERMS,\r\n\tTPT_MKT_QUOTATION_DETAIL_RATE" +
                "_TBL.MINIMUM_VALUE,\r\n\t--20131010 - gerry update show display for package\r\n\t(Sele" +
                "ct case ch.INVOICE_CHARGE_TYPE\r\n\t\t\twhen 4 then (Select convert(varchar,convert(d" +
                "ecimal,packUOM.LENGTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUO" +
                "M.WIDTH,2))\r\n\t\t\t\t\t\t\t\t+\' x \'+convert(varchar,convert(decimal,packUOM.HEIGHT,2))+\'" +
                "(M) / \'\r\n\t\t\t\t\t\t\t\t+convert(varchar,convert(decimal,packUOM.UNIT_WEIGHT,2))+\'(KGM)" +
                "\'\t\t\t\t\t\r\n\t\t\t\t\t\tfrom TPT_PACK_UOM as packUOM where packUOM.PACK_TYPE = ch.PACK_TYP" +
                "E\r\n\t\t\t\t\t\t\t\tand packUOM.PACK_UOM = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.UOM) \r\n\t\t\tel" +
                "se \'\'\t\t\t\t\t\r\n\t\t\tend \r\n\tfrom TPT_CHARGE_TBL as ch \r\n\twhere ch.CHARGE_CODE =  TPT_M" +
                "KT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE) as PackageRemark\r\n\t--end 20131010\t\t\r\n\r" +
                "\nFROM         ACT_CustVend_Master_Tbl RIGHT OUTER JOIN\r\n                      TP" +
                "T_MKT_QUOTATION_HEADER_TBL AS a ON \r\n                      ACT_CustVend_Master_T" +
                "bl.CustVend_Code = a.CUST_CODE LEFT OUTER JOIN\r\n                      TPT_MKT_QU" +
                "OTATION_DETAIL_RATE_PRICE_BREAKS_TBL LEFT OUTER JOIN\r\n                      TPT_" +
                "MKT_QUOTATION_DETAIL_RATE_TBL ON \r\n                      TPT_MKT_QUOTATION_DETAI" +
                "L_RATE_PRICE_BREAKS_TBL.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATI" +
                "ON_ID AND \r\n                      TPT_MKT_QUOTATION_DETAIL_RATE_PRICE_BREAKS_TBL" +
                ".SEQUENCE_NO_RATE = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO ON \r\n         " +
                "             a.QUOTATION_ID = TPT_MKT_QUOTATION_DETAIL_RATE_TBL.QUOTATION_ID\r\n\r\n" +
                "\r\n\r\nWHERE    (a.CUST_CODE >= @START_CUST_CODE) AND \r\n                      (a.CU" +
                "ST_CODE <= @END_CUST_CODE)\r\n                      AND a.QUOTATION_DATE >= @START" +
                "_QUOTATION_DATE\r\n                      AND a.QUOTATION_DATE <= @END_QUOTATION_DA" +
                "TE\r\n   AND (select count(*) from TPT_MKT_QUOTATION_HEADER_TBL\r\n                 " +
                "                  where CUST_CODE = a.CUST_CODE\r\n\t                              " +
                "   and DATE_VALID_FROM > a.DATE_VALID_FROM) < 1\r\n                      \r\nORDER B" +
                "Y TPT_MKT_QUOTATION_DETAIL_RATE_TBL.SEQUENCE_NO, a.CUST_CODE, \r\n                " +
                "      TPT_MKT_QUOTATION_DETAIL_RATE_TBL.CHARGE_CODE";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_CUST_CODE", global::System.Data.SqlDbType.VarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "CUST_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_CUST_CODE", global::System.Data.SqlDbType.VarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "CUST_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_QUOTATION_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DstQuotation.DataTable1DataTable dataTable, string START_CUST_CODE, string END_CUST_CODE, System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((START_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("START_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_CUST_CODE));
            }
            if ((END_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("END_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(END_CUST_CODE));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(END_QUOTATION_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DstQuotation.DataTable1DataTable GetData(string START_CUST_CODE, string END_CUST_CODE, System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((START_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("START_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_CUST_CODE));
            }
            if ((END_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("END_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(END_CUST_CODE));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(END_QUOTATION_DATE));
            DstQuotation.DataTable1DataTable dataTable = new DstQuotation.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(DstQuotation.DataTable1DataTable dataTable, string QUOTATIONNO) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((QUOTATIONNO == null)) {
                throw new global::System.ArgumentNullException("QUOTATIONNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(QUOTATIONNO));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstQuotation.DataTable1DataTable GetDataBy(string QUOTATIONNO) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((QUOTATIONNO == null)) {
                throw new global::System.ArgumentNullException("QUOTATIONNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(QUOTATIONNO));
            }
            DstQuotation.DataTable1DataTable dataTable = new DstQuotation.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLatestAndQuotDate(DstQuotation.DataTable1DataTable dataTable, System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(END_QUOTATION_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstQuotation.DataTable1DataTable GetDataByLatestAndQuotDate(System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(END_QUOTATION_DATE));
            DstQuotation.DataTable1DataTable dataTable = new DstQuotation.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByQuotationDate(DstQuotation.DataTable1DataTable dataTable, System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(END_QUOTATION_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstQuotation.DataTable1DataTable GetDataByQuotationDate(System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(END_QUOTATION_DATE));
            DstQuotation.DataTable1DataTable dataTable = new DstQuotation.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillLatestQuotation(DstQuotation.DataTable1DataTable dataTable, string START_CUST_CODE, string END_CUST_CODE, System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((START_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("START_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_CUST_CODE));
            }
            if ((END_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("END_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(END_CUST_CODE));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(END_QUOTATION_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstQuotation.DataTable1DataTable GetDataLatestQuotation(string START_CUST_CODE, string END_CUST_CODE, System.DateTime START_QUOTATION_DATE, System.DateTime END_QUOTATION_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((START_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("START_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_CUST_CODE));
            }
            if ((END_CUST_CODE == null)) {
                throw new global::System.ArgumentNullException("END_CUST_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(END_CUST_CODE));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(START_QUOTATION_DATE));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(END_QUOTATION_DATE));
            DstQuotation.DataTable1DataTable dataTable = new DstQuotation.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DstQuotation dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DstQuotation dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DstQuotation dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DstQuotation dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591