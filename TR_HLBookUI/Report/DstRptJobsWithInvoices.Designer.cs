//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FM.TR_HLBookUI.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DstRptJobsWithInvoices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DstRptJobsWithInvoices : global::System.Data.DataSet {
        
        private dtbRptJobsWithInvoicesDataTable tabledtbRptJobsWithInvoices;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DstRptJobsWithInvoices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DstRptJobsWithInvoices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtbRptJobsWithInvoices"] != null)) {
                    base.Tables.Add(new dtbRptJobsWithInvoicesDataTable(ds.Tables["dtbRptJobsWithInvoices"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbRptJobsWithInvoicesDataTable dtbRptJobsWithInvoices {
            get {
                return this.tabledtbRptJobsWithInvoices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DstRptJobsWithInvoices cln = ((DstRptJobsWithInvoices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtbRptJobsWithInvoices"] != null)) {
                    base.Tables.Add(new dtbRptJobsWithInvoicesDataTable(ds.Tables["dtbRptJobsWithInvoices"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabledtbRptJobsWithInvoices = ((dtbRptJobsWithInvoicesDataTable)(base.Tables["dtbRptJobsWithInvoices"]));
            if ((initTable == true)) {
                if ((this.tabledtbRptJobsWithInvoices != null)) {
                    this.tabledtbRptJobsWithInvoices.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DstRptJobsWithInvoices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DstRptJobsWithInvoices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtbRptJobsWithInvoices = new dtbRptJobsWithInvoicesDataTable();
            base.Tables.Add(this.tabledtbRptJobsWithInvoices);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtbRptJobsWithInvoices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DstRptJobsWithInvoices ds = new DstRptJobsWithInvoices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtbRptJobsWithInvoicesRowChangeEventHandler(object sender, dtbRptJobsWithInvoicesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbRptJobsWithInvoicesDataTable : global::System.Data.TypedTableBase<dtbRptJobsWithInvoicesRow> {
            
            private global::System.Data.DataColumn columnJOB_NUMBER;
            
            private global::System.Data.DataColumn columnCUST_CODE;
            
            private global::System.Data.DataColumn columnBOOKING_DATE;
            
            private global::System.Data.DataColumn columnTPT_DEPT_CODE;
            
            private global::System.Data.DataColumn columnJOB_TYPE;
            
            private global::System.Data.DataColumn columnBRANCH_CODE;
            
            private global::System.Data.DataColumn columnInvoice_Number;
            
            private global::System.Data.DataColumn columnInvoice_Date;
            
            private global::System.Data.DataColumn columnInvoice_Type_Code;
            
            private global::System.Data.DataColumn columnTransaction_Number;
            
            private global::System.Data.DataColumn columnJOB_ID;
            
            private global::System.Data.DataColumn columnCustVend_Name;
            
            private global::System.Data.DataColumn columnCurrency_Code;
            
            private global::System.Data.DataColumn columnJob_CHARGE;
            
            private global::System.Data.DataColumn columnJobInvoice_CHARGE;
            
            private global::System.Data.DataColumn columnINV_Amt_HM;
            
            private global::System.Data.DataColumn columnINV_Amt_FC;
            
            private global::System.Data.DataColumn columnQUOTATION_NO;
            
            private global::System.Data.DataColumn columninv_20ft_QTY;
            
            private global::System.Data.DataColumn columninv_40ft_QTY;
            
            private global::System.Data.DataColumn columninv_OtherSizes_QTY;
            
            private global::System.Data.DataColumn columnTRIP_20ft_QTY;
            
            private global::System.Data.DataColumn columnTRIP_40ft_QTY;
            
            private global::System.Data.DataColumn columnTRIP_Othersizes_QTY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesDataTable() {
                this.TableName = "dtbRptJobsWithInvoices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtbRptJobsWithInvoicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtbRptJobsWithInvoicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NUMBERColumn {
                get {
                    return this.columnJOB_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUST_CODEColumn {
                get {
                    return this.columnCUST_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOOKING_DATEColumn {
                get {
                    return this.columnBOOKING_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TPT_DEPT_CODEColumn {
                get {
                    return this.columnTPT_DEPT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_TYPEColumn {
                get {
                    return this.columnJOB_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRANCH_CODEColumn {
                get {
                    return this.columnBRANCH_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Invoice_NumberColumn {
                get {
                    return this.columnInvoice_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Invoice_DateColumn {
                get {
                    return this.columnInvoice_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Invoice_Type_CodeColumn {
                get {
                    return this.columnInvoice_Type_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Transaction_NumberColumn {
                get {
                    return this.columnTransaction_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_IDColumn {
                get {
                    return this.columnJOB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustVend_NameColumn {
                get {
                    return this.columnCustVend_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Currency_CodeColumn {
                get {
                    return this.columnCurrency_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Job_CHARGEColumn {
                get {
                    return this.columnJob_CHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobInvoice_CHARGEColumn {
                get {
                    return this.columnJobInvoice_CHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INV_Amt_HMColumn {
                get {
                    return this.columnINV_Amt_HM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INV_Amt_FCColumn {
                get {
                    return this.columnINV_Amt_FC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUOTATION_NOColumn {
                get {
                    return this.columnQUOTATION_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inv_20ft_QTYColumn {
                get {
                    return this.columninv_20ft_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inv_40ft_QTYColumn {
                get {
                    return this.columninv_40ft_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inv_OtherSizes_QTYColumn {
                get {
                    return this.columninv_OtherSizes_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRIP_20ft_QTYColumn {
                get {
                    return this.columnTRIP_20ft_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRIP_40ft_QTYColumn {
                get {
                    return this.columnTRIP_40ft_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRIP_Othersizes_QTYColumn {
                get {
                    return this.columnTRIP_Othersizes_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesRow this[int index] {
                get {
                    return ((dtbRptJobsWithInvoicesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtbRptJobsWithInvoicesRowChangeEventHandler dtbRptJobsWithInvoicesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtbRptJobsWithInvoicesRowChangeEventHandler dtbRptJobsWithInvoicesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtbRptJobsWithInvoicesRowChangeEventHandler dtbRptJobsWithInvoicesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtbRptJobsWithInvoicesRowChangeEventHandler dtbRptJobsWithInvoicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtbRptJobsWithInvoicesRow(dtbRptJobsWithInvoicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesRow AdddtbRptJobsWithInvoicesRow(
                        string JOB_NUMBER, 
                        string CUST_CODE, 
                        System.DateTime BOOKING_DATE, 
                        string TPT_DEPT_CODE, 
                        string JOB_TYPE, 
                        string BRANCH_CODE, 
                        string Invoice_Number, 
                        System.DateTime Invoice_Date, 
                        string Invoice_Type_Code, 
                        int JOB_ID, 
                        string CustVend_Name, 
                        string Currency_Code, 
                        decimal Job_CHARGE, 
                        decimal JobInvoice_CHARGE, 
                        decimal INV_Amt_HM, 
                        decimal INV_Amt_FC, 
                        string QUOTATION_NO, 
                        decimal inv_20ft_QTY, 
                        decimal inv_40ft_QTY, 
                        decimal inv_OtherSizes_QTY, 
                        int TRIP_20ft_QTY, 
                        int TRIP_40ft_QTY, 
                        int TRIP_Othersizes_QTY) {
                dtbRptJobsWithInvoicesRow rowdtbRptJobsWithInvoicesRow = ((dtbRptJobsWithInvoicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOB_NUMBER,
                        CUST_CODE,
                        BOOKING_DATE,
                        TPT_DEPT_CODE,
                        JOB_TYPE,
                        BRANCH_CODE,
                        Invoice_Number,
                        Invoice_Date,
                        Invoice_Type_Code,
                        null,
                        JOB_ID,
                        CustVend_Name,
                        Currency_Code,
                        Job_CHARGE,
                        JobInvoice_CHARGE,
                        INV_Amt_HM,
                        INV_Amt_FC,
                        QUOTATION_NO,
                        inv_20ft_QTY,
                        inv_40ft_QTY,
                        inv_OtherSizes_QTY,
                        TRIP_20ft_QTY,
                        TRIP_40ft_QTY,
                        TRIP_Othersizes_QTY};
                rowdtbRptJobsWithInvoicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbRptJobsWithInvoicesRow);
                return rowdtbRptJobsWithInvoicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesRow FindByTransaction_Number(int Transaction_Number) {
                return ((dtbRptJobsWithInvoicesRow)(this.Rows.Find(new object[] {
                            Transaction_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtbRptJobsWithInvoicesDataTable cln = ((dtbRptJobsWithInvoicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbRptJobsWithInvoicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJOB_NUMBER = base.Columns["JOB_NUMBER"];
                this.columnCUST_CODE = base.Columns["CUST_CODE"];
                this.columnBOOKING_DATE = base.Columns["BOOKING_DATE"];
                this.columnTPT_DEPT_CODE = base.Columns["TPT_DEPT_CODE"];
                this.columnJOB_TYPE = base.Columns["JOB_TYPE"];
                this.columnBRANCH_CODE = base.Columns["BRANCH_CODE"];
                this.columnInvoice_Number = base.Columns["Invoice_Number"];
                this.columnInvoice_Date = base.Columns["Invoice_Date"];
                this.columnInvoice_Type_Code = base.Columns["Invoice_Type_Code"];
                this.columnTransaction_Number = base.Columns["Transaction_Number"];
                this.columnJOB_ID = base.Columns["JOB_ID"];
                this.columnCustVend_Name = base.Columns["CustVend_Name"];
                this.columnCurrency_Code = base.Columns["Currency_Code"];
                this.columnJob_CHARGE = base.Columns["Job_CHARGE"];
                this.columnJobInvoice_CHARGE = base.Columns["JobInvoice_CHARGE"];
                this.columnINV_Amt_HM = base.Columns["INV_Amt_HM"];
                this.columnINV_Amt_FC = base.Columns["INV_Amt_FC"];
                this.columnQUOTATION_NO = base.Columns["QUOTATION_NO"];
                this.columninv_20ft_QTY = base.Columns["inv_20ft_QTY"];
                this.columninv_40ft_QTY = base.Columns["inv_40ft_QTY"];
                this.columninv_OtherSizes_QTY = base.Columns["inv_OtherSizes_QTY"];
                this.columnTRIP_20ft_QTY = base.Columns["TRIP_20ft_QTY"];
                this.columnTRIP_40ft_QTY = base.Columns["TRIP_40ft_QTY"];
                this.columnTRIP_Othersizes_QTY = base.Columns["TRIP_Othersizes_QTY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJOB_NUMBER = new global::System.Data.DataColumn("JOB_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NUMBER);
                this.columnCUST_CODE = new global::System.Data.DataColumn("CUST_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST_CODE);
                this.columnBOOKING_DATE = new global::System.Data.DataColumn("BOOKING_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOOKING_DATE);
                this.columnTPT_DEPT_CODE = new global::System.Data.DataColumn("TPT_DEPT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPT_DEPT_CODE);
                this.columnJOB_TYPE = new global::System.Data.DataColumn("JOB_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_TYPE);
                this.columnBRANCH_CODE = new global::System.Data.DataColumn("BRANCH_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCH_CODE);
                this.columnInvoice_Number = new global::System.Data.DataColumn("Invoice_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoice_Number);
                this.columnInvoice_Date = new global::System.Data.DataColumn("Invoice_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoice_Date);
                this.columnInvoice_Type_Code = new global::System.Data.DataColumn("Invoice_Type_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoice_Type_Code);
                this.columnTransaction_Number = new global::System.Data.DataColumn("Transaction_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Number);
                this.columnJOB_ID = new global::System.Data.DataColumn("JOB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_ID);
                this.columnCustVend_Name = new global::System.Data.DataColumn("CustVend_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustVend_Name);
                this.columnCurrency_Code = new global::System.Data.DataColumn("Currency_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency_Code);
                this.columnJob_CHARGE = new global::System.Data.DataColumn("Job_CHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob_CHARGE);
                this.columnJobInvoice_CHARGE = new global::System.Data.DataColumn("JobInvoice_CHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobInvoice_CHARGE);
                this.columnINV_Amt_HM = new global::System.Data.DataColumn("INV_Amt_HM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_Amt_HM);
                this.columnINV_Amt_FC = new global::System.Data.DataColumn("INV_Amt_FC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_Amt_FC);
                this.columnQUOTATION_NO = new global::System.Data.DataColumn("QUOTATION_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUOTATION_NO);
                this.columninv_20ft_QTY = new global::System.Data.DataColumn("inv_20ft_QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninv_20ft_QTY);
                this.columninv_40ft_QTY = new global::System.Data.DataColumn("inv_40ft_QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninv_40ft_QTY);
                this.columninv_OtherSizes_QTY = new global::System.Data.DataColumn("inv_OtherSizes_QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninv_OtherSizes_QTY);
                this.columnTRIP_20ft_QTY = new global::System.Data.DataColumn("TRIP_20ft_QTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIP_20ft_QTY);
                this.columnTRIP_40ft_QTY = new global::System.Data.DataColumn("TRIP_40ft_QTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIP_40ft_QTY);
                this.columnTRIP_Othersizes_QTY = new global::System.Data.DataColumn("TRIP_Othersizes_QTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIP_Othersizes_QTY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTransaction_Number}, true));
                this.columnJOB_NUMBER.AllowDBNull = false;
                this.columnJOB_NUMBER.MaxLength = 26;
                this.columnCUST_CODE.AllowDBNull = false;
                this.columnCUST_CODE.MaxLength = 12;
                this.columnBOOKING_DATE.AllowDBNull = false;
                this.columnTPT_DEPT_CODE.AllowDBNull = false;
                this.columnTPT_DEPT_CODE.MaxLength = 12;
                this.columnJOB_TYPE.AllowDBNull = false;
                this.columnJOB_TYPE.MaxLength = 4;
                this.columnBRANCH_CODE.AllowDBNull = false;
                this.columnBRANCH_CODE.MaxLength = 8;
                this.columnInvoice_Number.MaxLength = 20;
                this.columnInvoice_Type_Code.AllowDBNull = false;
                this.columnInvoice_Type_Code.MaxLength = 2;
                this.columnTransaction_Number.AutoIncrement = true;
                this.columnTransaction_Number.AutoIncrementSeed = -1;
                this.columnTransaction_Number.AutoIncrementStep = -1;
                this.columnTransaction_Number.AllowDBNull = false;
                this.columnTransaction_Number.ReadOnly = true;
                this.columnTransaction_Number.Unique = true;
                this.columnJOB_ID.AllowDBNull = false;
                this.columnCustVend_Name.MaxLength = 50;
                this.columnCurrency_Code.AllowDBNull = false;
                this.columnCurrency_Code.MaxLength = 6;
                this.columnJob_CHARGE.ReadOnly = true;
                this.columnJobInvoice_CHARGE.ReadOnly = true;
                this.columnQUOTATION_NO.AllowDBNull = false;
                this.columnQUOTATION_NO.MaxLength = 23;
                this.columninv_20ft_QTY.ReadOnly = true;
                this.columninv_40ft_QTY.ReadOnly = true;
                this.columninv_OtherSizes_QTY.ReadOnly = true;
                this.columnTRIP_20ft_QTY.ReadOnly = true;
                this.columnTRIP_40ft_QTY.ReadOnly = true;
                this.columnTRIP_Othersizes_QTY.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesRow NewdtbRptJobsWithInvoicesRow() {
                return ((dtbRptJobsWithInvoicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbRptJobsWithInvoicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtbRptJobsWithInvoicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbRptJobsWithInvoicesRowChanged != null)) {
                    this.dtbRptJobsWithInvoicesRowChanged(this, new dtbRptJobsWithInvoicesRowChangeEvent(((dtbRptJobsWithInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbRptJobsWithInvoicesRowChanging != null)) {
                    this.dtbRptJobsWithInvoicesRowChanging(this, new dtbRptJobsWithInvoicesRowChangeEvent(((dtbRptJobsWithInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbRptJobsWithInvoicesRowDeleted != null)) {
                    this.dtbRptJobsWithInvoicesRowDeleted(this, new dtbRptJobsWithInvoicesRowChangeEvent(((dtbRptJobsWithInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbRptJobsWithInvoicesRowDeleting != null)) {
                    this.dtbRptJobsWithInvoicesRowDeleting(this, new dtbRptJobsWithInvoicesRowChangeEvent(((dtbRptJobsWithInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtbRptJobsWithInvoicesRow(dtbRptJobsWithInvoicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DstRptJobsWithInvoices ds = new DstRptJobsWithInvoices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbRptJobsWithInvoicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtbRptJobsWithInvoicesRow : global::System.Data.DataRow {
            
            private dtbRptJobsWithInvoicesDataTable tabledtbRptJobsWithInvoices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtbRptJobsWithInvoicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbRptJobsWithInvoices = ((dtbRptJobsWithInvoicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NUMBER {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.JOB_NUMBERColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.JOB_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUST_CODE {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.CUST_CODEColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.CUST_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BOOKING_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tabledtbRptJobsWithInvoices.BOOKING_DATEColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.BOOKING_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TPT_DEPT_CODE {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.TPT_DEPT_CODEColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.TPT_DEPT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_TYPE {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.JOB_TYPEColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.JOB_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BRANCH_CODE {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.BRANCH_CODEColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.BRANCH_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Invoice_Number {
                get {
                    try {
                        return ((string)(this[this.tabledtbRptJobsWithInvoices.Invoice_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invoice_Number\' in table \'dtbRptJobsWithInvoices\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.Invoice_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Invoice_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtbRptJobsWithInvoices.Invoice_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invoice_Date\' in table \'dtbRptJobsWithInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.Invoice_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Invoice_Type_Code {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.Invoice_Type_CodeColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.Invoice_Type_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Transaction_Number {
                get {
                    return ((int)(this[this.tabledtbRptJobsWithInvoices.Transaction_NumberColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.Transaction_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JOB_ID {
                get {
                    return ((int)(this[this.tabledtbRptJobsWithInvoices.JOB_IDColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.JOB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustVend_Name {
                get {
                    try {
                        return ((string)(this[this.tabledtbRptJobsWithInvoices.CustVend_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustVend_Name\' in table \'dtbRptJobsWithInvoices\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.CustVend_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Currency_Code {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.Currency_CodeColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.Currency_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Job_CHARGE {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.Job_CHARGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job_CHARGE\' in table \'dtbRptJobsWithInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.Job_CHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal JobInvoice_CHARGE {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.JobInvoice_CHARGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobInvoice_CHARGE\' in table \'dtbRptJobsWithInvoices\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.JobInvoice_CHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INV_Amt_HM {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.INV_Amt_HMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_Amt_HM\' in table \'dtbRptJobsWithInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.INV_Amt_HMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INV_Amt_FC {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.INV_Amt_FCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_Amt_FC\' in table \'dtbRptJobsWithInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.INV_Amt_FCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QUOTATION_NO {
                get {
                    return ((string)(this[this.tabledtbRptJobsWithInvoices.QUOTATION_NOColumn]));
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.QUOTATION_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal inv_20ft_QTY {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.inv_20ft_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inv_20ft_QTY\' in table \'dtbRptJobsWithInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.inv_20ft_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal inv_40ft_QTY {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.inv_40ft_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inv_40ft_QTY\' in table \'dtbRptJobsWithInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.inv_40ft_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal inv_OtherSizes_QTY {
                get {
                    try {
                        return ((decimal)(this[this.tabledtbRptJobsWithInvoices.inv_OtherSizes_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inv_OtherSizes_QTY\' in table \'dtbRptJobsWithInvoices\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.inv_OtherSizes_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TRIP_20ft_QTY {
                get {
                    try {
                        return ((int)(this[this.tabledtbRptJobsWithInvoices.TRIP_20ft_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRIP_20ft_QTY\' in table \'dtbRptJobsWithInvoices\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.TRIP_20ft_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TRIP_40ft_QTY {
                get {
                    try {
                        return ((int)(this[this.tabledtbRptJobsWithInvoices.TRIP_40ft_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRIP_40ft_QTY\' in table \'dtbRptJobsWithInvoices\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.TRIP_40ft_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TRIP_Othersizes_QTY {
                get {
                    try {
                        return ((int)(this[this.tabledtbRptJobsWithInvoices.TRIP_Othersizes_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRIP_Othersizes_QTY\' in table \'dtbRptJobsWithInvoices\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledtbRptJobsWithInvoices.TRIP_Othersizes_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoice_NumberNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.Invoice_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoice_NumberNull() {
                this[this.tabledtbRptJobsWithInvoices.Invoice_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoice_DateNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.Invoice_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoice_DateNull() {
                this[this.tabledtbRptJobsWithInvoices.Invoice_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustVend_NameNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.CustVend_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustVend_NameNull() {
                this[this.tabledtbRptJobsWithInvoices.CustVend_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJob_CHARGENull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.Job_CHARGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJob_CHARGENull() {
                this[this.tabledtbRptJobsWithInvoices.Job_CHARGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobInvoice_CHARGENull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.JobInvoice_CHARGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobInvoice_CHARGENull() {
                this[this.tabledtbRptJobsWithInvoices.JobInvoice_CHARGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINV_Amt_HMNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.INV_Amt_HMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINV_Amt_HMNull() {
                this[this.tabledtbRptJobsWithInvoices.INV_Amt_HMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINV_Amt_FCNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.INV_Amt_FCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINV_Amt_FCNull() {
                this[this.tabledtbRptJobsWithInvoices.INV_Amt_FCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinv_20ft_QTYNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.inv_20ft_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinv_20ft_QTYNull() {
                this[this.tabledtbRptJobsWithInvoices.inv_20ft_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinv_40ft_QTYNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.inv_40ft_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinv_40ft_QTYNull() {
                this[this.tabledtbRptJobsWithInvoices.inv_40ft_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinv_OtherSizes_QTYNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.inv_OtherSizes_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinv_OtherSizes_QTYNull() {
                this[this.tabledtbRptJobsWithInvoices.inv_OtherSizes_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRIP_20ft_QTYNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.TRIP_20ft_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRIP_20ft_QTYNull() {
                this[this.tabledtbRptJobsWithInvoices.TRIP_20ft_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRIP_40ft_QTYNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.TRIP_40ft_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRIP_40ft_QTYNull() {
                this[this.tabledtbRptJobsWithInvoices.TRIP_40ft_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRIP_Othersizes_QTYNull() {
                return this.IsNull(this.tabledtbRptJobsWithInvoices.TRIP_Othersizes_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRIP_Othersizes_QTYNull() {
                this[this.tabledtbRptJobsWithInvoices.TRIP_Othersizes_QTYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtbRptJobsWithInvoicesRowChangeEvent : global::System.EventArgs {
            
            private dtbRptJobsWithInvoicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesRowChangeEvent(dtbRptJobsWithInvoicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtbRptJobsWithInvoicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FM.TR_HLBookUI.Report.DstRptJobsWithInvoicesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtbRptJobsWithInvoicesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dtbRptJobsWithInvoicesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtbRptJobsWithInvoices";
            tableMapping.ColumnMappings.Add("JOB_NUMBER", "JOB_NUMBER");
            tableMapping.ColumnMappings.Add("CUST_CODE", "CUST_CODE");
            tableMapping.ColumnMappings.Add("BOOKING_DATE", "BOOKING_DATE");
            tableMapping.ColumnMappings.Add("TPT_DEPT_CODE", "TPT_DEPT_CODE");
            tableMapping.ColumnMappings.Add("JOB_TYPE", "JOB_TYPE");
            tableMapping.ColumnMappings.Add("BRANCH_CODE", "BRANCH_CODE");
            tableMapping.ColumnMappings.Add("Invoice_Number", "Invoice_Number");
            tableMapping.ColumnMappings.Add("Invoice_Date", "Invoice_Date");
            tableMapping.ColumnMappings.Add("Invoice_Type_Code", "Invoice_Type_Code");
            tableMapping.ColumnMappings.Add("Transaction_Number", "Transaction_Number");
            tableMapping.ColumnMappings.Add("JOB_ID", "JOB_ID");
            tableMapping.ColumnMappings.Add("CustVend_Name", "CustVend_Name");
            tableMapping.ColumnMappings.Add("Currency_Code", "Currency_Code");
            tableMapping.ColumnMappings.Add("Job_CHARGE", "Job_CHARGE");
            tableMapping.ColumnMappings.Add("JobInvoice_CHARGE", "JobInvoice_CHARGE");
            tableMapping.ColumnMappings.Add("INV_Amt_HM", "INV_Amt_HM");
            tableMapping.ColumnMappings.Add("INV_Amt_FC", "INV_Amt_FC");
            tableMapping.ColumnMappings.Add("QUOTATION_NO", "QUOTATION_NO");
            tableMapping.ColumnMappings.Add("inv_20ft_QTY", "inv_20ft_QTY");
            tableMapping.ColumnMappings.Add("inv_40ft_QTY", "inv_40ft_QTY");
            tableMapping.ColumnMappings.Add("inv_OtherSizes_QTY", "inv_OtherSizes_QTY");
            tableMapping.ColumnMappings.Add("TRIP_20ft_QTY", "TRIP_20ft_QTY");
            tableMapping.ColumnMappings.Add("TRIP_40ft_QTY", "TRIP_40ft_QTY");
            tableMapping.ColumnMappings.Add("TRIP_Othersizes_QTY", "TRIP_Othersizes_QTY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  distinct jobMain.JOB_ID, \r\n\t\t\t\t\t  jobMain.JOB_NUMBER, \r\n\t\t\t\t\t  jobMain.CU" +
                "ST_CODE, \r\n\t\t\t\t\t  jobMain.BOOKING_DATE, \r\n                      jobMain.TPT_DEPT" +
                "_CODE, \r\n                      jobMain.JOB_TYPE, \r\n                      jobMain" +
                ".BRANCH_CODE, \r\n                      invMaster.Transaction_Number, \r\n          " +
                "            invMaster.Invoice_Number, \r\n                      invMaster.Invoice_" +
                "Date, \r\n                      invMaster.Invoice_Type_Code,\r\n                    " +
                " ACT_CustVend_Master_Tbl.CustVend_Name,\r\n                     invMaster.Total_Bi" +
                "lled_Amount_HM as INV_Amt_HM,\r\n                     invMaster.Currency_Code,\r\n  " +
                "                   invMaster.Total_Billed_Amount_FC as INV_Amt_FC,      \r\n      " +
                "               --Start For invoiceItem TRIP, MT, CBM \r\n                     \r\n  " +
                "                   isnull((select SUM(invItem.Quantity)from ACT_IV_Transport_Inv" +
                "oice_Item_Tbl as invItem \r\n\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as srt\r\n\t\t\t\t\t\t\t\t" +
                "ON srt.Container_Size_Code = invItem.UOM_Code\t\r\n\t\t\t\t\t\t\t\tinner join TPT_CHARGE_TB" +
                "L as jc\r\n\t\t\t\t\t\t\t\tON jc.CONTAINERCODE = srt.Container_Code\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twhere " +
                "invItem.UOM_Code =\'20\'\'\' \r\n\t\t\t\t\t\t\t\tand invItem.Job_Number = jobMain.JOB_NUMBER\r\n" +
                "\t\t\t\t\t\t\t\tand invItem.Transaction_Number = invMaster.Transaction_Number\r\n\t\t\t\t\t\t\t\ta" +
                "nd jc.IS_CONTAINER_MOVEMENT =\'T\'), 0) as inv_20ft_QTY,\r\n                     \r\n " +
                "                    isnull((select SUM(Quantity) from ACT_IV_Transport_Invoice_I" +
                "tem_Tbl as invItem\t\r\n\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as srt\r\n\t\t\t\t\t\t\t\tON srt" +
                ".Container_Size_Code = invItem.UOM_Code\t\r\n\t\t\t\t\t\t\t\tinner join TPT_CHARGE_TBL as j" +
                "c\r\n\t\t\t\t\t\t\t\tON jc.CONTAINERCODE = srt.Container_Code\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twhere invIte" +
                "m.UOM_Code =\'40\'\'\' \r\n\t\t\t\t\t\t\t\tand invItem.Job_Number = jobMain.JOB_NUMBER\r\n\t\t\t\t\t\t" +
                "\t\tand invItem.Transaction_Number = invMaster.Transaction_Number\r\n\t\t\t\t\t\t\t\tand jc." +
                "IS_CONTAINER_MOVEMENT =\'T\'), 0) as inv_40ft_QTY,\r\n                     \r\n       " +
                "              isnull((select SUM(Quantity)  from ACT_IV_Transport_Invoice_Item_T" +
                "bl as invItem\r\n\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as srt\r\n\t\t\t\t\t\t\t\tON srt.Conta" +
                "iner_Size_Code = invItem.UOM_Code\t\r\n\t\t\t\t\t\t\t\tinner join TPT_CHARGE_TBL as jc\r\n\t\t\t" +
                "\t\t\t\t\tON jc.CONTAINERCODE = srt.Container_Code\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twhere invItem.UOM_" +
                "Code not in(\'40\'\'\',\'20\'\'\') \r\n\t\t\t\t\t\t\t\tand invItem.Job_Number = jobMain.JOB_NUMBER" +
                "\r\n\t\t\t\t\t\t\t\tand invItem.Transaction_Number = invMaster.Transaction_Number\r\n\t\t\t\t\t\t\t" +
                "\tand jc.IS_CONTAINER_MOVEMENT =\'T\'), 0) as inv_OtherSizes_QTY,\r\n                " +
                "     --End for invoiceItem\r\n                     \r\n                     --Start " +
                "For jobTrip TRIP, MT, CBM \r\n\t\t\t\t     isnull((select COUNT(*)  from TPT_JOB_DETAI" +
                "L_CARGO_Tbl as jt\t\r\n\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as cont\r\n\t\t\t\t\t\t\t\tON con" +
                "t.Container_Code = jt.CONTAINER_CODE\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twhere cont.Container_Size_C" +
                "ode =\'20\'\'\' \r\n\t\t\t\t\t\t\t\tand jt.JOB_ID = jobMain.JOB_ID\r\n\t\t\t\t\t\t\t\tand jt.LEG_TYPE = " +
                "1) + \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t(select COUNT(*)  from TPT_JOB_DETAIL_CARGO_Tbl as jt\t\r" +
                "\n\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as cont\r\n\t\t\t\t\t\t\t\tON cont.Container_Code = " +
                "jt.CONTAINER_CODE\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twhere cont.Container_Size_Code =\'20\'\'\' \r\n\t\t\t\t\t" +
                "\t\t\tand jt.JOB_ID = jobMain.JOB_ID\r\n\t\t\t\t\t\t\t\tand jt.LEG_TYPE = 21)\r\n\t\t\t\t\t\t\t\t    , " +
                "0 ) as TRIP_20ft_QTY,\r\n                     \r\n                     isnull((selec" +
                "t COUNT(*)  from TPT_JOB_DETAIL_CARGO_Tbl as jt\t\r\n\t\t\t\t\t\t\t\tinner join SRT_Contain" +
                "er_Tbl as cont\r\n\t\t\t\t\t\t\t\tON cont.Container_Code = jt.CONTAINER_CODE\t\t\t\t\t\t\t\r\n\t\t\t\t\t" +
                "\t\t\twhere cont.Container_Size_Code =\'40\'\'\' \r\n\t\t\t\t\t\t\t\tand jt.JOB_ID = jobMain.JOB_" +
                "ID\r\n\t\t\t\t\t\t\t\tand jt.LEG_TYPE = 1) + \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t(select COUNT(*)  from TP" +
                "T_JOB_DETAIL_CARGO_Tbl as jt\t\r\n\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as cont\r\n\t\t\t" +
                "\t\t\t\t\tON cont.Container_Code = jt.CONTAINER_CODE\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twhere cont.Conta" +
                "iner_Size_Code =\'40\'\'\' \r\n\t\t\t\t\t\t\t\tand jt.JOB_ID = jobMain.JOB_ID\r\n\t\t\t\t\t\t\t\tand jt." +
                "LEG_TYPE = 21)\r\n\t\t\t\t\t\t\t\t    , 0 ) as TRIP_40ft_QTY,\r\n                     \r\n    " +
                "                 isnull((select COUNT(*)  from TPT_JOB_DETAIL_CARGO_Tbl as jt\t\r\n" +
                "\t\t\t\t\t\t\t\tinner join SRT_Container_Tbl as cont\r\n\t\t\t\t\t\t\t\tON cont.Container_Code = j" +
                "t.CONTAINER_CODE\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twhere cont.Container_Size_Code not in (\'20\'\'\', " +
                "\'40\'\'\') \r\n\t\t\t\t\t\t\t\tand jt.JOB_ID = jobMain.JOB_ID\r\n\t\t\t\t\t\t\t\tand jt.LEG_TYPE = 1) +" +
                " \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t(select COUNT(*)  from TPT_JOB_DETAIL_CARGO_Tbl as jt\t\r\n\t\t\t" +
                "\t\t\t\t\tinner join SRT_Container_Tbl as cont\r\n\t\t\t\t\t\t\t\tON cont.Container_Code = jt.C" +
                "ONTAINER_CODE\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twhere cont.Container_Size_Code not in (\'20\'\'\', \'40" +
                "\'\'\') \r\n\t\t\t\t\t\t\t\tand jt.JOB_ID = jobMain.JOB_ID\r\n\t\t\t\t\t\t\t\tand jt.LEG_TYPE = 21)\r\n\t\t" +
                "\t\t\t\t\t\t    , 0 ) as TRIP_Othersizes_QTY,\r\n                     --End For jobTrip " +
                "\r\n                     \r\n                     ISNULL((select SUM(tjc.AMOUNT_HC) " +
                "from TPT_JOB_DETAIL_CHARGE_Tbl as tjc\r\n\t\t\t\t\t\t\t\tinner join TPT_CHARGE_TBL as c\r\n\t" +
                "\t\t\t\t\t\t\tON c.CHARGE_CODE = tjc.CHARGE_CODE\r\n\t\t\t\t\t\t\t\twhere tjc.JOB_ID = jobMain.JO" +
                "B_ID \r\n\t\t\t\t\t\t\t\t\tand c.IS_CONTAINER_MOVEMENT =\'F\'\r\n\t\t\t\t\t\t\t\t\tand c.IS_TRUCK_MOVEME" +
                "NT =\'F\'), 0 ) As Job_CHARGE,\r\n                     \r\n                     ISNULL" +
                "((select SUM(tii.Home_Amount) from ACT_IV_Transport_Invoice_Item_Tbl as tii\t\t\t\t\t" +
                "\t\t\t\r\n\t\t\t\t\t\t\t\twhere \r\n\t\t\t\t\t\t\t\ttii.Job_Number = jobMain.JOB_NUMBER \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                "\t\r\n\t\t\t\t\t\t\t\t\tand tii.Transaction_Number = invMaster.Transaction_Number \r\n\t\t\t\t\t\t\t\t" +
                "\tand \r\n\t\t\t\t\t\t\t\t\ttii.Item_Code not in(\r\n\t\t\t\t\t\t\t\t\t\tselect distinct tii.Item_Code f" +
                "rom ACT_IV_Transport_Invoice_Item_Tbl as tii\r\n\t\t\t\t\t\t\t\t\t\t\t\t left outer join TPT_C" +
                "HARGE_TBL as c\r\n\t\t\t\t\t\t\t\t\t\t\t\t ON c.CHARGE_CODE = tii.Item_Code\r\n\t\t\t\t\t\t\t\t\t\t\t\t left" +
                " join ACT_Sales_Cost_Item_Tbl as sci \r\n\t\t\t\t\t\t\t\t\t\t\t\t ON sci.Sales_Cost_Item_Code " +
                "= c.CHARGE_CODE\r\n\t\t\t\t\t\t\t\t\t\t\t\t where c.IS_TRUCK_MOVEMENT = \'T\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t or c" +
                ".IS_CONTAINER_MOVEMENT =\'T\')\r\n\t\t\t\t\t\t\t\t\t),0) As JobInvoice_CHARGE,jobMain.QUOTATI" +
                "ON_NO                        \r\n                                                 " +
                "  \r\n  FROM     TPT_JOB_MAIN_Tbl as jobMain INNER JOIN \r\n\t\t\tACT_IV_Transport_Invo" +
                "ice_Item_Tbl as invItem \r\n\t\t\tON invItem.Job_Number = jobMain.JOB_NUMBER \t\r\n\t\t\tIN" +
                "NER JOIN ACT_IV_Transport_Invoice_Master_Tbl  as invMaster \r\n\t\t   ON invMaster.T" +
                "ransaction_Number = invItem.Transaction_Number  \r\n\t\t   and invMaster.Job_Number " +
                "= jobMain.JOB_NUMBER\t\t\t  \r\n\t\t\t\r\n\t\t\tINNER JOIN ACT_CustVend_Master_Tbl \r\n\t\t\tON jo" +
                "bMain.CUST_CODE = ACT_CustVend_Master_Tbl.CustVend_Code\r\n\t\t\tleft JOIN TPT_JOB_DE" +
                "TAIL_CHARGE_Tbl as jobCharge\r\n\t\t\tON jobCharge.JOB_ID = jobMain.JOB_ID\t\t\r\n\t\r\nWHER" +
                "E     invMaster.Job_Type_Code = @invJobType\r\nand (jobMain.JOB_NUMBER >= @START_J" +
                "OBNO) AND (jobMain.JOB_NUMBER <= @END_JOBNO)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@invJobType", global::System.Data.SqlDbType.Variant, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_JOBNO", global::System.Data.SqlDbType.Variant, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_JOBNO", global::System.Data.SqlDbType.Variant, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DstRptJobsWithInvoices.dtbRptJobsWithInvoicesDataTable dataTable, object invJobType, object START_JOBNO, object END_JOBNO) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((invJobType == null)) {
                throw new global::System.ArgumentNullException("invJobType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((object)(invJobType));
            }
            if ((START_JOBNO == null)) {
                throw new global::System.ArgumentNullException("START_JOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((object)(START_JOBNO));
            }
            if ((END_JOBNO == null)) {
                throw new global::System.ArgumentNullException("END_JOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((object)(END_JOBNO));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DstRptJobsWithInvoices.dtbRptJobsWithInvoicesDataTable GetData(object invJobType, object START_JOBNO, object END_JOBNO) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((invJobType == null)) {
                throw new global::System.ArgumentNullException("invJobType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((object)(invJobType));
            }
            if ((START_JOBNO == null)) {
                throw new global::System.ArgumentNullException("START_JOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((object)(START_JOBNO));
            }
            if ((END_JOBNO == null)) {
                throw new global::System.ArgumentNullException("END_JOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((object)(END_JOBNO));
            }
            DstRptJobsWithInvoices.dtbRptJobsWithInvoicesDataTable dataTable = new DstRptJobsWithInvoices.dtbRptJobsWithInvoicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DstRptJobsWithInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DstRptJobsWithInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DstRptJobsWithInvoices dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DstRptJobsWithInvoices dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591