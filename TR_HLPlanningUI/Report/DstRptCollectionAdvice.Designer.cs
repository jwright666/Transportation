//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FM.TransportPlanning.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DstRptCollectionAdvice")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DstRptCollectionAdvice : global::System.Data.DataSet {
        
        private DtbRptCollectionAdviceDataTable tableDtbRptCollectionAdvice;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DstRptCollectionAdvice() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DstRptCollectionAdvice(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DtbRptCollectionAdvice"] != null)) {
                    base.Tables.Add(new DtbRptCollectionAdviceDataTable(ds.Tables["DtbRptCollectionAdvice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbRptCollectionAdviceDataTable DtbRptCollectionAdvice {
            get {
                return this.tableDtbRptCollectionAdvice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DstRptCollectionAdvice cln = ((DstRptCollectionAdvice)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DtbRptCollectionAdvice"] != null)) {
                    base.Tables.Add(new DtbRptCollectionAdviceDataTable(ds.Tables["DtbRptCollectionAdvice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDtbRptCollectionAdvice = ((DtbRptCollectionAdviceDataTable)(base.Tables["DtbRptCollectionAdvice"]));
            if ((initTable == true)) {
                if ((this.tableDtbRptCollectionAdvice != null)) {
                    this.tableDtbRptCollectionAdvice.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DstRptCollectionAdvice";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DstRptCollectionAdvice.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDtbRptCollectionAdvice = new DtbRptCollectionAdviceDataTable();
            base.Tables.Add(this.tableDtbRptCollectionAdvice);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtbRptCollectionAdvice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DstRptCollectionAdvice ds = new DstRptCollectionAdvice();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DtbRptCollectionAdviceRowChangeEventHandler(object sender, DtbRptCollectionAdviceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbRptCollectionAdviceDataTable : global::System.Data.TypedTableBase<DtbRptCollectionAdviceRow> {
            
            private global::System.Data.DataColumn columnJOB_NUMBER;
            
            private global::System.Data.DataColumn columnSCHEDULE_DATE;
            
            private global::System.Data.DataColumn columnDriver_Name;
            
            private global::System.Data.DataColumn columnVEHICLE_NO;
            
            private global::System.Data.DataColumn columnJOB_TYPE;
            
            private global::System.Data.DataColumn columnEND_STOP;
            
            private global::System.Data.DataColumn columnOperation_Code;
            
            private global::System.Data.DataColumn columnOperation_Name;
            
            private global::System.Data.DataColumn columnOp_Add1;
            
            private global::System.Data.DataColumn columnOp_Add2;
            
            private global::System.Data.DataColumn columnOp_Add3;
            
            private global::System.Data.DataColumn columnOp_Add4;
            
            private global::System.Data.DataColumn columnCONTAINER_NUMBER;
            
            private global::System.Data.DataColumn columnSEAL_NUMBER;
            
            private global::System.Data.DataColumn columnCONTAINER_CODE;
            
            private global::System.Data.DataColumn columnGROSS_WEIGHT;
            
            private global::System.Data.DataColumn columnCARGO_DESCRIPTION;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnCHARGE_CODE;
            
            private global::System.Data.DataColumn columnIS_LADEN;
            
            private global::System.Data.DataColumn columnSEQUENCE_NO;
            
            private global::System.Data.DataColumn columnPLANTRIP_NO;
            
            private global::System.Data.DataColumn columnSEQ_NO;
            
            private global::System.Data.DataColumn columnTRAILER_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbRptCollectionAdviceDataTable() {
                this.TableName = "DtbRptCollectionAdvice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbRptCollectionAdviceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DtbRptCollectionAdviceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NUMBERColumn {
                get {
                    return this.columnJOB_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Driver_NameColumn {
                get {
                    return this.columnDriver_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VEHICLE_NOColumn {
                get {
                    return this.columnVEHICLE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_TYPEColumn {
                get {
                    return this.columnJOB_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn END_STOPColumn {
                get {
                    return this.columnEND_STOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Operation_CodeColumn {
                get {
                    return this.columnOperation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Operation_NameColumn {
                get {
                    return this.columnOperation_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Op_Add1Column {
                get {
                    return this.columnOp_Add1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Op_Add2Column {
                get {
                    return this.columnOp_Add2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Op_Add3Column {
                get {
                    return this.columnOp_Add3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Op_Add4Column {
                get {
                    return this.columnOp_Add4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONTAINER_NUMBERColumn {
                get {
                    return this.columnCONTAINER_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEAL_NUMBERColumn {
                get {
                    return this.columnSEAL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONTAINER_CODEColumn {
                get {
                    return this.columnCONTAINER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROSS_WEIGHTColumn {
                get {
                    return this.columnGROSS_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CARGO_DESCRIPTIONColumn {
                get {
                    return this.columnCARGO_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARGE_CODEColumn {
                get {
                    return this.columnCHARGE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_LADENColumn {
                get {
                    return this.columnIS_LADEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQUENCE_NOColumn {
                get {
                    return this.columnSEQUENCE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANTRIP_NOColumn {
                get {
                    return this.columnPLANTRIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQ_NOColumn {
                get {
                    return this.columnSEQ_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRAILER_NOColumn {
                get {
                    return this.columnTRAILER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbRptCollectionAdviceRow this[int index] {
                get {
                    return ((DtbRptCollectionAdviceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbRptCollectionAdviceRowChangeEventHandler DtbRptCollectionAdviceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbRptCollectionAdviceRowChangeEventHandler DtbRptCollectionAdviceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbRptCollectionAdviceRowChangeEventHandler DtbRptCollectionAdviceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbRptCollectionAdviceRowChangeEventHandler DtbRptCollectionAdviceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtbRptCollectionAdviceRow(DtbRptCollectionAdviceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbRptCollectionAdviceRow AddDtbRptCollectionAdviceRow(
                        string JOB_NUMBER, 
                        System.DateTime SCHEDULE_DATE, 
                        string Driver_Name, 
                        string VEHICLE_NO, 
                        string JOB_TYPE, 
                        string END_STOP, 
                        string Operation_Code, 
                        string Operation_Name, 
                        string Op_Add1, 
                        string Op_Add2, 
                        string Op_Add3, 
                        string Op_Add4, 
                        string CONTAINER_NUMBER, 
                        string SEAL_NUMBER, 
                        string CONTAINER_CODE, 
                        decimal GROSS_WEIGHT, 
                        string CARGO_DESCRIPTION, 
                        string REMARKS, 
                        string CHARGE_CODE, 
                        string IS_LADEN, 
                        int SEQUENCE_NO, 
                        string PLANTRIP_NO, 
                        int SEQ_NO, 
                        string TRAILER_NO) {
                DtbRptCollectionAdviceRow rowDtbRptCollectionAdviceRow = ((DtbRptCollectionAdviceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOB_NUMBER,
                        SCHEDULE_DATE,
                        Driver_Name,
                        VEHICLE_NO,
                        JOB_TYPE,
                        END_STOP,
                        Operation_Code,
                        Operation_Name,
                        Op_Add1,
                        Op_Add2,
                        Op_Add3,
                        Op_Add4,
                        CONTAINER_NUMBER,
                        SEAL_NUMBER,
                        CONTAINER_CODE,
                        GROSS_WEIGHT,
                        CARGO_DESCRIPTION,
                        REMARKS,
                        CHARGE_CODE,
                        IS_LADEN,
                        SEQUENCE_NO,
                        PLANTRIP_NO,
                        SEQ_NO,
                        TRAILER_NO};
                rowDtbRptCollectionAdviceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbRptCollectionAdviceRow);
                return rowDtbRptCollectionAdviceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DtbRptCollectionAdviceDataTable cln = ((DtbRptCollectionAdviceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbRptCollectionAdviceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJOB_NUMBER = base.Columns["JOB_NUMBER"];
                this.columnSCHEDULE_DATE = base.Columns["SCHEDULE_DATE"];
                this.columnDriver_Name = base.Columns["Driver_Name"];
                this.columnVEHICLE_NO = base.Columns["VEHICLE_NO"];
                this.columnJOB_TYPE = base.Columns["JOB_TYPE"];
                this.columnEND_STOP = base.Columns["END_STOP"];
                this.columnOperation_Code = base.Columns["Operation_Code"];
                this.columnOperation_Name = base.Columns["Operation_Name"];
                this.columnOp_Add1 = base.Columns["Op_Add1"];
                this.columnOp_Add2 = base.Columns["Op_Add2"];
                this.columnOp_Add3 = base.Columns["Op_Add3"];
                this.columnOp_Add4 = base.Columns["Op_Add4"];
                this.columnCONTAINER_NUMBER = base.Columns["CONTAINER_NUMBER"];
                this.columnSEAL_NUMBER = base.Columns["SEAL_NUMBER"];
                this.columnCONTAINER_CODE = base.Columns["CONTAINER_CODE"];
                this.columnGROSS_WEIGHT = base.Columns["GROSS_WEIGHT"];
                this.columnCARGO_DESCRIPTION = base.Columns["CARGO_DESCRIPTION"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnCHARGE_CODE = base.Columns["CHARGE_CODE"];
                this.columnIS_LADEN = base.Columns["IS_LADEN"];
                this.columnSEQUENCE_NO = base.Columns["SEQUENCE_NO"];
                this.columnPLANTRIP_NO = base.Columns["PLANTRIP_NO"];
                this.columnSEQ_NO = base.Columns["SEQ_NO"];
                this.columnTRAILER_NO = base.Columns["TRAILER_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJOB_NUMBER = new global::System.Data.DataColumn("JOB_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NUMBER);
                this.columnSCHEDULE_DATE = new global::System.Data.DataColumn("SCHEDULE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnDriver_Name = new global::System.Data.DataColumn("Driver_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriver_Name);
                this.columnVEHICLE_NO = new global::System.Data.DataColumn("VEHICLE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVEHICLE_NO);
                this.columnJOB_TYPE = new global::System.Data.DataColumn("JOB_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_TYPE);
                this.columnEND_STOP = new global::System.Data.DataColumn("END_STOP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_STOP);
                this.columnOperation_Code = new global::System.Data.DataColumn("Operation_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation_Code);
                this.columnOperation_Name = new global::System.Data.DataColumn("Operation_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperation_Name);
                this.columnOp_Add1 = new global::System.Data.DataColumn("Op_Add1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOp_Add1);
                this.columnOp_Add2 = new global::System.Data.DataColumn("Op_Add2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOp_Add2);
                this.columnOp_Add3 = new global::System.Data.DataColumn("Op_Add3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOp_Add3);
                this.columnOp_Add4 = new global::System.Data.DataColumn("Op_Add4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOp_Add4);
                this.columnCONTAINER_NUMBER = new global::System.Data.DataColumn("CONTAINER_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_NUMBER);
                this.columnSEAL_NUMBER = new global::System.Data.DataColumn("SEAL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEAL_NUMBER);
                this.columnCONTAINER_CODE = new global::System.Data.DataColumn("CONTAINER_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_CODE);
                this.columnGROSS_WEIGHT = new global::System.Data.DataColumn("GROSS_WEIGHT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSS_WEIGHT);
                this.columnCARGO_DESCRIPTION = new global::System.Data.DataColumn("CARGO_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARGO_DESCRIPTION);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnCHARGE_CODE = new global::System.Data.DataColumn("CHARGE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARGE_CODE);
                this.columnIS_LADEN = new global::System.Data.DataColumn("IS_LADEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_LADEN);
                this.columnSEQUENCE_NO = new global::System.Data.DataColumn("SEQUENCE_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQUENCE_NO);
                this.columnPLANTRIP_NO = new global::System.Data.DataColumn("PLANTRIP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANTRIP_NO);
                this.columnSEQ_NO = new global::System.Data.DataColumn("SEQ_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ_NO);
                this.columnTRAILER_NO = new global::System.Data.DataColumn("TRAILER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAILER_NO);
                this.columnJOB_NUMBER.AllowDBNull = false;
                this.columnJOB_NUMBER.MaxLength = 26;
                this.columnSCHEDULE_DATE.AllowDBNull = false;
                this.columnDriver_Name.AllowDBNull = false;
                this.columnDriver_Name.MaxLength = 50;
                this.columnVEHICLE_NO.AllowDBNull = false;
                this.columnVEHICLE_NO.MaxLength = 12;
                this.columnJOB_TYPE.AllowDBNull = false;
                this.columnJOB_TYPE.MaxLength = 4;
                this.columnEND_STOP.AllowDBNull = false;
                this.columnEND_STOP.MaxLength = 12;
                this.columnOperation_Code.AllowDBNull = false;
                this.columnOperation_Code.MaxLength = 12;
                this.columnOperation_Name.MaxLength = 50;
                this.columnOp_Add1.MaxLength = 50;
                this.columnOp_Add2.MaxLength = 50;
                this.columnOp_Add3.MaxLength = 50;
                this.columnOp_Add4.MaxLength = 50;
                this.columnCONTAINER_NUMBER.AllowDBNull = false;
                this.columnCONTAINER_NUMBER.MaxLength = 26;
                this.columnSEAL_NUMBER.AllowDBNull = false;
                this.columnSEAL_NUMBER.MaxLength = 26;
                this.columnCONTAINER_CODE.AllowDBNull = false;
                this.columnCONTAINER_CODE.MaxLength = 6;
                this.columnGROSS_WEIGHT.AllowDBNull = false;
                this.columnCARGO_DESCRIPTION.AllowDBNull = false;
                this.columnCARGO_DESCRIPTION.MaxLength = 2147483647;
                this.columnREMARKS.MaxLength = 2147483647;
                this.columnCHARGE_CODE.AllowDBNull = false;
                this.columnCHARGE_CODE.MaxLength = 16;
                this.columnIS_LADEN.AllowDBNull = false;
                this.columnIS_LADEN.MaxLength = 1;
                this.columnSEQUENCE_NO.AllowDBNull = false;
                this.columnPLANTRIP_NO.AllowDBNull = false;
                this.columnPLANTRIP_NO.MaxLength = 12;
                this.columnSEQ_NO.AllowDBNull = false;
                this.columnTRAILER_NO.AllowDBNull = false;
                this.columnTRAILER_NO.MaxLength = 12;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbRptCollectionAdviceRow NewDtbRptCollectionAdviceRow() {
                return ((DtbRptCollectionAdviceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbRptCollectionAdviceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DtbRptCollectionAdviceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbRptCollectionAdviceRowChanged != null)) {
                    this.DtbRptCollectionAdviceRowChanged(this, new DtbRptCollectionAdviceRowChangeEvent(((DtbRptCollectionAdviceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbRptCollectionAdviceRowChanging != null)) {
                    this.DtbRptCollectionAdviceRowChanging(this, new DtbRptCollectionAdviceRowChangeEvent(((DtbRptCollectionAdviceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbRptCollectionAdviceRowDeleted != null)) {
                    this.DtbRptCollectionAdviceRowDeleted(this, new DtbRptCollectionAdviceRowChangeEvent(((DtbRptCollectionAdviceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbRptCollectionAdviceRowDeleting != null)) {
                    this.DtbRptCollectionAdviceRowDeleting(this, new DtbRptCollectionAdviceRowChangeEvent(((DtbRptCollectionAdviceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtbRptCollectionAdviceRow(DtbRptCollectionAdviceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DstRptCollectionAdvice ds = new DstRptCollectionAdvice();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbRptCollectionAdviceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DtbRptCollectionAdviceRow : global::System.Data.DataRow {
            
            private DtbRptCollectionAdviceDataTable tableDtbRptCollectionAdvice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbRptCollectionAdviceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbRptCollectionAdvice = ((DtbRptCollectionAdviceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NUMBER {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.JOB_NUMBERColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.JOB_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SCHEDULE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDtbRptCollectionAdvice.SCHEDULE_DATEColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.SCHEDULE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Driver_Name {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.Driver_NameColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Driver_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VEHICLE_NO {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.VEHICLE_NOColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.VEHICLE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_TYPE {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.JOB_TYPEColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.JOB_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string END_STOP {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.END_STOPColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.END_STOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Operation_Code {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.Operation_CodeColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Operation_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Operation_Name {
                get {
                    try {
                        return ((string)(this[this.tableDtbRptCollectionAdvice.Operation_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operation_Name\' in table \'DtbRptCollectionAdvice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Operation_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Op_Add1 {
                get {
                    try {
                        return ((string)(this[this.tableDtbRptCollectionAdvice.Op_Add1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Op_Add1\' in table \'DtbRptCollectionAdvice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Op_Add1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Op_Add2 {
                get {
                    try {
                        return ((string)(this[this.tableDtbRptCollectionAdvice.Op_Add2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Op_Add2\' in table \'DtbRptCollectionAdvice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Op_Add2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Op_Add3 {
                get {
                    try {
                        return ((string)(this[this.tableDtbRptCollectionAdvice.Op_Add3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Op_Add3\' in table \'DtbRptCollectionAdvice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Op_Add3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Op_Add4 {
                get {
                    try {
                        return ((string)(this[this.tableDtbRptCollectionAdvice.Op_Add4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Op_Add4\' in table \'DtbRptCollectionAdvice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.Op_Add4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONTAINER_NUMBER {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.CONTAINER_NUMBERColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.CONTAINER_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEAL_NUMBER {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.SEAL_NUMBERColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.SEAL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONTAINER_CODE {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.CONTAINER_CODEColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.CONTAINER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GROSS_WEIGHT {
                get {
                    return ((decimal)(this[this.tableDtbRptCollectionAdvice.GROSS_WEIGHTColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.GROSS_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CARGO_DESCRIPTION {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.CARGO_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.CARGO_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableDtbRptCollectionAdvice.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'DtbRptCollectionAdvice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARGE_CODE {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.CHARGE_CODEColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.CHARGE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_LADEN {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.IS_LADENColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.IS_LADENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SEQUENCE_NO {
                get {
                    return ((int)(this[this.tableDtbRptCollectionAdvice.SEQUENCE_NOColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.SEQUENCE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PLANTRIP_NO {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.PLANTRIP_NOColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.PLANTRIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SEQ_NO {
                get {
                    return ((int)(this[this.tableDtbRptCollectionAdvice.SEQ_NOColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.SEQ_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TRAILER_NO {
                get {
                    return ((string)(this[this.tableDtbRptCollectionAdvice.TRAILER_NOColumn]));
                }
                set {
                    this[this.tableDtbRptCollectionAdvice.TRAILER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOperation_NameNull() {
                return this.IsNull(this.tableDtbRptCollectionAdvice.Operation_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOperation_NameNull() {
                this[this.tableDtbRptCollectionAdvice.Operation_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOp_Add1Null() {
                return this.IsNull(this.tableDtbRptCollectionAdvice.Op_Add1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOp_Add1Null() {
                this[this.tableDtbRptCollectionAdvice.Op_Add1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOp_Add2Null() {
                return this.IsNull(this.tableDtbRptCollectionAdvice.Op_Add2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOp_Add2Null() {
                this[this.tableDtbRptCollectionAdvice.Op_Add2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOp_Add3Null() {
                return this.IsNull(this.tableDtbRptCollectionAdvice.Op_Add3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOp_Add3Null() {
                this[this.tableDtbRptCollectionAdvice.Op_Add3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOp_Add4Null() {
                return this.IsNull(this.tableDtbRptCollectionAdvice.Op_Add4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOp_Add4Null() {
                this[this.tableDtbRptCollectionAdvice.Op_Add4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tableDtbRptCollectionAdvice.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKSNull() {
                this[this.tableDtbRptCollectionAdvice.REMARKSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DtbRptCollectionAdviceRowChangeEvent : global::System.EventArgs {
            
            private DtbRptCollectionAdviceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbRptCollectionAdviceRowChangeEvent(DtbRptCollectionAdviceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbRptCollectionAdviceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FM.TransportPlanning.Report.DstRptCollectionAdviceTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DtbRptCollectionAdviceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DtbRptCollectionAdviceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DtbRptCollectionAdvice";
            tableMapping.ColumnMappings.Add("JOB_NUMBER", "JOB_NUMBER");
            tableMapping.ColumnMappings.Add("SCHEDULE_DATE", "SCHEDULE_DATE");
            tableMapping.ColumnMappings.Add("Driver_Name", "Driver_Name");
            tableMapping.ColumnMappings.Add("VEHICLE_NO", "VEHICLE_NO");
            tableMapping.ColumnMappings.Add("JOB_TYPE", "JOB_TYPE");
            tableMapping.ColumnMappings.Add("END_STOP", "END_STOP");
            tableMapping.ColumnMappings.Add("Operation_Code", "Operation_Code");
            tableMapping.ColumnMappings.Add("Operation_Name", "Operation_Name");
            tableMapping.ColumnMappings.Add("Op_Add1", "Op_Add1");
            tableMapping.ColumnMappings.Add("Op_Add2", "Op_Add2");
            tableMapping.ColumnMappings.Add("Op_Add3", "Op_Add3");
            tableMapping.ColumnMappings.Add("Op_Add4", "Op_Add4");
            tableMapping.ColumnMappings.Add("CONTAINER_NUMBER", "CONTAINER_NUMBER");
            tableMapping.ColumnMappings.Add("SEAL_NUMBER", "SEAL_NUMBER");
            tableMapping.ColumnMappings.Add("CONTAINER_CODE", "CONTAINER_CODE");
            tableMapping.ColumnMappings.Add("GROSS_WEIGHT", "GROSS_WEIGHT");
            tableMapping.ColumnMappings.Add("CARGO_DESCRIPTION", "CARGO_DESCRIPTION");
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS");
            tableMapping.ColumnMappings.Add("CHARGE_CODE", "CHARGE_CODE");
            tableMapping.ColumnMappings.Add("IS_LADEN", "IS_LADEN");
            tableMapping.ColumnMappings.Add("SEQUENCE_NO", "SEQUENCE_NO");
            tableMapping.ColumnMappings.Add("PLANTRIP_NO", "PLANTRIP_NO");
            tableMapping.ColumnMappings.Add("SEQ_NO", "SEQ_NO");
            tableMapping.ColumnMappings.Add("TRAILER_NO", "TRAILER_NO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FM.TransportPlanning.Properties.Settings.Default.FM80_TestingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     TPT_JOB_MAIN_Tbl.JOB_NUMBER, TPT_PLAN_TRIP_TBL.SCHEDULE_DATE, TPT_Driv" +
                "er_Tbl.Driver_Name, TPT_PLAN_TRIP_TBL.VEHICLE_NO, \r\n                      TPT_JO" +
                "B_MAIN_Tbl.JOB_TYPE, TPT_PLAN_SUBTRIP_TBL.END_STOP, CRT_Operation_Database_Tbl.O" +
                "peration_Code, \r\n                      CRT_Operation_Database_Tbl.Operation_Name" +
                ", CRT_Operation_Database_Tbl.Op_Add1, CRT_Operation_Database_Tbl.Op_Add2, \r\n    " +
                "                  CRT_Operation_Database_Tbl.Op_Add3, CRT_Operation_Database_Tbl" +
                ".Op_Add4, TPT_JOB_DETAIL_CARGO_Tbl.CONTAINER_NUMBER, \r\n                      TPT" +
                "_JOB_DETAIL_CARGO_Tbl.SEAL_NUMBER, TPT_JOB_DETAIL_CARGO_Tbl.CONTAINER_CODE, TPT_" +
                "JOB_DETAIL_CARGO_Tbl.GROSS_WEIGHT, \r\n                      TPT_JOB_DETAIL_CARGO_" +
                "Tbl.CARGO_DESCRIPTION, TPT_JOB_DETAIL_CARGO_Tbl.REMARKS, TPT_JOB_DETAIL_CARGO_Tb" +
                "l.CHARGE_CODE, \r\n                      TPT_JOB_DETAIL_CARGO_Tbl.IS_LADEN, TPT_JO" +
                "B_DETAIL_CARGO_Tbl.SEQUENCE_NO, TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO, \r\n        " +
                "              TPT_PLAN_SUBTRIP_JOB_TBL.SEQ_NO, TPT_PLAN_SUBTRIP_TBL.TRAILER_NO\r\n" +
                "FROM         TPT_PLAN_TRIP_TBL INNER JOIN\r\n                      TPT_Driver_Tbl " +
                "ON TPT_PLAN_TRIP_TBL.DRIVER_NO = TPT_Driver_Tbl.Driver_Code INNER JOIN\r\n        " +
                "              TPT_JOB_MAIN_Tbl INNER JOIN\r\n                      TPT_JOB_DETAIL_" +
                "CARGO_Tbl ON TPT_JOB_MAIN_Tbl.JOB_ID = TPT_JOB_DETAIL_CARGO_Tbl.JOB_ID INNER JOI" +
                "N\r\n                      TPT_PLAN_SUBTRIP_JOB_TBL ON TPT_JOB_DETAIL_CARGO_Tbl.JO" +
                "B_ID = TPT_PLAN_SUBTRIP_JOB_TBL.JOB_ID AND \r\n                      TPT_JOB_DETAI" +
                "L_CARGO_Tbl.SEQUENCE_NO = TPT_PLAN_SUBTRIP_JOB_TBL.SEQUENCE_NO INNER JOIN\r\n     " +
                "                 TPT_PLAN_SUBTRIP_TBL ON TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO = " +
                "TPT_PLAN_SUBTRIP_TBL.PLANTRIP_NO AND \r\n                      TPT_PLAN_SUBTRIP_JO" +
                "B_TBL.SEQ_NO = TPT_PLAN_SUBTRIP_TBL.SEQ_NO ON \r\n                      TPT_PLAN_T" +
                "RIP_TBL.PLANTRIP_NO = TPT_PLAN_SUBTRIP_TBL.PLANTRIP_NO INNER JOIN\r\n             " +
                "         CRT_Operation_Database_Tbl ON TPT_PLAN_SUBTRIP_TBL.END_STOP = CRT_Opera" +
                "tion_Database_Tbl.Operation_Code\r\nWHERE   \r\n ( (DRIVER_CODE >= @START_DRIVER_COD" +
                "E) \r\nAND (DRIVER_CODE <= @END_DRIVER_CODE)) \r\nAND ((SCHEDULE_DATE >= @START_SCHE" +
                "DULE_DATE) \r\nAND (SCHEDULE_DATE <= @END_SCHEDULE_DATE)) \r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_DRIVER_CODE", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Driver_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_DRIVER_CODE", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Driver_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_SCHEDULE_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SCHEDULE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@END_SCHEDULE_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SCHEDULE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     TPT_JOB_MAIN_Tbl.JOB_NUMBER, TPT_PLAN_TRIP_TBL.SCHEDULE_DATE, TPT_Driv" +
                "er_Tbl.Driver_Name, TPT_PLAN_TRIP_TBL.VEHICLE_NO, \r\n                      TPT_JO" +
                "B_MAIN_Tbl.JOB_TYPE, TPT_PLAN_SUBTRIP_TBL.END_STOP, CRT_Operation_Database_Tbl.O" +
                "peration_Code, \r\n                      CRT_Operation_Database_Tbl.Operation_Name" +
                ", CRT_Operation_Database_Tbl.Op_Add1, CRT_Operation_Database_Tbl.Op_Add2, \r\n    " +
                "                  CRT_Operation_Database_Tbl.Op_Add3, CRT_Operation_Database_Tbl" +
                ".Op_Add4, TPT_JOB_DETAIL_CARGO_Tbl.CONTAINER_NUMBER, \r\n                      TPT" +
                "_JOB_DETAIL_CARGO_Tbl.SEAL_NUMBER, TPT_JOB_DETAIL_CARGO_Tbl.CONTAINER_CODE, TPT_" +
                "JOB_DETAIL_CARGO_Tbl.GROSS_WEIGHT, \r\n                      TPT_JOB_DETAIL_CARGO_" +
                "Tbl.CARGO_DESCRIPTION, TPT_JOB_DETAIL_CARGO_Tbl.REMARKS, TPT_JOB_DETAIL_CARGO_Tb" +
                "l.CHARGE_CODE, \r\n                      TPT_JOB_DETAIL_CARGO_Tbl.IS_LADEN, TPT_JO" +
                "B_DETAIL_CARGO_Tbl.SEQUENCE_NO, TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO, \r\n        " +
                "              TPT_PLAN_SUBTRIP_JOB_TBL.SEQ_NO, TPT_PLAN_SUBTRIP_TBL.TRAILER_NO\r\n" +
                "FROM         TPT_PLAN_TRIP_TBL INNER JOIN\r\n                      TPT_Driver_Tbl " +
                "ON TPT_PLAN_TRIP_TBL.DRIVER_NO = TPT_Driver_Tbl.Driver_Code INNER JOIN\r\n        " +
                "              TPT_JOB_MAIN_Tbl INNER JOIN\r\n                      TPT_JOB_DETAIL_" +
                "CARGO_Tbl ON TPT_JOB_MAIN_Tbl.JOB_ID = TPT_JOB_DETAIL_CARGO_Tbl.JOB_ID INNER JOI" +
                "N\r\n                      TPT_PLAN_SUBTRIP_JOB_TBL ON TPT_JOB_DETAIL_CARGO_Tbl.JO" +
                "B_ID = TPT_PLAN_SUBTRIP_JOB_TBL.JOB_ID AND \r\n                      TPT_JOB_DETAI" +
                "L_CARGO_Tbl.SEQUENCE_NO = TPT_PLAN_SUBTRIP_JOB_TBL.SEQUENCE_NO INNER JOIN\r\n     " +
                "                 TPT_PLAN_SUBTRIP_TBL ON TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO = " +
                "TPT_PLAN_SUBTRIP_TBL.PLANTRIP_NO AND \r\n                      TPT_PLAN_SUBTRIP_JO" +
                "B_TBL.SEQ_NO = TPT_PLAN_SUBTRIP_TBL.SEQ_NO ON \r\n                      TPT_PLAN_T" +
                "RIP_TBL.PLANTRIP_NO = TPT_PLAN_SUBTRIP_TBL.PLANTRIP_NO INNER JOIN\r\n             " +
                "         CRT_Operation_Database_Tbl ON TPT_PLAN_SUBTRIP_TBL.END_STOP = CRT_Opera" +
                "tion_Database_Tbl.Operation_Code\r\nWHERE\r\n DRIVER_CODE = @DRIVER_CODE\r\nAND SCHEDU" +
                "LE_DATE = @SCHEDULE_DATE\r\n\r\nORDER BY TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO, TPT_P" +
                "LAN_SUBTRIP_TBL.SEQ_NO";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRIVER_CODE", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Driver_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCHEDULE_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SCHEDULE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     TPT_JOB_MAIN_Tbl.JOB_NUMBER, TPT_PLAN_TRIP_TBL.SCHEDULE_DATE, TPT_Driv" +
                "er_Tbl.Driver_Name, TPT_PLAN_TRIP_TBL.VEHICLE_NO, \r\n                      TPT_JO" +
                "B_MAIN_Tbl.JOB_TYPE, TPT_PLAN_SUBTRIP_TBL.END_STOP, CRT_Operation_Database_Tbl.O" +
                "peration_Code, \r\n                      CRT_Operation_Database_Tbl.Operation_Name" +
                ", CRT_Operation_Database_Tbl.Op_Add1, CRT_Operation_Database_Tbl.Op_Add2, \r\n    " +
                "                  CRT_Operation_Database_Tbl.Op_Add3, CRT_Operation_Database_Tbl" +
                ".Op_Add4, TPT_JOB_DETAIL_CARGO_Tbl.CONTAINER_NUMBER, \r\n                      TPT" +
                "_JOB_DETAIL_CARGO_Tbl.SEAL_NUMBER, TPT_JOB_DETAIL_CARGO_Tbl.CONTAINER_CODE, TPT_" +
                "JOB_DETAIL_CARGO_Tbl.GROSS_WEIGHT, \r\n                      TPT_JOB_DETAIL_CARGO_" +
                "Tbl.CARGO_DESCRIPTION, TPT_JOB_DETAIL_CARGO_Tbl.REMARKS, TPT_JOB_DETAIL_CARGO_Tb" +
                "l.CHARGE_CODE, \r\n                      TPT_JOB_DETAIL_CARGO_Tbl.IS_LADEN, TPT_JO" +
                "B_DETAIL_CARGO_Tbl.SEQUENCE_NO, TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO, \r\n        " +
                "              TPT_PLAN_SUBTRIP_JOB_TBL.SEQ_NO, TPT_PLAN_SUBTRIP_TBL.TRAILER_NO\r\n" +
                "FROM         TPT_PLAN_TRIP_TBL INNER JOIN\r\n                      TPT_Driver_Tbl " +
                "ON TPT_PLAN_TRIP_TBL.DRIVER_NO = TPT_Driver_Tbl.Driver_Code INNER JOIN\r\n        " +
                "              TPT_JOB_MAIN_Tbl INNER JOIN\r\n                      TPT_JOB_DETAIL_" +
                "CARGO_Tbl ON TPT_JOB_MAIN_Tbl.JOB_ID = TPT_JOB_DETAIL_CARGO_Tbl.JOB_ID INNER JOI" +
                "N\r\n                      TPT_PLAN_SUBTRIP_JOB_TBL ON TPT_JOB_DETAIL_CARGO_Tbl.JO" +
                "B_ID = TPT_PLAN_SUBTRIP_JOB_TBL.JOB_ID AND \r\n                      TPT_JOB_DETAI" +
                "L_CARGO_Tbl.SEQUENCE_NO = TPT_PLAN_SUBTRIP_JOB_TBL.SEQUENCE_NO INNER JOIN\r\n     " +
                "                 TPT_PLAN_SUBTRIP_TBL ON TPT_PLAN_SUBTRIP_JOB_TBL.PLANTRIP_NO = " +
                "TPT_PLAN_SUBTRIP_TBL.PLANTRIP_NO AND \r\n                      TPT_PLAN_SUBTRIP_JO" +
                "B_TBL.SEQ_NO = TPT_PLAN_SUBTRIP_TBL.SEQ_NO ON \r\n                      TPT_PLAN_T" +
                "RIP_TBL.PLANTRIP_NO = TPT_PLAN_SUBTRIP_TBL.PLANTRIP_NO INNER JOIN\r\n             " +
                "         CRT_Operation_Database_Tbl ON TPT_PLAN_SUBTRIP_TBL.END_STOP = CRT_Opera" +
                "tion_Database_Tbl.Operation_Code\r\nWHERE\r\n DRIVER_CODE = @START_DRIVER_CODE\r\nAND " +
                "SCHEDULE_DATE = @START_SCHEDULE_DATE\r\nAND TPT_JOB_MAIN_Tbl.JOB_NUMBER >= @STARTJ" +
                "OBNO\r\nAND TPT_JOB_MAIN_Tbl.JOB_NUMBER <= @ENDJOBNO";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_DRIVER_CODE", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "Driver_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@START_SCHEDULE_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SCHEDULE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STARTJOBNO", global::System.Data.SqlDbType.VarChar, 26, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENDJOBNO", global::System.Data.SqlDbType.VarChar, 26, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable dataTable, string START_DRIVER_CODE, string END_DRIVER_CODE, System.DateTime START_SCHEDULE_DATE, System.DateTime END_SCHEDULE_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((START_DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("START_DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_DRIVER_CODE));
            }
            if ((END_DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("END_DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(END_DRIVER_CODE));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(START_SCHEDULE_DATE));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(END_SCHEDULE_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable GetData(string START_DRIVER_CODE, string END_DRIVER_CODE, System.DateTime START_SCHEDULE_DATE, System.DateTime END_SCHEDULE_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((START_DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("START_DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_DRIVER_CODE));
            }
            if ((END_DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("END_DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(END_DRIVER_CODE));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(START_SCHEDULE_DATE));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(END_SCHEDULE_DATE));
            DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable dataTable = new DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDriverAndDate(DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable dataTable, string DRIVER_CODE, System.DateTime SCHEDULE_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(DRIVER_CODE));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SCHEDULE_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable GetDataByDriverAndDate(string DRIVER_CODE, System.DateTime SCHEDULE_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(DRIVER_CODE));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SCHEDULE_DATE));
            DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable dataTable = new DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByJobNoDriverAndDate(DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable dataTable, string START_DRIVER_CODE, System.DateTime START_SCHEDULE_DATE, string STARTJOBNO, string ENDJOBNO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((START_DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("START_DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_DRIVER_CODE));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(START_SCHEDULE_DATE));
            if ((STARTJOBNO == null)) {
                throw new global::System.ArgumentNullException("STARTJOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(STARTJOBNO));
            }
            if ((ENDJOBNO == null)) {
                throw new global::System.ArgumentNullException("ENDJOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(ENDJOBNO));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable GetDataByJobNoDriverAndDate(string START_DRIVER_CODE, System.DateTime START_SCHEDULE_DATE, string STARTJOBNO, string ENDJOBNO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((START_DRIVER_CODE == null)) {
                throw new global::System.ArgumentNullException("START_DRIVER_CODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(START_DRIVER_CODE));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(START_SCHEDULE_DATE));
            if ((STARTJOBNO == null)) {
                throw new global::System.ArgumentNullException("STARTJOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(STARTJOBNO));
            }
            if ((ENDJOBNO == null)) {
                throw new global::System.ArgumentNullException("ENDJOBNO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(ENDJOBNO));
            }
            DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable dataTable = new DstRptCollectionAdvice.DtbRptCollectionAdviceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DstRptCollectionAdvice dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DstRptCollectionAdvice dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DstRptCollectionAdvice dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DstRptCollectionAdvice dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591