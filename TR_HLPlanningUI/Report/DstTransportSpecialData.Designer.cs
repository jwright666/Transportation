//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FM.TransportPlanning.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DstTransportSpecialData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DstTransportSpecialData : global::System.Data.DataSet {
        
        private TPT_SPECIAL_DATA_TblDataTable tableTPT_SPECIAL_DATA_Tbl;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DstTransportSpecialData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DstTransportSpecialData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TPT_SPECIAL_DATA_Tbl"] != null)) {
                    base.Tables.Add(new TPT_SPECIAL_DATA_TblDataTable(ds.Tables["TPT_SPECIAL_DATA_Tbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TPT_SPECIAL_DATA_TblDataTable TPT_SPECIAL_DATA_Tbl {
            get {
                return this.tableTPT_SPECIAL_DATA_Tbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DstTransportSpecialData cln = ((DstTransportSpecialData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TPT_SPECIAL_DATA_Tbl"] != null)) {
                    base.Tables.Add(new TPT_SPECIAL_DATA_TblDataTable(ds.Tables["TPT_SPECIAL_DATA_Tbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTPT_SPECIAL_DATA_Tbl = ((TPT_SPECIAL_DATA_TblDataTable)(base.Tables["TPT_SPECIAL_DATA_Tbl"]));
            if ((initTable == true)) {
                if ((this.tableTPT_SPECIAL_DATA_Tbl != null)) {
                    this.tableTPT_SPECIAL_DATA_Tbl.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DstTransportSpecialData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DstTransportSpecialData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTPT_SPECIAL_DATA_Tbl = new TPT_SPECIAL_DATA_TblDataTable();
            base.Tables.Add(this.tableTPT_SPECIAL_DATA_Tbl);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTPT_SPECIAL_DATA_Tbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DstTransportSpecialData ds = new DstTransportSpecialData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TPT_SPECIAL_DATA_TblRowChangeEventHandler(object sender, TPT_SPECIAL_DATA_TblRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TPT_SPECIAL_DATA_TblDataTable : global::System.Data.TypedTableBase<TPT_SPECIAL_DATA_TblRow> {
            
            private global::System.Data.DataColumn columnRECORD_KEY;
            
            private global::System.Data.DataColumn columnTPT_CODE;
            
            private global::System.Data.DataColumn columnTPT_NAME;
            
            private global::System.Data.DataColumn columnADDRESS1;
            
            private global::System.Data.DataColumn columnADDRESS2;
            
            private global::System.Data.DataColumn columnADDRESS3;
            
            private global::System.Data.DataColumn columnADDRESS4;
            
            private global::System.Data.DataColumn columnBOOKING_NO;
            
            private global::System.Data.DataColumn columnJOB_NO;
            
            private global::System.Data.DataColumn columnBOOKING_NO_PREFIX;
            
            private global::System.Data.DataColumn columnJOB_NO_PREFIX;
            
            private global::System.Data.DataColumn columnLOG_NO;
            
            private global::System.Data.DataColumn columnPRICES_VISIBLE_IN_JOB;
            
            private global::System.Data.DataColumn columnQUANTITY_DECIMAL;
            
            private global::System.Data.DataColumn columnFOREIGN_CURRENCY_DECIMAL;
            
            private global::System.Data.DataColumn columnTOTAL_AMOUNT_DECIMAL;
            
            private global::System.Data.DataColumn columnUNIT_AMOUNT_DECIMAL;
            
            private global::System.Data.DataColumn columnQUOTATION_NO;
            
            private global::System.Data.DataColumn columnCOMPANY_REG_NO;
            
            private global::System.Data.DataColumn columnGST_REG_NO;
            
            private global::System.Data.DataColumn columnTRUCK_JOB_NO_PREFIX;
            
            private global::System.Data.DataColumn columnCULTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblDataTable() {
                this.TableName = "TPT_SPECIAL_DATA_Tbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TPT_SPECIAL_DATA_TblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TPT_SPECIAL_DATA_TblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECORD_KEYColumn {
                get {
                    return this.columnRECORD_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TPT_CODEColumn {
                get {
                    return this.columnTPT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TPT_NAMEColumn {
                get {
                    return this.columnTPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRESS1Column {
                get {
                    return this.columnADDRESS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRESS2Column {
                get {
                    return this.columnADDRESS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRESS3Column {
                get {
                    return this.columnADDRESS3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRESS4Column {
                get {
                    return this.columnADDRESS4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOOKING_NOColumn {
                get {
                    return this.columnBOOKING_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NOColumn {
                get {
                    return this.columnJOB_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOOKING_NO_PREFIXColumn {
                get {
                    return this.columnBOOKING_NO_PREFIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NO_PREFIXColumn {
                get {
                    return this.columnJOB_NO_PREFIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOG_NOColumn {
                get {
                    return this.columnLOG_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRICES_VISIBLE_IN_JOBColumn {
                get {
                    return this.columnPRICES_VISIBLE_IN_JOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUANTITY_DECIMALColumn {
                get {
                    return this.columnQUANTITY_DECIMAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FOREIGN_CURRENCY_DECIMALColumn {
                get {
                    return this.columnFOREIGN_CURRENCY_DECIMAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_AMOUNT_DECIMALColumn {
                get {
                    return this.columnTOTAL_AMOUNT_DECIMAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIT_AMOUNT_DECIMALColumn {
                get {
                    return this.columnUNIT_AMOUNT_DECIMAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUOTATION_NOColumn {
                get {
                    return this.columnQUOTATION_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPANY_REG_NOColumn {
                get {
                    return this.columnCOMPANY_REG_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GST_REG_NOColumn {
                get {
                    return this.columnGST_REG_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRUCK_JOB_NO_PREFIXColumn {
                get {
                    return this.columnTRUCK_JOB_NO_PREFIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CULTUREColumn {
                get {
                    return this.columnCULTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblRow this[int index] {
                get {
                    return ((TPT_SPECIAL_DATA_TblRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TPT_SPECIAL_DATA_TblRowChangeEventHandler TPT_SPECIAL_DATA_TblRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TPT_SPECIAL_DATA_TblRowChangeEventHandler TPT_SPECIAL_DATA_TblRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TPT_SPECIAL_DATA_TblRowChangeEventHandler TPT_SPECIAL_DATA_TblRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TPT_SPECIAL_DATA_TblRowChangeEventHandler TPT_SPECIAL_DATA_TblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTPT_SPECIAL_DATA_TblRow(TPT_SPECIAL_DATA_TblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblRow AddTPT_SPECIAL_DATA_TblRow(
                        string RECORD_KEY, 
                        string TPT_CODE, 
                        string TPT_NAME, 
                        string ADDRESS1, 
                        string ADDRESS2, 
                        string ADDRESS3, 
                        string ADDRESS4, 
                        int BOOKING_NO, 
                        int JOB_NO, 
                        string BOOKING_NO_PREFIX, 
                        string JOB_NO_PREFIX, 
                        int LOG_NO, 
                        string PRICES_VISIBLE_IN_JOB, 
                        int QUANTITY_DECIMAL, 
                        int FOREIGN_CURRENCY_DECIMAL, 
                        int TOTAL_AMOUNT_DECIMAL, 
                        int UNIT_AMOUNT_DECIMAL, 
                        int QUOTATION_NO, 
                        string COMPANY_REG_NO, 
                        string GST_REG_NO, 
                        string TRUCK_JOB_NO_PREFIX, 
                        string CULTURE) {
                TPT_SPECIAL_DATA_TblRow rowTPT_SPECIAL_DATA_TblRow = ((TPT_SPECIAL_DATA_TblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RECORD_KEY,
                        TPT_CODE,
                        TPT_NAME,
                        ADDRESS1,
                        ADDRESS2,
                        ADDRESS3,
                        ADDRESS4,
                        BOOKING_NO,
                        JOB_NO,
                        BOOKING_NO_PREFIX,
                        JOB_NO_PREFIX,
                        LOG_NO,
                        PRICES_VISIBLE_IN_JOB,
                        QUANTITY_DECIMAL,
                        FOREIGN_CURRENCY_DECIMAL,
                        TOTAL_AMOUNT_DECIMAL,
                        UNIT_AMOUNT_DECIMAL,
                        QUOTATION_NO,
                        COMPANY_REG_NO,
                        GST_REG_NO,
                        TRUCK_JOB_NO_PREFIX,
                        CULTURE};
                rowTPT_SPECIAL_DATA_TblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTPT_SPECIAL_DATA_TblRow);
                return rowTPT_SPECIAL_DATA_TblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblRow FindByRECORD_KEY(string RECORD_KEY) {
                return ((TPT_SPECIAL_DATA_TblRow)(this.Rows.Find(new object[] {
                            RECORD_KEY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TPT_SPECIAL_DATA_TblDataTable cln = ((TPT_SPECIAL_DATA_TblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TPT_SPECIAL_DATA_TblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRECORD_KEY = base.Columns["RECORD_KEY"];
                this.columnTPT_CODE = base.Columns["TPT_CODE"];
                this.columnTPT_NAME = base.Columns["TPT_NAME"];
                this.columnADDRESS1 = base.Columns["ADDRESS1"];
                this.columnADDRESS2 = base.Columns["ADDRESS2"];
                this.columnADDRESS3 = base.Columns["ADDRESS3"];
                this.columnADDRESS4 = base.Columns["ADDRESS4"];
                this.columnBOOKING_NO = base.Columns["BOOKING_NO"];
                this.columnJOB_NO = base.Columns["JOB_NO"];
                this.columnBOOKING_NO_PREFIX = base.Columns["BOOKING_NO_PREFIX"];
                this.columnJOB_NO_PREFIX = base.Columns["JOB_NO_PREFIX"];
                this.columnLOG_NO = base.Columns["LOG_NO"];
                this.columnPRICES_VISIBLE_IN_JOB = base.Columns["PRICES_VISIBLE_IN_JOB"];
                this.columnQUANTITY_DECIMAL = base.Columns["QUANTITY_DECIMAL"];
                this.columnFOREIGN_CURRENCY_DECIMAL = base.Columns["FOREIGN_CURRENCY_DECIMAL"];
                this.columnTOTAL_AMOUNT_DECIMAL = base.Columns["TOTAL_AMOUNT_DECIMAL"];
                this.columnUNIT_AMOUNT_DECIMAL = base.Columns["UNIT_AMOUNT_DECIMAL"];
                this.columnQUOTATION_NO = base.Columns["QUOTATION_NO"];
                this.columnCOMPANY_REG_NO = base.Columns["COMPANY_REG_NO"];
                this.columnGST_REG_NO = base.Columns["GST_REG_NO"];
                this.columnTRUCK_JOB_NO_PREFIX = base.Columns["TRUCK_JOB_NO_PREFIX"];
                this.columnCULTURE = base.Columns["CULTURE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRECORD_KEY = new global::System.Data.DataColumn("RECORD_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECORD_KEY);
                this.columnTPT_CODE = new global::System.Data.DataColumn("TPT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPT_CODE);
                this.columnTPT_NAME = new global::System.Data.DataColumn("TPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPT_NAME);
                this.columnADDRESS1 = new global::System.Data.DataColumn("ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS1);
                this.columnADDRESS2 = new global::System.Data.DataColumn("ADDRESS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS2);
                this.columnADDRESS3 = new global::System.Data.DataColumn("ADDRESS3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS3);
                this.columnADDRESS4 = new global::System.Data.DataColumn("ADDRESS4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS4);
                this.columnBOOKING_NO = new global::System.Data.DataColumn("BOOKING_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOOKING_NO);
                this.columnJOB_NO = new global::System.Data.DataColumn("JOB_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NO);
                this.columnBOOKING_NO_PREFIX = new global::System.Data.DataColumn("BOOKING_NO_PREFIX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOOKING_NO_PREFIX);
                this.columnJOB_NO_PREFIX = new global::System.Data.DataColumn("JOB_NO_PREFIX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NO_PREFIX);
                this.columnLOG_NO = new global::System.Data.DataColumn("LOG_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_NO);
                this.columnPRICES_VISIBLE_IN_JOB = new global::System.Data.DataColumn("PRICES_VISIBLE_IN_JOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICES_VISIBLE_IN_JOB);
                this.columnQUANTITY_DECIMAL = new global::System.Data.DataColumn("QUANTITY_DECIMAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_DECIMAL);
                this.columnFOREIGN_CURRENCY_DECIMAL = new global::System.Data.DataColumn("FOREIGN_CURRENCY_DECIMAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOREIGN_CURRENCY_DECIMAL);
                this.columnTOTAL_AMOUNT_DECIMAL = new global::System.Data.DataColumn("TOTAL_AMOUNT_DECIMAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_AMOUNT_DECIMAL);
                this.columnUNIT_AMOUNT_DECIMAL = new global::System.Data.DataColumn("UNIT_AMOUNT_DECIMAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_AMOUNT_DECIMAL);
                this.columnQUOTATION_NO = new global::System.Data.DataColumn("QUOTATION_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUOTATION_NO);
                this.columnCOMPANY_REG_NO = new global::System.Data.DataColumn("COMPANY_REG_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_REG_NO);
                this.columnGST_REG_NO = new global::System.Data.DataColumn("GST_REG_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGST_REG_NO);
                this.columnTRUCK_JOB_NO_PREFIX = new global::System.Data.DataColumn("TRUCK_JOB_NO_PREFIX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRUCK_JOB_NO_PREFIX);
                this.columnCULTURE = new global::System.Data.DataColumn("CULTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCULTURE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRECORD_KEY}, true));
                this.columnRECORD_KEY.AllowDBNull = false;
                this.columnRECORD_KEY.Unique = true;
                this.columnRECORD_KEY.MaxLength = 50;
                this.columnTPT_CODE.AllowDBNull = false;
                this.columnTPT_CODE.MaxLength = 50;
                this.columnTPT_NAME.AllowDBNull = false;
                this.columnTPT_NAME.MaxLength = 50;
                this.columnADDRESS1.AllowDBNull = false;
                this.columnADDRESS1.MaxLength = 50;
                this.columnADDRESS2.AllowDBNull = false;
                this.columnADDRESS2.MaxLength = 50;
                this.columnADDRESS3.AllowDBNull = false;
                this.columnADDRESS3.MaxLength = 50;
                this.columnADDRESS4.AllowDBNull = false;
                this.columnADDRESS4.MaxLength = 50;
                this.columnBOOKING_NO.AllowDBNull = false;
                this.columnJOB_NO.AllowDBNull = false;
                this.columnBOOKING_NO_PREFIX.AllowDBNull = false;
                this.columnBOOKING_NO_PREFIX.MaxLength = 50;
                this.columnJOB_NO_PREFIX.AllowDBNull = false;
                this.columnJOB_NO_PREFIX.MaxLength = 50;
                this.columnLOG_NO.AllowDBNull = false;
                this.columnPRICES_VISIBLE_IN_JOB.AllowDBNull = false;
                this.columnPRICES_VISIBLE_IN_JOB.MaxLength = 1;
                this.columnQUANTITY_DECIMAL.AllowDBNull = false;
                this.columnFOREIGN_CURRENCY_DECIMAL.AllowDBNull = false;
                this.columnTOTAL_AMOUNT_DECIMAL.AllowDBNull = false;
                this.columnUNIT_AMOUNT_DECIMAL.AllowDBNull = false;
                this.columnQUOTATION_NO.AllowDBNull = false;
                this.columnCOMPANY_REG_NO.AllowDBNull = false;
                this.columnCOMPANY_REG_NO.MaxLength = 20;
                this.columnGST_REG_NO.AllowDBNull = false;
                this.columnGST_REG_NO.MaxLength = 20;
                this.columnTRUCK_JOB_NO_PREFIX.AllowDBNull = false;
                this.columnTRUCK_JOB_NO_PREFIX.MaxLength = 50;
                this.columnCULTURE.AllowDBNull = false;
                this.columnCULTURE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblRow NewTPT_SPECIAL_DATA_TblRow() {
                return ((TPT_SPECIAL_DATA_TblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TPT_SPECIAL_DATA_TblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TPT_SPECIAL_DATA_TblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TPT_SPECIAL_DATA_TblRowChanged != null)) {
                    this.TPT_SPECIAL_DATA_TblRowChanged(this, new TPT_SPECIAL_DATA_TblRowChangeEvent(((TPT_SPECIAL_DATA_TblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TPT_SPECIAL_DATA_TblRowChanging != null)) {
                    this.TPT_SPECIAL_DATA_TblRowChanging(this, new TPT_SPECIAL_DATA_TblRowChangeEvent(((TPT_SPECIAL_DATA_TblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TPT_SPECIAL_DATA_TblRowDeleted != null)) {
                    this.TPT_SPECIAL_DATA_TblRowDeleted(this, new TPT_SPECIAL_DATA_TblRowChangeEvent(((TPT_SPECIAL_DATA_TblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TPT_SPECIAL_DATA_TblRowDeleting != null)) {
                    this.TPT_SPECIAL_DATA_TblRowDeleting(this, new TPT_SPECIAL_DATA_TblRowChangeEvent(((TPT_SPECIAL_DATA_TblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTPT_SPECIAL_DATA_TblRow(TPT_SPECIAL_DATA_TblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DstTransportSpecialData ds = new DstTransportSpecialData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TPT_SPECIAL_DATA_TblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TPT_SPECIAL_DATA_TblRow : global::System.Data.DataRow {
            
            private TPT_SPECIAL_DATA_TblDataTable tableTPT_SPECIAL_DATA_Tbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TPT_SPECIAL_DATA_TblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTPT_SPECIAL_DATA_Tbl = ((TPT_SPECIAL_DATA_TblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RECORD_KEY {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.RECORD_KEYColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.RECORD_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TPT_CODE {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.TPT_CODEColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.TPT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TPT_NAME {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.TPT_NAMEColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.TPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDRESS1 {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS1Column]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDRESS2 {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS2Column]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDRESS3 {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS3Column]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDRESS4 {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS4Column]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.ADDRESS4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BOOKING_NO {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.BOOKING_NOColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.BOOKING_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JOB_NO {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.JOB_NOColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.JOB_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BOOKING_NO_PREFIX {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.BOOKING_NO_PREFIXColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.BOOKING_NO_PREFIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NO_PREFIX {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.JOB_NO_PREFIXColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.JOB_NO_PREFIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOG_NO {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.LOG_NOColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.LOG_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PRICES_VISIBLE_IN_JOB {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.PRICES_VISIBLE_IN_JOBColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.PRICES_VISIBLE_IN_JOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QUANTITY_DECIMAL {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.QUANTITY_DECIMALColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.QUANTITY_DECIMALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FOREIGN_CURRENCY_DECIMAL {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.FOREIGN_CURRENCY_DECIMALColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.FOREIGN_CURRENCY_DECIMALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TOTAL_AMOUNT_DECIMAL {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.TOTAL_AMOUNT_DECIMALColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.TOTAL_AMOUNT_DECIMALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UNIT_AMOUNT_DECIMAL {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.UNIT_AMOUNT_DECIMALColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.UNIT_AMOUNT_DECIMALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QUOTATION_NO {
                get {
                    return ((int)(this[this.tableTPT_SPECIAL_DATA_Tbl.QUOTATION_NOColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.QUOTATION_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPANY_REG_NO {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.COMPANY_REG_NOColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.COMPANY_REG_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GST_REG_NO {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.GST_REG_NOColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.GST_REG_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TRUCK_JOB_NO_PREFIX {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.TRUCK_JOB_NO_PREFIXColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.TRUCK_JOB_NO_PREFIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CULTURE {
                get {
                    return ((string)(this[this.tableTPT_SPECIAL_DATA_Tbl.CULTUREColumn]));
                }
                set {
                    this[this.tableTPT_SPECIAL_DATA_Tbl.CULTUREColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TPT_SPECIAL_DATA_TblRowChangeEvent : global::System.EventArgs {
            
            private TPT_SPECIAL_DATA_TblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblRowChangeEvent(TPT_SPECIAL_DATA_TblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TPT_SPECIAL_DATA_TblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FM.TransportPlanning.Report.DstTransportSpecialDataTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TPT_SPECIAL_DATA_TblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPT_SPECIAL_DATA_TblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TPT_SPECIAL_DATA_Tbl";
            tableMapping.ColumnMappings.Add("RECORD_KEY", "RECORD_KEY");
            tableMapping.ColumnMappings.Add("TPT_CODE", "TPT_CODE");
            tableMapping.ColumnMappings.Add("TPT_NAME", "TPT_NAME");
            tableMapping.ColumnMappings.Add("ADDRESS1", "ADDRESS1");
            tableMapping.ColumnMappings.Add("ADDRESS2", "ADDRESS2");
            tableMapping.ColumnMappings.Add("ADDRESS3", "ADDRESS3");
            tableMapping.ColumnMappings.Add("ADDRESS4", "ADDRESS4");
            tableMapping.ColumnMappings.Add("BOOKING_NO", "BOOKING_NO");
            tableMapping.ColumnMappings.Add("JOB_NO", "JOB_NO");
            tableMapping.ColumnMappings.Add("BOOKING_NO_PREFIX", "BOOKING_NO_PREFIX");
            tableMapping.ColumnMappings.Add("JOB_NO_PREFIX", "JOB_NO_PREFIX");
            tableMapping.ColumnMappings.Add("LOG_NO", "LOG_NO");
            tableMapping.ColumnMappings.Add("PRICES_VISIBLE_IN_JOB", "PRICES_VISIBLE_IN_JOB");
            tableMapping.ColumnMappings.Add("QUANTITY_DECIMAL", "QUANTITY_DECIMAL");
            tableMapping.ColumnMappings.Add("FOREIGN_CURRENCY_DECIMAL", "FOREIGN_CURRENCY_DECIMAL");
            tableMapping.ColumnMappings.Add("TOTAL_AMOUNT_DECIMAL", "TOTAL_AMOUNT_DECIMAL");
            tableMapping.ColumnMappings.Add("UNIT_AMOUNT_DECIMAL", "UNIT_AMOUNT_DECIMAL");
            tableMapping.ColumnMappings.Add("QUOTATION_NO", "QUOTATION_NO");
            tableMapping.ColumnMappings.Add("COMPANY_REG_NO", "COMPANY_REG_NO");
            tableMapping.ColumnMappings.Add("GST_REG_NO", "GST_REG_NO");
            tableMapping.ColumnMappings.Add("TRUCK_JOB_NO_PREFIX", "TRUCK_JOB_NO_PREFIX");
            tableMapping.ColumnMappings.Add("CULTURE", "CULTURE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TPT_SPECIAL_DATA_Tbl] WHERE (([RECORD_KEY] = @Original_RECORD_KEY) AND ([TPT_CODE] = @Original_TPT_CODE) AND ([TPT_NAME] = @Original_TPT_NAME) AND ([ADDRESS1] = @Original_ADDRESS1) AND ([ADDRESS2] = @Original_ADDRESS2) AND ([ADDRESS3] = @Original_ADDRESS3) AND ([ADDRESS4] = @Original_ADDRESS4) AND ([BOOKING_NO] = @Original_BOOKING_NO) AND ([JOB_NO] = @Original_JOB_NO) AND ([BOOKING_NO_PREFIX] = @Original_BOOKING_NO_PREFIX) AND ([JOB_NO_PREFIX] = @Original_JOB_NO_PREFIX) AND ([LOG_NO] = @Original_LOG_NO) AND ([PRICES_VISIBLE_IN_JOB] = @Original_PRICES_VISIBLE_IN_JOB) AND ([QUANTITY_DECIMAL] = @Original_QUANTITY_DECIMAL) AND ([FOREIGN_CURRENCY_DECIMAL] = @Original_FOREIGN_CURRENCY_DECIMAL) AND ([TOTAL_AMOUNT_DECIMAL] = @Original_TOTAL_AMOUNT_DECIMAL) AND ([UNIT_AMOUNT_DECIMAL] = @Original_UNIT_AMOUNT_DECIMAL) AND ([QUOTATION_NO] = @Original_QUOTATION_NO) AND ([COMPANY_REG_NO] = @Original_COMPANY_REG_NO) AND ([GST_REG_NO] = @Original_GST_REG_NO) AND ([TRUCK_JOB_NO_PREFIX] = @Original_TRUCK_JOB_NO_PREFIX) AND ([CULTURE] = @Original_CULTURE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECORD_KEY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_KEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TPT_CODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TPT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOOKING_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOOKING_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO_PREFIX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO_PREFIX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOG_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICES_VISIBLE_IN_JOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICES_VISIBLE_IN_JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FOREIGN_CURRENCY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOREIGN_CURRENCY_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNIT_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUOTATION_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_REG_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GST_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GST_REG_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TRUCK_JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRUCK_JOB_NO_PREFIX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CULTURE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CULTURE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TPT_SPECIAL_DATA_Tbl] ([RECORD_KEY], [TPT_CODE], [TPT_NAME], [ADDRESS1], [ADDRESS2], [ADDRESS3], [ADDRESS4], [BOOKING_NO], [JOB_NO], [BOOKING_NO_PREFIX], [JOB_NO_PREFIX], [LOG_NO], [PRICES_VISIBLE_IN_JOB], [QUANTITY_DECIMAL], [FOREIGN_CURRENCY_DECIMAL], [TOTAL_AMOUNT_DECIMAL], [UNIT_AMOUNT_DECIMAL], [QUOTATION_NO], [COMPANY_REG_NO], [GST_REG_NO], [TRUCK_JOB_NO_PREFIX], [CULTURE]) VALUES (@RECORD_KEY, @TPT_CODE, @TPT_NAME, @ADDRESS1, @ADDRESS2, @ADDRESS3, @ADDRESS4, @BOOKING_NO, @JOB_NO, @BOOKING_NO_PREFIX, @JOB_NO_PREFIX, @LOG_NO, @PRICES_VISIBLE_IN_JOB, @QUANTITY_DECIMAL, @FOREIGN_CURRENCY_DECIMAL, @TOTAL_AMOUNT_DECIMAL, @UNIT_AMOUNT_DECIMAL, @QUOTATION_NO, @COMPANY_REG_NO, @GST_REG_NO, @TRUCK_JOB_NO_PREFIX, @CULTURE);
SELECT RECORD_KEY, TPT_CODE, TPT_NAME, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, BOOKING_NO, JOB_NO, BOOKING_NO_PREFIX, JOB_NO_PREFIX, LOG_NO, PRICES_VISIBLE_IN_JOB, QUANTITY_DECIMAL, FOREIGN_CURRENCY_DECIMAL, TOTAL_AMOUNT_DECIMAL, UNIT_AMOUNT_DECIMAL, QUOTATION_NO, COMPANY_REG_NO, GST_REG_NO, TRUCK_JOB_NO_PREFIX, CULTURE FROM TPT_SPECIAL_DATA_Tbl WHERE (RECORD_KEY = @RECORD_KEY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECORD_KEY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_KEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TPT_CODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TPT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOOKING_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOOKING_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO_PREFIX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO_PREFIX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICES_VISIBLE_IN_JOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICES_VISIBLE_IN_JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOREIGN_CURRENCY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOREIGN_CURRENCY_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNIT_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUOTATION_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_REG_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GST_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GST_REG_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRUCK_JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRUCK_JOB_NO_PREFIX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CULTURE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CULTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TPT_SPECIAL_DATA_Tbl] SET [RECORD_KEY] = @RECORD_KEY, [TPT_CODE] = @TPT_C" +
                "ODE, [TPT_NAME] = @TPT_NAME, [ADDRESS1] = @ADDRESS1, [ADDRESS2] = @ADDRESS2, [AD" +
                "DRESS3] = @ADDRESS3, [ADDRESS4] = @ADDRESS4, [BOOKING_NO] = @BOOKING_NO, [JOB_NO" +
                "] = @JOB_NO, [BOOKING_NO_PREFIX] = @BOOKING_NO_PREFIX, [JOB_NO_PREFIX] = @JOB_NO" +
                "_PREFIX, [LOG_NO] = @LOG_NO, [PRICES_VISIBLE_IN_JOB] = @PRICES_VISIBLE_IN_JOB, [" +
                "QUANTITY_DECIMAL] = @QUANTITY_DECIMAL, [FOREIGN_CURRENCY_DECIMAL] = @FOREIGN_CUR" +
                "RENCY_DECIMAL, [TOTAL_AMOUNT_DECIMAL] = @TOTAL_AMOUNT_DECIMAL, [UNIT_AMOUNT_DECI" +
                "MAL] = @UNIT_AMOUNT_DECIMAL, [QUOTATION_NO] = @QUOTATION_NO, [COMPANY_REG_NO] = " +
                "@COMPANY_REG_NO, [GST_REG_NO] = @GST_REG_NO, [TRUCK_JOB_NO_PREFIX] = @TRUCK_JOB_" +
                "NO_PREFIX, [CULTURE] = @CULTURE WHERE (([RECORD_KEY] = @Original_RECORD_KEY) AND" +
                " ([TPT_CODE] = @Original_TPT_CODE) AND ([TPT_NAME] = @Original_TPT_NAME) AND ([A" +
                "DDRESS1] = @Original_ADDRESS1) AND ([ADDRESS2] = @Original_ADDRESS2) AND ([ADDRE" +
                "SS3] = @Original_ADDRESS3) AND ([ADDRESS4] = @Original_ADDRESS4) AND ([BOOKING_N" +
                "O] = @Original_BOOKING_NO) AND ([JOB_NO] = @Original_JOB_NO) AND ([BOOKING_NO_PR" +
                "EFIX] = @Original_BOOKING_NO_PREFIX) AND ([JOB_NO_PREFIX] = @Original_JOB_NO_PRE" +
                "FIX) AND ([LOG_NO] = @Original_LOG_NO) AND ([PRICES_VISIBLE_IN_JOB] = @Original_" +
                "PRICES_VISIBLE_IN_JOB) AND ([QUANTITY_DECIMAL] = @Original_QUANTITY_DECIMAL) AND" +
                " ([FOREIGN_CURRENCY_DECIMAL] = @Original_FOREIGN_CURRENCY_DECIMAL) AND ([TOTAL_A" +
                "MOUNT_DECIMAL] = @Original_TOTAL_AMOUNT_DECIMAL) AND ([UNIT_AMOUNT_DECIMAL] = @O" +
                "riginal_UNIT_AMOUNT_DECIMAL) AND ([QUOTATION_NO] = @Original_QUOTATION_NO) AND (" +
                "[COMPANY_REG_NO] = @Original_COMPANY_REG_NO) AND ([GST_REG_NO] = @Original_GST_R" +
                "EG_NO) AND ([TRUCK_JOB_NO_PREFIX] = @Original_TRUCK_JOB_NO_PREFIX) AND ([CULTURE" +
                "] = @Original_CULTURE));\r\nSELECT RECORD_KEY, TPT_CODE, TPT_NAME, ADDRESS1, ADDRE" +
                "SS2, ADDRESS3, ADDRESS4, BOOKING_NO, JOB_NO, BOOKING_NO_PREFIX, JOB_NO_PREFIX, L" +
                "OG_NO, PRICES_VISIBLE_IN_JOB, QUANTITY_DECIMAL, FOREIGN_CURRENCY_DECIMAL, TOTAL_" +
                "AMOUNT_DECIMAL, UNIT_AMOUNT_DECIMAL, QUOTATION_NO, COMPANY_REG_NO, GST_REG_NO, T" +
                "RUCK_JOB_NO_PREFIX, CULTURE FROM TPT_SPECIAL_DATA_Tbl WHERE (RECORD_KEY = @RECOR" +
                "D_KEY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECORD_KEY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_KEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TPT_CODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TPT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOOKING_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOOKING_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO_PREFIX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO_PREFIX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICES_VISIBLE_IN_JOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICES_VISIBLE_IN_JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOREIGN_CURRENCY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOREIGN_CURRENCY_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNIT_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUOTATION_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPANY_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_REG_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GST_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GST_REG_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRUCK_JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRUCK_JOB_NO_PREFIX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CULTURE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CULTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECORD_KEY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECORD_KEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TPT_CODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TPT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TPT_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOOKING_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOOKING_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOOKING_NO_PREFIX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NO_PREFIX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOG_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICES_VISIBLE_IN_JOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICES_VISIBLE_IN_JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FOREIGN_CURRENCY_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOREIGN_CURRENCY_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNIT_AMOUNT_DECIMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_AMOUNT_DECIMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUOTATION_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUOTATION_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPANY_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPANY_REG_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GST_REG_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GST_REG_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TRUCK_JOB_NO_PREFIX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRUCK_JOB_NO_PREFIX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CULTURE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CULTURE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FM.TransportPlanning.Properties.Settings.Default.FM72_JE_TESTING_supportsrv_innosqlmaster;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from TPT_SPECIAL_DATA_Tbl";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DstTransportSpecialData.TPT_SPECIAL_DATA_TblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DstTransportSpecialData.TPT_SPECIAL_DATA_TblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DstTransportSpecialData.TPT_SPECIAL_DATA_TblDataTable dataTable = new DstTransportSpecialData.TPT_SPECIAL_DATA_TblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DstTransportSpecialData.TPT_SPECIAL_DATA_TblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DstTransportSpecialData dataSet) {
            return this.Adapter.Update(dataSet, "TPT_SPECIAL_DATA_Tbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_RECORD_KEY, 
                    string Original_TPT_CODE, 
                    string Original_TPT_NAME, 
                    string Original_ADDRESS1, 
                    string Original_ADDRESS2, 
                    string Original_ADDRESS3, 
                    string Original_ADDRESS4, 
                    int Original_BOOKING_NO, 
                    int Original_JOB_NO, 
                    string Original_BOOKING_NO_PREFIX, 
                    string Original_JOB_NO_PREFIX, 
                    int Original_LOG_NO, 
                    string Original_PRICES_VISIBLE_IN_JOB, 
                    int Original_QUANTITY_DECIMAL, 
                    int Original_FOREIGN_CURRENCY_DECIMAL, 
                    int Original_TOTAL_AMOUNT_DECIMAL, 
                    int Original_UNIT_AMOUNT_DECIMAL, 
                    int Original_QUOTATION_NO, 
                    string Original_COMPANY_REG_NO, 
                    string Original_GST_REG_NO, 
                    string Original_TRUCK_JOB_NO_PREFIX, 
                    string Original_CULTURE) {
            if ((Original_RECORD_KEY == null)) {
                throw new global::System.ArgumentNullException("Original_RECORD_KEY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_RECORD_KEY));
            }
            if ((Original_TPT_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_TPT_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TPT_CODE));
            }
            if ((Original_TPT_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_TPT_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TPT_NAME));
            }
            if ((Original_ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ADDRESS1));
            }
            if ((Original_ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ADDRESS2));
            }
            if ((Original_ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ADDRESS3));
            }
            if ((Original_ADDRESS4 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS4");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ADDRESS4));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_BOOKING_NO));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_JOB_NO));
            if ((Original_BOOKING_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("Original_BOOKING_NO_PREFIX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_BOOKING_NO_PREFIX));
            }
            if ((Original_JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NO_PREFIX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_JOB_NO_PREFIX));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_LOG_NO));
            if ((Original_PRICES_VISIBLE_IN_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_PRICES_VISIBLE_IN_JOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PRICES_VISIBLE_IN_JOB));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_QUANTITY_DECIMAL));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_FOREIGN_CURRENCY_DECIMAL));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_TOTAL_AMOUNT_DECIMAL));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_UNIT_AMOUNT_DECIMAL));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_QUOTATION_NO));
            if ((Original_COMPANY_REG_NO == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANY_REG_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_COMPANY_REG_NO));
            }
            if ((Original_GST_REG_NO == null)) {
                throw new global::System.ArgumentNullException("Original_GST_REG_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_GST_REG_NO));
            }
            if ((Original_TRUCK_JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("Original_TRUCK_JOB_NO_PREFIX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_TRUCK_JOB_NO_PREFIX));
            }
            if ((Original_CULTURE == null)) {
                throw new global::System.ArgumentNullException("Original_CULTURE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_CULTURE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string RECORD_KEY, 
                    string TPT_CODE, 
                    string TPT_NAME, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string ADDRESS3, 
                    string ADDRESS4, 
                    int BOOKING_NO, 
                    int JOB_NO, 
                    string BOOKING_NO_PREFIX, 
                    string JOB_NO_PREFIX, 
                    int LOG_NO, 
                    string PRICES_VISIBLE_IN_JOB, 
                    int QUANTITY_DECIMAL, 
                    int FOREIGN_CURRENCY_DECIMAL, 
                    int TOTAL_AMOUNT_DECIMAL, 
                    int UNIT_AMOUNT_DECIMAL, 
                    int QUOTATION_NO, 
                    string COMPANY_REG_NO, 
                    string GST_REG_NO, 
                    string TRUCK_JOB_NO_PREFIX, 
                    string CULTURE) {
            if ((RECORD_KEY == null)) {
                throw new global::System.ArgumentNullException("RECORD_KEY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RECORD_KEY));
            }
            if ((TPT_CODE == null)) {
                throw new global::System.ArgumentNullException("TPT_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TPT_CODE));
            }
            if ((TPT_NAME == null)) {
                throw new global::System.ArgumentNullException("TPT_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TPT_NAME));
            }
            if ((ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ADDRESS1));
            }
            if ((ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ADDRESS2));
            }
            if ((ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ADDRESS3));
            }
            if ((ADDRESS4 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ADDRESS4));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(BOOKING_NO));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(JOB_NO));
            if ((BOOKING_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("BOOKING_NO_PREFIX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(BOOKING_NO_PREFIX));
            }
            if ((JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("JOB_NO_PREFIX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(JOB_NO_PREFIX));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(LOG_NO));
            if ((PRICES_VISIBLE_IN_JOB == null)) {
                throw new global::System.ArgumentNullException("PRICES_VISIBLE_IN_JOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PRICES_VISIBLE_IN_JOB));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(QUANTITY_DECIMAL));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(FOREIGN_CURRENCY_DECIMAL));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(TOTAL_AMOUNT_DECIMAL));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(UNIT_AMOUNT_DECIMAL));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(QUOTATION_NO));
            if ((COMPANY_REG_NO == null)) {
                throw new global::System.ArgumentNullException("COMPANY_REG_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(COMPANY_REG_NO));
            }
            if ((GST_REG_NO == null)) {
                throw new global::System.ArgumentNullException("GST_REG_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(GST_REG_NO));
            }
            if ((TRUCK_JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("TRUCK_JOB_NO_PREFIX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(TRUCK_JOB_NO_PREFIX));
            }
            if ((CULTURE == null)) {
                throw new global::System.ArgumentNullException("CULTURE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CULTURE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string RECORD_KEY, 
                    string TPT_CODE, 
                    string TPT_NAME, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string ADDRESS3, 
                    string ADDRESS4, 
                    int BOOKING_NO, 
                    int JOB_NO, 
                    string BOOKING_NO_PREFIX, 
                    string JOB_NO_PREFIX, 
                    int LOG_NO, 
                    string PRICES_VISIBLE_IN_JOB, 
                    int QUANTITY_DECIMAL, 
                    int FOREIGN_CURRENCY_DECIMAL, 
                    int TOTAL_AMOUNT_DECIMAL, 
                    int UNIT_AMOUNT_DECIMAL, 
                    int QUOTATION_NO, 
                    string COMPANY_REG_NO, 
                    string GST_REG_NO, 
                    string TRUCK_JOB_NO_PREFIX, 
                    string CULTURE, 
                    string Original_RECORD_KEY, 
                    string Original_TPT_CODE, 
                    string Original_TPT_NAME, 
                    string Original_ADDRESS1, 
                    string Original_ADDRESS2, 
                    string Original_ADDRESS3, 
                    string Original_ADDRESS4, 
                    int Original_BOOKING_NO, 
                    int Original_JOB_NO, 
                    string Original_BOOKING_NO_PREFIX, 
                    string Original_JOB_NO_PREFIX, 
                    int Original_LOG_NO, 
                    string Original_PRICES_VISIBLE_IN_JOB, 
                    int Original_QUANTITY_DECIMAL, 
                    int Original_FOREIGN_CURRENCY_DECIMAL, 
                    int Original_TOTAL_AMOUNT_DECIMAL, 
                    int Original_UNIT_AMOUNT_DECIMAL, 
                    int Original_QUOTATION_NO, 
                    string Original_COMPANY_REG_NO, 
                    string Original_GST_REG_NO, 
                    string Original_TRUCK_JOB_NO_PREFIX, 
                    string Original_CULTURE) {
            if ((RECORD_KEY == null)) {
                throw new global::System.ArgumentNullException("RECORD_KEY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RECORD_KEY));
            }
            if ((TPT_CODE == null)) {
                throw new global::System.ArgumentNullException("TPT_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TPT_CODE));
            }
            if ((TPT_NAME == null)) {
                throw new global::System.ArgumentNullException("TPT_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TPT_NAME));
            }
            if ((ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ADDRESS1));
            }
            if ((ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ADDRESS2));
            }
            if ((ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ADDRESS3));
            }
            if ((ADDRESS4 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ADDRESS4));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(BOOKING_NO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(JOB_NO));
            if ((BOOKING_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("BOOKING_NO_PREFIX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(BOOKING_NO_PREFIX));
            }
            if ((JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("JOB_NO_PREFIX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(JOB_NO_PREFIX));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(LOG_NO));
            if ((PRICES_VISIBLE_IN_JOB == null)) {
                throw new global::System.ArgumentNullException("PRICES_VISIBLE_IN_JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PRICES_VISIBLE_IN_JOB));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(QUANTITY_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(FOREIGN_CURRENCY_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(TOTAL_AMOUNT_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(UNIT_AMOUNT_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(QUOTATION_NO));
            if ((COMPANY_REG_NO == null)) {
                throw new global::System.ArgumentNullException("COMPANY_REG_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(COMPANY_REG_NO));
            }
            if ((GST_REG_NO == null)) {
                throw new global::System.ArgumentNullException("GST_REG_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(GST_REG_NO));
            }
            if ((TRUCK_JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("TRUCK_JOB_NO_PREFIX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(TRUCK_JOB_NO_PREFIX));
            }
            if ((CULTURE == null)) {
                throw new global::System.ArgumentNullException("CULTURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(CULTURE));
            }
            if ((Original_RECORD_KEY == null)) {
                throw new global::System.ArgumentNullException("Original_RECORD_KEY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_RECORD_KEY));
            }
            if ((Original_TPT_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_TPT_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_TPT_CODE));
            }
            if ((Original_TPT_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_TPT_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_TPT_NAME));
            }
            if ((Original_ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ADDRESS1));
            }
            if ((Original_ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ADDRESS2));
            }
            if ((Original_ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ADDRESS3));
            }
            if ((Original_ADDRESS4 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ADDRESS4));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_BOOKING_NO));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_JOB_NO));
            if ((Original_BOOKING_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("Original_BOOKING_NO_PREFIX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_BOOKING_NO_PREFIX));
            }
            if ((Original_JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NO_PREFIX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_JOB_NO_PREFIX));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_LOG_NO));
            if ((Original_PRICES_VISIBLE_IN_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_PRICES_VISIBLE_IN_JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_PRICES_VISIBLE_IN_JOB));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_QUANTITY_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_FOREIGN_CURRENCY_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_TOTAL_AMOUNT_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_UNIT_AMOUNT_DECIMAL));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_QUOTATION_NO));
            if ((Original_COMPANY_REG_NO == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANY_REG_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_COMPANY_REG_NO));
            }
            if ((Original_GST_REG_NO == null)) {
                throw new global::System.ArgumentNullException("Original_GST_REG_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_GST_REG_NO));
            }
            if ((Original_TRUCK_JOB_NO_PREFIX == null)) {
                throw new global::System.ArgumentNullException("Original_TRUCK_JOB_NO_PREFIX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_TRUCK_JOB_NO_PREFIX));
            }
            if ((Original_CULTURE == null)) {
                throw new global::System.ArgumentNullException("Original_CULTURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_CULTURE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TPT_CODE, 
                    string TPT_NAME, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string ADDRESS3, 
                    string ADDRESS4, 
                    int BOOKING_NO, 
                    int JOB_NO, 
                    string BOOKING_NO_PREFIX, 
                    string JOB_NO_PREFIX, 
                    int LOG_NO, 
                    string PRICES_VISIBLE_IN_JOB, 
                    int QUANTITY_DECIMAL, 
                    int FOREIGN_CURRENCY_DECIMAL, 
                    int TOTAL_AMOUNT_DECIMAL, 
                    int UNIT_AMOUNT_DECIMAL, 
                    int QUOTATION_NO, 
                    string COMPANY_REG_NO, 
                    string GST_REG_NO, 
                    string TRUCK_JOB_NO_PREFIX, 
                    string CULTURE, 
                    string Original_RECORD_KEY, 
                    string Original_TPT_CODE, 
                    string Original_TPT_NAME, 
                    string Original_ADDRESS1, 
                    string Original_ADDRESS2, 
                    string Original_ADDRESS3, 
                    string Original_ADDRESS4, 
                    int Original_BOOKING_NO, 
                    int Original_JOB_NO, 
                    string Original_BOOKING_NO_PREFIX, 
                    string Original_JOB_NO_PREFIX, 
                    int Original_LOG_NO, 
                    string Original_PRICES_VISIBLE_IN_JOB, 
                    int Original_QUANTITY_DECIMAL, 
                    int Original_FOREIGN_CURRENCY_DECIMAL, 
                    int Original_TOTAL_AMOUNT_DECIMAL, 
                    int Original_UNIT_AMOUNT_DECIMAL, 
                    int Original_QUOTATION_NO, 
                    string Original_COMPANY_REG_NO, 
                    string Original_GST_REG_NO, 
                    string Original_TRUCK_JOB_NO_PREFIX, 
                    string Original_CULTURE) {
            return this.Update(Original_RECORD_KEY, TPT_CODE, TPT_NAME, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, BOOKING_NO, JOB_NO, BOOKING_NO_PREFIX, JOB_NO_PREFIX, LOG_NO, PRICES_VISIBLE_IN_JOB, QUANTITY_DECIMAL, FOREIGN_CURRENCY_DECIMAL, TOTAL_AMOUNT_DECIMAL, UNIT_AMOUNT_DECIMAL, QUOTATION_NO, COMPANY_REG_NO, GST_REG_NO, TRUCK_JOB_NO_PREFIX, CULTURE, Original_RECORD_KEY, Original_TPT_CODE, Original_TPT_NAME, Original_ADDRESS1, Original_ADDRESS2, Original_ADDRESS3, Original_ADDRESS4, Original_BOOKING_NO, Original_JOB_NO, Original_BOOKING_NO_PREFIX, Original_JOB_NO_PREFIX, Original_LOG_NO, Original_PRICES_VISIBLE_IN_JOB, Original_QUANTITY_DECIMAL, Original_FOREIGN_CURRENCY_DECIMAL, Original_TOTAL_AMOUNT_DECIMAL, Original_UNIT_AMOUNT_DECIMAL, Original_QUOTATION_NO, Original_COMPANY_REG_NO, Original_GST_REG_NO, Original_TRUCK_JOB_NO_PREFIX, Original_CULTURE);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TPT_SPECIAL_DATA_TblTableAdapter _tPT_SPECIAL_DATA_TblTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TPT_SPECIAL_DATA_TblTableAdapter TPT_SPECIAL_DATA_TblTableAdapter {
            get {
                return this._tPT_SPECIAL_DATA_TblTableAdapter;
            }
            set {
                this._tPT_SPECIAL_DATA_TblTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tPT_SPECIAL_DATA_TblTableAdapter != null) 
                            && (this._tPT_SPECIAL_DATA_TblTableAdapter.Connection != null))) {
                    return this._tPT_SPECIAL_DATA_TblTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tPT_SPECIAL_DATA_TblTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DstTransportSpecialData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tPT_SPECIAL_DATA_TblTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TPT_SPECIAL_DATA_Tbl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tPT_SPECIAL_DATA_TblTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DstTransportSpecialData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tPT_SPECIAL_DATA_TblTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TPT_SPECIAL_DATA_Tbl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tPT_SPECIAL_DATA_TblTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DstTransportSpecialData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tPT_SPECIAL_DATA_TblTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TPT_SPECIAL_DATA_Tbl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tPT_SPECIAL_DATA_TblTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DstTransportSpecialData dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tPT_SPECIAL_DATA_TblTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tPT_SPECIAL_DATA_TblTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tPT_SPECIAL_DATA_TblTableAdapter != null)) {
                    revertConnections.Add(this._tPT_SPECIAL_DATA_TblTableAdapter, this._tPT_SPECIAL_DATA_TblTableAdapter.Connection);
                    this._tPT_SPECIAL_DATA_TblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tPT_SPECIAL_DATA_TblTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tPT_SPECIAL_DATA_TblTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tPT_SPECIAL_DATA_TblTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tPT_SPECIAL_DATA_TblTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tPT_SPECIAL_DATA_TblTableAdapter != null)) {
                    this._tPT_SPECIAL_DATA_TblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tPT_SPECIAL_DATA_TblTableAdapter]));
                    this._tPT_SPECIAL_DATA_TblTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591