//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FM.TransportPlanning.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=IPL-SUPPORT\\INNOSQLMASTER;Initial Catalog=FM72_Testing;Integrated Sec" +
            "urity=True")]
        public string FM72_TestingConnectionString {
            get {
                return ((string)(this["FM72_TestingConnectionString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=ACER-47CBE8A5ED\\SQLEXPRESS;Initial Catalog=FM72_TESTING;Integrated Se" +
            "curity=True")]
        public string FM72_TESTINGConnectionString1 {
            get {
                return ((string)(this["FM72_TESTINGConnectionString1"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=SUPPORTSRV\\INNOSQLMASTER;Initial Catalog=FM80_Transport_Testing;Integ" +
            "rated Security=True")]
        public string FM80_Transport_TestingConnectionString {
            get {
                return ((string)(this["FM80_Transport_TestingConnectionString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=SUPPORTSRV\\INNOSQLMASTER;Initial Catalog=FM72_JE_TESTING;Integrated S" +
            "ecurity=True")]
        public string FM72_JE_TESTING_supportsrv_innosqlmaster {
            get {
                return ((string)(this["FM72_JE_TESTING_supportsrv_innosqlmaster"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=SUPPORTSRV\\INNOSQLMASTER;Initial Catalog=FM80_Testing;Integrated Secu" +
            "rity=True")]
        public string FM80_TestingConnectionString {
            get {
                return ((string)(this["FM80_TestingConnectionString"]));
            }
        }
    }
}
